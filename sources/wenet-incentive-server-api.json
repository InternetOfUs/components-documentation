{
  "openapi": "3.0.0",
  "info": {
    "description": "Incentive Server APIs",
    "version": "1.0.0",
    "title": "Incentive Server APIs",
    "contact": {
      "name": "Daniel Benzaken",
      "email": "Benzaked@post.bgu.il"
    }
  },
  "tags": [
    {
      "name": "event_update",
      "description": "update event"
    },
    {
      "name": "queries",
      "description": "get information regardind incentives"
    },
    {
      "name": "norms",
      "description": "post, update and  get norms."
    },
    {
      "name": "operations",
      "description": "make online changes"
    }
  ],
  "paths": {
    "/users/{user_id}/intelligences": {
      "post": {
        "tags": [
          "operations"
        ],
        "summary": "add or update Intelligences for the user",
        "operationId": "user_Intelligences",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The identifier of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/intelligences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "successful operation"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/personality": {
      "post": {
        "tags": [
          "operations"
        ],
        "summary": "adds or update personality for the user",
        "operationId": "user_personality",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The identifier of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/personality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "successful operation"
                }
              }
            }
          },
          "400": {
            "description": "wrong user id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 1234,
                      "message": "wrong user id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "tags": [
          "event_update"
        ],
        "summary": "adds a new event",
        "operationId": "event_update",
        "description": "adds an event",
        "responses": {
          "200": {
            "description": "event saved"
          },
          "400": {
            "description": "event object invalid"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/event"
              }
            }
          },
          "description": "event to add"
        }
      }
    },
    "/users/{user_id}/norm": {
      "post": {
        "tags": [
          "norms"
        ],
        "summary": "adds a user norm",
        "operationId": "user_norm_update",
        "description": "adds an user norm",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The identifier of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "norm saved"
          },
          "400": {
            "description": "wrong user id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 1234,
                      "message": "wrong user id"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/norm"
              }
            }
          },
          "description": "event to add"
        }
      },
      "get": {
        "tags": [
          "norms"
        ],
        "summary": "get the user norms",
        "operationId": "get_user_norms",
        "description": "get the user norms",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The identifier of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful search",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/norms"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong user id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 1234,
                      "message": "wrong user id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/community/{community_id}/norm": {
      "post": {
        "tags": [
          "norms"
        ],
        "summary": "adds a community norm",
        "operationId": "community_norm_update",
        "description": "adds a community norm",
        "parameters": [
          {
            "in": "path",
            "name": "community_id",
            "description": "The identifier of the community.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "norm saved"
          },
          "400": {
            "description": "wrong user id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 12345,
                      "message": "wrong community id"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/norm"
              }
            }
          },
          "description": "norm to add"
        }
      },
      "get": {
        "tags": [
          "norms"
        ],
        "summary": "get the community norms",
        "operationId": "get_community_norms",
        "description": "get the community norms",
        "parameters": [
          {
            "in": "path",
            "name": "community_id",
            "description": "The identifier of the community.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful search",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/norms"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong community id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 12345,
                      "message": "wrong community id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/norm": {
      "post": {
        "tags": [
          "norms"
        ],
        "summary": "Adds a general norm",
        "operationId": "general_norm_update",
        "description": "adds an general norm",
        "responses": {
          "200": {
            "description": "norm saved"
          },
          "400": {
            "description": "norm object invalid"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/norm"
              }
            }
          },
          "description": "norm to add"
        }
      },
      "get": {
        "tags": [
          "norms"
        ],
        "summary": "get a general norm",
        "operationId": "get_general_norm",
        "description": "get a general norm",
        "parameters": [
          {
            "in": "header",
            "name": "norm_id",
            "description": "The identifier of the norm.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful search",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/norm"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong community id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 125,
                      "message": "wrong norm id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/norms/{norm_id}": {
      "put": {
        "tags": [
          "norms"
        ],
        "summary": "Update the values by norm ID",
        "description": "Update a norm by id.",
        "operationId": "update_norm",
        "parameters": [
          {
            "name": "norm_id",
            "in": "path",
            "description": "The identifier of the norm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/u_norm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated community",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/u_norm"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/u_norm"
                }
              }
            }
          },
          "400": {
            "description": "wrong community id.",
            "content": {
              "application/json": {
                "examples": {
                  "Default Response": {
                    "value": {
                      "code": 125,
                      "message": "wrong norm id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/community{community_id}/apps/{app_id}/incentive": {
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "searches for all incentive infos of a community of users",
        "operationId": "community_incentive",
        "description": "searches for a community of users of a specific application and returns incentive information of the users.\n",
        "parameters": [
          {
            "in": "path",
            "name": "community_id",
            "description": "the community id to search",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "app_id",
            "description": "the app that the user pagination",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful search",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/incentive_info_community"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad app_id parameter"
          }
        }
      }
    },
    "/users{user_id}/apps/{app_id}/incentive": {
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "searches for user incentive info",
        "operationId": "user_incentive",
        "description": "searches for a user of a specific application and returns incentive information of that user.\n",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "the user id to search",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "app_id",
            "description": "the app that the user pagination",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "community_id",
            "description": "the community id  which the incentive relates",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful search",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/incentive_info_user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad app_id"
          }
        }
      }
    },
    "/disable_interventions": {
      "get": {
        "tags": [
          "operations"
        ],
        "summary": "disable the interventions server",
        "operationId": "disable_interventions",
        "parameters": [
          {
            "in": "query",
            "name": "reason",
            "description": "The user's reason for disabling the interventions server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "disable the interventions server\n",
        "responses": {
          "200": {
            "description": "successfuly disabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          }
        }
      }
    },
    "/enable_interventions": {
      "get": {
        "tags": [
          "operations"
        ],
        "summary": "enable the interventions server",
        "operationId": "enable_interventions",
        "parameters": [
          {
            "in": "query",
            "name": "reason",
            "description": "The user's reason for enabling the interventions server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "enable the interventions server\n",
        "responses": {
          "200": {
            "description": "successfuly enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "event": {
        "type": "object",
        "required": [
          "project_id",
          "user_id",
          "country_name",
          "city_name",
          "subject_ids"
        ],
        "properties": {
          "project_id": {
            "type": "integer",
            "example": 12345
          },
          "user_id": {
            "type": "integer",
            "example": 12345
          },
          "country_name": {
            "type": "string",
            "example": "Isreal"
          },
          "city_name": {
            "type": "string",
            "example": "Tel-Aviv"
          },
          "subject_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              203,
              865
            ]
          }
        }
      },
      "norm": {
        "type": "object",
        "required": [
          "Location",
          "Type",
          "Size",
          "frequncy",
          "channel"
        ],
        "properties": {
          "norm_id": {
            "type": "string",
            "example": 6687483,
            "description": "the identifier of the norm"
          },
          "Location": {
            "type": "string",
            "example": "Europe"
          },
          "Type": {
            "type": "string",
            "example": "Massege"
          },
          "Size": {
            "type": "integer",
            "example": 128
          },
          "frequncy": {
            "type": "integer",
            "example": 500
          },
          "channel": {
            "type": "string",
            "example": "web"
          }
        }
      },
      "norms": {
        "type": "object",
        "properties": {
          "norms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/norm"
            }
          }
        }
      },
      "u_norm": {
        "type": "object",
        "properties": {
          "norm_id": {
            "type": "string",
            "example": 6687483
          },
          "Location": {
            "type": "string",
            "example": "Europe"
          },
          "Type": {
            "type": "string",
            "example": "Massege"
          },
          "Size": {
            "type": "integer",
            "example": 128
          },
          "frequncy": {
            "type": "integer",
            "example": 500
          },
          "channel": {
            "type": "string",
            "example": "web"
          }
        }
      },
      "incentive_info_user": {
        "type": "object",
        "required": [
          "user_id",
          "incentive_type",
          "incentive_quantity"
        ],
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 12345
          },
          "incentive_type": {
            "type": "integer",
            "example": 2
          },
          "incentive_quantity": {
            "type": "number",
            "format": "float",
            "example": 0.89
          }
        }
      },
      "incentive_info_community": {
        "type": "object",
        "required": [
          "user_id",
          "incentive_type",
          "incentive_quantity"
        ],
        "properties": {
          "community_id": {
            "type": "integer",
            "example": 12345
          },
          "incentive_type": {
            "type": "integer",
            "example": 2
          },
          "incentive_quantity": {
            "type": "number",
            "format": "float",
            "example": 0.89
          }
        }
      },
      "intelligences": {
        "type": "object",
        "properties": {
          "verbal": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The verbal intelligence",
            "format": "double",
            "example": 0.1
          },
          "logic_mathematics": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The logic-mathematics intelligence",
            "format": "double",
            "example": 0.2
          },
          "visual_spatial": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The visual-spatial intelligence",
            "format": "double",
            "example": 0.3
          },
          "kinestesica_corporal": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The kinestesica-corporal intelligence",
            "format": "double",
            "example": 0.4
          },
          "musical_rhythmic": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The musical-rhythmic intelligence",
            "format": "double",
            "example": 0.5
          },
          "intrapersonal": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The intrapersonal intelligence",
            "format": "double",
            "example": 0.6
          },
          "interpersonal": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The interpersonal intelligence",
            "format": "double",
            "example": 0.7
          },
          "naturalist_environmental": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The naturalist-environmental intelligence",
            "format": "double",
            "example": 0.8
          }
        },
        "description": "Provide information about the intelligences of a person"
      },
      "personality": {
        "type": "object",
        "properties": {
          "perception": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The perception grade of a person",
            "format": "double",
            "example": 0.1
          },
          "judgment": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The judgment grade of a person",
            "format": "double",
            "example": 0.2
          },
          "extrovert": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The extrovert grade of a person",
            "format": "double",
            "example": 0.3
          },
          "attitude": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "The attitude grade of a person",
            "format": "double",
            "example": 0.4
          }
        },
        "description": "Provide information about the personality of a person"
      }
    }
  }
}