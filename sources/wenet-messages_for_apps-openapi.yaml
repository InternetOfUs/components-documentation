openapi: 3.0.1
info:
  title: WeNet - Messages for the Applications
  description: This document collects the models describing the messages that the WeNet application is going to create and provide to application as responses for the users. In particular, there are going to be two type of messages

    * textual messages represent simple and general purpose messages used for notifying users about the conversation development (e.g. confirmations, errors, ...)

    * task notifications represent task dedicated messages providing information about the development of an ongoing task (e.g. there is a new volunteer for a task, there is a new task a user may be interested in, ...)


    Any application built on top of the WeNet platform will need to expose a dedicated endpoint where the messages for the application are going to be posted by WeNet.
    Such endpoint is going to be specified in the application configuration.

  contact:
    email: carlo.caprini@u-hopper.com
  version: 1.0.0

components:
  schemas:

    BaseMessage:
      type: object
      properties:
        type:
          type: string
          description: The type of the message (either message or taskNotification)
          enum:
            - textualMessage
            - taskNotification
            - event

    Event:
      description: An event about something that happened in WeNet
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
      properties:
        type:
          example: event
          description: The event message type
          enum:
            - event
        eventType:
          type: string
          enum:
            - newUserForPlatform
          description: The event type

    NewUserForPlatform:
      description: A new user activated an app platform
      allOf:
        - $ref: '#/components/schemas/Event'
      properties:
        eventType:
          example: newUserForPlatform
        app:
          type: string
          example: a6822c47-f1b8-4c21-80bd-1d025266c3c7
          description: The associated app id
        userId:
          description: Wenet user id
          type: string
          example:
        platform:
          type: string
          example: telegram
          enum:
            - telegram

    Message:
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
      properties:
        type:
          type: string
          description: The type of the message (either message or taskNotification)
          enum:
            - textualMessage
            - taskNotification
        recipientId:
          type: string
          description: The WeNet identifier of the user the message is meant for
          example: a6822c47-f1b8-4c21-80bd-1d025266c3c7
        title:
          type: string
          description: The title of the message
        text:
          type: string
          description: The message for the user

    TextualMessage:
      description: A simple textual message from WeNet to the user
      allOf:
        - $ref: '#/components/schemas/Message'
      properties:
        type:
          example: textualMessage
          description: The textual message type
          enum:
            - textualMessage
        title:
          example: Task created
        text:
          example: Congrats, your new task has been correcly created!

    TaskNotification:
      description: A message regarding a task, it could be about

        * a task proposal to a possible volunteer

        * a volunteer proposal to the task creator

        * a message about an activa task exchanged between two task participants

        * the conclusion of a task
      allOf:
        - $ref: '#/components/schemas/Message'
      properties:
        type:
          example: taskNotification
          description: The task notification type
          enum:
            - taskNotification
        taskId:
          type: string
          description: The identifier of the target task
          example: 28961582-84d2-41d1-b555-c09dce046831
        # task:
        notificationType:
          type: string
          enum:
            - taskProposal
            - taskVolunteer
            - messageFromUser
            - taskConcluded
          example: taskProposal

    TaskProposalNotification:
      description: This notification is used in order to propose a user to volunteer to a newly created task
      allOf:
        - $ref: '#/components/schemas/TaskNotification'
      properties:
        notificationType:
            type: string
            enum:
              - taskProposal
        title:
          example: A new task for you
        text:
          example: A new task you may be interested in has just been created, check it out!

    TaskVolunteerNotification:
      description: This notification is used in order to notify the task creator that a new volunteer is proposing to participate to the task
      allOf:
        - $ref: '#/components/schemas/TaskNotification'
      properties:
        notificationType:
          example: taskVolunteer
          enum:
            - taskVolunteer
        volunteerId:
          type: string
          description: The wenet id of the user who is volunteering for the task
        title:
          example: A new volunteer for your task
        text:
          example: A user volunteer to participate in your task, check him out!

    TaskSelectionNotification:
      description: This notification is used in order to notify the user who volunteered about the decision of the task creator
      allOf:
        - $ref: '#/components/schemas/TaskNotification'
      properties:
        notificationType:
          example: selectionVolunteer
          enum:
            - selectionVolunteer
        title:
          example: You have been accepted as volunteer
        text:
          example: Cool! You will be participating to the task!
        outcome:
          type: string
          enum:
            - accepted
            - refused
          example: accepted

    MessageFromUserNotification:
      description: This notification is used in order to send a message exchanged between two participants to the same task
      allOf:
        - $ref: '#/components/schemas/TaskNotification'
      properties:
        notificationType:
          example: messageFromUser
          enum:
            - messageFromUser
        senderId:
          type: string
          description: The wenet id of the user who wrote the message for the recipient user
          example: ef3990b4-d75e-4339-b78a-125c23ab4614
        title:
          example: Message from Paperino
        text:
          description: The text written by the sender user
          example: Cool, loking forward to participate to your task!

    TaskConcludedNotification:
      description: This notification is used in order to notify task participants that a task has been completed, the outcome could be

        * successfull (if completed correctly)

        * failed (if something went wrong)

        * cancelled (the creator cancelled the task)
      allOf:
        - $ref: '#/components/schemas/TaskNotification'
      properties:
        notificationType:
          type: string
          enum:
            - taskConcluded
        outcome:
          type: string
          description: The outcome of the task (has it been completed with success or not)
          enum:
            - cancelled
            - completed
            - failed
          example: completed
        title:
          example: Task concluded
        text:
          example: The task was successfully completed, grat job!
