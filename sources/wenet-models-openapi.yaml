openapi: 3.0.1
info:
  title: WeNet - Common models
  description: This document collects all the models common to the various components of the platform.

  contact:
    email: carlo.caprini@u-hopper.com
  version: 1.0.0

components:
  schemas:

    CreateUpdateTsDetails:
      type: object
      properties:
        _creationTs:
          type: integer
          readOnly: true
          description: The UTC epoch timestamp representing the creation instant.
          example: 1563871899
        _lastUpdateTs:
          type: integer
          readOnly: true
          description: The UTC epoch timestamp representing the last update instant.
          example: 1563898764

    NormOperator:
      type: string
      description: The operator of the norm
      enum:
        - EQUALS
        - LESS_THAN
        - GREATER_THAN
        - LESS_EQ_THAN
        - GREATER_EQ_THAN

    Norm:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the norm
          example: 15837028-645a-4a55-9aaf-ceb846439eba
          readOnly: true
        attribute:
          type: string
          description: The name of the attribute whose value the norm should be compared to
          example: "has_car"
        operator:
          $ref: '#/components/schemas/NormOperator'
        comparison:
          type: string
          description: The norm value for the comparison
          example: true
        negation:
          type: boolean
          description: Specified if a negation operator should be applied
          example: true
          default: true

    # User profile

    PlannedActivity:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the activity
          readOnly: true
          example: hfdsfs888
        startTime:
          type: string
          format: date-time
          description: The starting time of the activity
          example: 2019-07-21T14:30:00Z
        endTime:
          type: string
          format: date-time
          description: The ending time of the activity
          example: 2019-07-21T15:30:00Z
        description:
          type: string
          description: The description of the activity
          example: A few beers for relaxing
        attendees:
          type: array
          items:
            type: string
            description: The identifier of other wenet user taking part to the activity
            example: 15d85f1d-b1ce-48de-b221-bec9ae954a88
        status:
          type: string
          description: The current status of the activity
          enum:
            - confirmed
            - tentative
            - cancelled
          example: confirmed

    RelevantLocation:
      type: object
      description: A location of interest for the user - may be the home or work location -. This information is generated by the platform AI.
      properties:
        id:
          type: string
          description: The identifier of the location
          readOnly: true
          example: kdjfghd8hikdfg
        label:
          type: string
          description: The descriptor of the location
          example: Home
        latitude:
          type: number
          description: The latitude of the location
          example: 40.388756
        longitude:
          type: number
          description: The latitude of the location
          example: -3.588622

    Material:
      type: object
      description: It describes an object that is available to a user
      properties:
        name:
          type: string
          description: The name of the object
          example: car
        description:
          type: string
          description: A description of the object
          example: Fiat 500
        quantity:
          type: integer
          description: The amount of units available
          example: 1
        classification:
          type: string
          description: The classification used for representing the object

            - Global Product Classification (https://www.gs1.org/standards/gpc)

            - NICE classification (Classification of Goods and Services)
          example: nice

    Competence:
      type: object
      description: It describe a competence of a user
      properties:
        name:
          type: string
          description: The name of the competence
          example: language_Italian_C1
        ontology:
          type: string
          description: The identifier of the competence
          example: esco
        level:
          type: number
          description: The identifier of the competence (value in between 0 and 1, both included)
          example: 0.8

    Meaning:
      type: object
      description: For defining more general purpose concepts
      properties:
        name:
          type: string
          description: The name of the concept represented by the meaning
          example: extraversion
        category:
          type: string
          description: The category associated to the menaing
          example: big_five
        level:
          type: number
          description: The level associated to the concept
          example: 0.8

    SocialPractice:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the social practice
          readOnly: true
          example: f9dofgljdksdf
        label:
          type: string
          description: The descriptor of the social practice
          example: commuter
        materials:
          type: array
          items:
            $ref: '#/components/schemas/Material'
        competences:
          type: array
          items:
            $ref: '#/components/schemas/Competence'
        norms:
          type: array
          description: The norms of the social practice
          items:
            $ref: '#/components/schemas/Norm'

    SocialNetworkRelationship:
      type: object
      properties:
        userId:
          type: string
          description: The identifier of the wenet user the relationship is related to
          example: 4c51ee0b-b7ec-4577-9b21-ae6832656e33
        type:
          type: string
          description: The relationship type
          enum:
            - friend
            - colleague
            - follower
            - family
            - acquaintance
          example: friend
        weight:
          type: number
          nullable: true
          description: A number from 0 to 1 that indicates the strength of the relation. 0 indicates a deleted/non-exisiting relation.
          example: 0.2

    Label:
      type: object
      description: label
      properties:
        name:
          type: string
          description: name of the label
        semantic_class:
          type: number
          description: number that represent the category of the label
        latitude:
          type: number
          description: latitude of the label for the user
        longitude:
          type: number
          description: longitude of the label for the user

    ScoredLabel:
      type: object
      description: Label with score
      properties:
        label:
          $ref: '#/components/schemas/Label'
        score:
          type: number
          description: score of the label
    Routine:
      type: object
      description: 'Labels distribution for a given user, time and weekday'
      properties:
        user_id:
          type: string
          description: id of the user
        weekday:
          type: string
          description: day of the week
        label_distribution:
          description: 'Time slots'
          type: object
          additionalProperties:
            description: 'Distribution of the labels'
            type: array
            items:
              $ref: '#/components/schemas/ScoredLabel'
        confidence:
          type: number
          description: confidence of the result

    CoreWeNetUserProfile:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UserName'
        dateOfBirth:
          type: object
          properties:
            year:
              type: integer
              example: 1976
              description: The year of birth
              nullable: true
            month:
              type: integer
              example: 4
              description: "The month of birth, from 1 to 12 (1: Jan and 12: Dec)"
              nullable: true
            day:
              type: integer
              example: 23
              description: The day of the month
              nullable: true
        gender:
          type: string
          enum:
            - M
            - F
            - O
          example: F
          nullable: true
        email:
          type: string
          description: The user email
          format: email
          example: john.doe@gmail.com
          nullable: true
        phoneNumber:
          type: string
          description: The user phone number
          example: +34 6888233133
          nullable: true
        locale:
          type: string
          description: The locale of the user
          example: es_ES
          nullable: true
        avatar:
          type: string
          description: The url to the image avatar
          nullable: true
        nationality:
          type: string
          description: The nationality of the user
          example: Spanish
          nullable: true
        occupation:
          type: string
          description: The occupation of the user
          example: nurse
          nullable: true

    UserName:
      type: object
      properties:
        first:
          type: string
          description: The first name of the user
          example: John
          nullable: true
        middle:
          type: string
          description: The middle name of the user
          example: Francis
          nullable: true
        last:
          type: string
          description: The last name of the user
          example: Doe
          nullable: true
        prefix:
          type: string
          description: The name prefix
          example: Dr.
          nullable: true
        suffix:
          type: string
          description: The suffix of the name
          example: Jr.
          nullable: true

    WeNetUserProfile:
      allOf:
        - $ref: '#/components/schemas/CoreWeNetUserProfile'
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      properties:
        id:
          type: string
          description: The identifier of the WeNet user
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        norms:
          type: array
          description: The individual norms of the user
          items:
            $ref: '#/components/schemas/Norm'
        plannedActivities:
          type: array
          items:
            $ref: '#/components/schemas/PlannedActivity'
        relevantLocations:
          type: array
          items:
            $ref: '#/components/schemas/RelevantLocation'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/SocialNetworkRelationship'
        personalBehaviors:
          type: array
          items:
            $ref: '#/components/schemas/Routine'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/Material'
        competences:
          type: array
          items:
            $ref: '#/components/schemas/Competence'
        meanings:
          type: array
          items:
            $ref: '#/components/schemas/Meaning'

    # Tasks

    TaskTransactionType:
      type: object
      properties:
        label:
          type: string
          example: acceptVolunteer
        description:
          type: string
          description: A human readable description of the task objective.
          example: A task for organizing social dinners
        attributes:
          type: array
          description: The attribute that has to be instantiated when create the task of this type.
          items:
            $ref: '#/components/schemas/TaskAttributeType'

    TaskType:
      type: object
      description: Describe a type of task that can be done by the users.
      properties:
        id:
          type: string
          description: Identifier of the type
          readOnly: true
          example: 4a559aafceb8464
        name:
          type: string
          description: A name that identify the type.
          example: Eat together task
        description:
          type: string
          description: A human readable description of the task objective.
          example: A task for organizing social dinners
        keywords:
          type: array
          description: The keywords that describe the task type.
          example:
            - social interaction
            - eat
          items:
            type: string
        # norms:
        #   type: array
        #   description: The norms that describe the interaction of the users to do the tasks of this type.
        #   items:
        #     $ref: '#/components/schemas/Norm'
        attributes:
          type: array
          description: The attribute that has to be instantiated when create the task of this type.
          items:
            $ref: '#/components/schemas/TaskAttributeType'
        transactions:
          type: array
          description: The supported transaction types for the task
          items:
            $ref: '#/components/schemas/TaskTransactionType'
        # constants:
        #   type: array
        #   description: The attribute with a fixed value.
        #   items:
        #     $ref: '#/components/schemas/TaskAttribute'

    TaskAttributeType:
      type: object
      description: Describe an attribute that has to be initialized whne start a task of an specific type.
      properties:
        name:
          type: string
          description: The name of the attribute.
          example: communityId
        description:
          type: string
          description: A human readable description of the attribute.
          example: The identifier of the community.
        type:
          type: string
          enum: [string, number, boolean, profileId]
          description: >
             The type of the attribute values. It can be:
             * 'string' - If it is a string value.
             * 'number' - If it is a number value.
             * 'boolean' - If it is a boolean value.
             * 'profileId' - If it represent the identifier of a WeNet user.
        isArray:
          type: boolean
          description: This is 'true' if teh attribute is an array of values of the specified type.
          default: false

    HumanDescription:
      description:                           The attributes used to identify and describe a model for an human.
      properties:
        name:
          type:                              string
          description:                       A name that identify the model.
          example:                           Eat together task
          nullable:                          false
        description:
          type:                              string
          description:                       A human readable description of the model.
          example:                           A task for organizing social dinners
          nullable:                          true
        keywords:
          type:                              array
          description:                       The keywords that describe the model.
          nullable:                          true
          example:
            - social interaction
            - eat
          items:
            type:                            string

    Task:
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      description: A wenet task
      properties:
        id:
          type: string
          description: The unique identifier of the task
          readOnly: true
          example: b129e5509c9bb79
        taskTypeId:
          type: string
          description: The identifier of the task type associated to the task
          example: b129e5509c9bb79
          nullable: false
        appId:
          type: string
          description: The identifier of the aplication where the task is done
          nullable: false
          example: b129e5509c9bb79
        communityId:
          type: string
          description: The identifier of the community in which the task is going to be shared
          readOnly: false
          nullable: true
          example: b129e5509c9bb79
        requesterId:
          type: string
          description: The identifier of the WeNet user who created the task
          example: 15837028-645a-4a55-9aaf-ceb846439eba
          nullable: false
        goal:
          type: object
          description: The explanation of the task objective.
          nullable: false
          allOf:
            - $ref: '#/components/schemas/HumanDescription'
        closeTs:
          type: integer
          description: The UTC epoch timestamp representing the time the task is closed. It is `null` as long as the task is not closed.
          nullable: true
          example: 1563930000
        norms:
          type: array
          description: The set of norms that define the interaction of the user when do the task
          items:
            $ref: '#/components/schemas/Norm'
        attributes:
          type: object
          description: The set of attributes that define the task
        transactions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TaskTransaction'

    Message:
      type: object
      properties:
        appId:
          type: string
          description: ID of the Wenet application related to the message
          example: 822jhluNZP
        communityId:
          type: string
          description: ID of the community related to the message
        taskId:
          type: string
          description: The identifier of the target task
          example: 28961582-84d2-41d1-b555-c09dce046831
        receiverId:
          type: string
          description: The Wenet user ID of the recipient of the message
          example: a6822c47-f1b8-4c21-80bd-1d025266c3c7
        contentType:
          type: string
          example: task
        label:
          type: string
          description: The type of the message
          example: TaskVolunteerNotification
        attributes:
          type: object
          description: the attributes of the message, as key-value pairs.

    TaskTransaction:
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      description: A task transition
      properties:
        id:
          description: The unique identified of the transaction
          example: 9dihugkdjfgndfg
          type: string
          nullable: false
          readonly: true
        taskId:
          description: The unique identifier this transaction is associated to
          example: b129e5509c9bb79
          type: string
          nullable: false
        label:
          type: string
          description: The label associated to the transaction type
          nullable: false
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string
        messages:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Message'


    VolunteerForTaskTransaction:
      type: object
      description: Task transaction that says that a new volunteer has applied to a task
      properties:
        id:
          desc
        taskId:
          description: The unique identifier of the task this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          enum:
          - volunteerForTask
          description: The label associated to the transaction type
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
          properties:
            volunteerId:
              description: The ID of the volunteer that applied to the task
              type: string
              example: d353Sdt3E
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string

    RefuseTaskTransaction:
      type: object
      description: Task transaction that says that a volunteer has refused to apply to a task
      properties:
        taskId:
          description: The unique identifier of the task this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          enum:
          - refuseTask
          description: The label associated to the transaction type
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
          properties:
            volunteerId:
              description: The ID of the volunteer that applied to the task
              type: string
              example: d353Sdt3E
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string

    AcceptedVolunteerTransaction:
      type: object
      description: Task transaction that says that a volunteer has been accepted to participate to the task
      properties:
        taskId:
          description: The unique identifier of the task this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          enum:
          - acceptVolunteer
          description: The label associated to the transaction type
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
          properties:
            volunteerId:
              description: The ID of the volunteer that is being accepted to the task
              type: string
              example: d353Sdt3E
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string

    RefusedVolunteerTransaction:
      type: object
      description: Task transaction that says that a volunteer has been refused to participate to the task
      properties:
        taskId:
          description: The unique identifier of the task this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          enum:
          - refuseVolunteer
          description: The label associated to the transaction type
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
          properties:
            volunteerId:
              description: The ID of the volunteer that is being refused to the task
              type: string
              example: d353Sdt3E
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string

    TaskCompletedTransaction:
      type: object
      description: Task transaction that says that the task is completed
      properties:
        taskId:
          description: The unique identifier of the task this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          enum:
          - taskCompleted
          description: The label associated to the transaction type
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
          properties:
            outcome:
              description: A description of the outcome of the task
              type: string
              enum:
              - completed
              - cancelled
              - failed
        actioneerId:
          description: The identifier of the user that want to change the task
          example: b129e5509c9bb79
          nullable: false
          type: string

    CommunityProfile:
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      properties:
        id:
          type: string
          description: The identifier of the community.
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        appId:
          type: string
          description: The identifier of the application where the community is defined.
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        name:
          type: string
          description: The name of the community.
        description:
          type: string
          description: The description of the community.
        keywords:
          type: array
          description: The keywords that describe the community.
          items:
            type: string
        members:
          type: array
          description: The members of the community.
          items:
            $ref: '#/components/schemas/CommunityMember'
        socialPractices:
          type: array
          description: The social practice that are done into the community
          items:
            $ref: '#/components/schemas/SocialPractice'
        norms:
          type: array
          description: The norms that regulates the community.
          items:
            $ref: '#/components/schemas/Norm'
      description: A community of WeNet users.

    CommunityMember:
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      properties:
        userId:
          type: string
          description: The identifier of the user that is on the community.
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        privileges:
          type: array
          description: The keywords that describe the community.
          items:
            type: string
      description: A member of a community.

    Incentive:
      type: object
      required:
        - AppID
        - UserId
        - IncentiveType
        - Issuer
      properties:
        AppID:
          type: string
          example: 1
        UserId:
          type: string
          example: 6
        IncentiveType:
          type: string
          example: Message/Badge (only one)
        Issuer:
          type: string
          example: WeNet issuer
        Message:
          type: object
          properties:
            content:
              type: string
              example: >-
                we are happy to see your participation in the I-log app you are
                doing a great job!
        Badge:
          type: object
          properties:
            BadgeClass:
              type: string
              example: hpqAdI7hQf2maQ13AW1jXA
            ImgUrl:
              type: string
              example: >-
                http://3.126.161.118:8000/media/uploads/badges/assertion-OYmfmtDFSIKG-qeZfXz4QQ.png
            Criteria:
              type: string
              example: The user will get this badge for 50 relations in tweeter.
            Message:
              type: string
              example: >-
                congratulations! you just earned a new badge for your relations
                on tweeter.
