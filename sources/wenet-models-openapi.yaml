openapi: 3.0.1
info:
  title: WeNet - Common models
  description: This document collects all the models common to the various components of the platform.

  contact:
    email: carlo.caprini@u-hopper.com
  version: 1.0.0

components:
  schemas:

    CreateUpdateTsDetails:
      type: object
      properties:
        _creationTs:
          type: integer
          readOnly: true
          description: The timestamp representing the account creation instant
          example: 1563871899
        _lastUpdateTs:
          type: integer
          readOnly: true
          description: The timestamp representing the last update instant
          example: 1563898764

    NormOperator:
      type: string
      description: The operator of the norm
      enum:
        - EQUALS
        - LESS_THAN
        - GREATER_THAN
        - LESS_EQ_THAN
        - GREATER_EQ_THAN

    Norm:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the norm
          example: 15837028-645a-4a55-9aaf-ceb846439eba
          readOnly: true
        attribute:
          type: string
          description: The name of the attribute whose value the norm should be compared to
          example: "has_car"
        operator:
          $ref: '#/components/schemas/NormOperator'
        comparison:
          type: string
          description: The norm value for the comparison
          example: true
        negation:
          type: boolean
          description: Specified if a negation operator should be applied
          example: true
          default: true

    # User profile

    PlannedActivity:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the activity
          readOnly: true
          example: hfdsfs888
        startTime:
          type: string
          format: date-time
          description: The starting time of the activity
          example: 2019-07-21T14:30:00Z
        endTime:
          type: string
          format: date-time
          description: The ending time of the activity
          example: 2019-07-21T15:30:00Z
        description:
          type: string
          description: The description of the activity
          example: A few beers for relaxing
        attendees:
          type: array
          items:
            type: string
            description: The identifier of other wenet user taking part to the activity
            example: 15d85f1d-b1ce-48de-b221-bec9ae954a88
        status:
          type: string
          description: The current status of the activity
          enum:
            - confirmed
            - tentative
            - cancelled
          example: confirmed

    RelevantLocation:
      type: object
      description: A location of interest for the user - may be the home or work location -. This information is generated by the platform AI.
      properties:
        id:
          type: string
          description: The identifier of the location
          readOnly: true
          example: kdjfghd8hikdfg
        label:
          type: string
          description: The descriptor of the location
          example: Home
        latitude:
          type: number
          description: The latitude of the location
          example: 40.388756
        longitude:
          type: number
          description: The latitude of the location
          example: -3.588622

    Material:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the material
          example: aisufh9sdokjnd

    Car:
      allOf:
        - $ref: '#/components/schemas/Material'
      properties:
        carPlate:
          type: string
          description: The plate of the car
          example: UH765TG
        carType:
          type: string
          example: Sport car - 2 seats

    Competence:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the competence
          example: aisufh9sdokjnd

    DrivingLicense:
      allOf:
        - $ref: '#/components/schemas/Competence'
      properties:
        drivingLicenseId:
          type: string
          description: The driving license if
          example: ESdfg09dofgk


    SocialPractice:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the social practice
          readOnly: true
          example: f9dofgljdksdf
        label:
          type: string
          description: The descriptor of the social practice
          example: commuter
        materials:
          anyOf:
            - $ref: '#/components/schemas/Car'
        competences:
          anyOf:
            - $ref: '#/components/schemas/DrivingLicense'
        norms:
          type: array
          description: The norms of the social practice
          items:
            $ref: '#/components/schemas/Norm'

    SocialNetworkRelationship:
      type: object
      properties:
        userId:
          type: string
          description: The identifier of the wenet user the relationship is related to
          example: 4c51ee0b-b7ec-4577-9b21-ae6832656e33
        type:
          type: string
          description: The relationship type
          enum:
            - friend
            - colleague
            - follower
            - family
            - acquaintance
          example: friend
        # acl:
        #   anyOf:
        #     - $ref: '#/components/schemas/PublicACL'
        #     - $ref: '#/components/schemas/PrivateACL'
        #     - $ref: '#/components/schemas/CustomACL'
        # trustLevel:

    Routine:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the routine
          example: oishd0godlkgj
        label:
          type: string
          description: The label of the routine
          example: work
        proximity:
          type: string
          description: The identifier of the routine
          example: oishd0godlkgj
        from_time:
          type: string
          format: time
          example: 18:00
        to_time:
          type: string
          format: time
          example: 22:00

    CoreWeNetUserProfile:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UserName'
        dateOfBirth:
          type: object
          properties:
            year:
              type: integer
              example: 1976
              description: The year of birth
              nullable: true
            month:
              type: integer
              example: 4
              description: "The month of birth, from 1 to 12 (1: Jan and 12: Dec)"
              nullable: true
            day:
              type: integer
              example: 23
              description: The day of the month
              nullable: true
        gender:
          type: string
          enum:
            - M
            - F
            - O
          example: F
          nullable: true
        email:
          type: string
          description: The user email
          format: email
          example: john.doe@gmail.com
          nullable: true
        phoneNumber:
          type: string
          description: The user phone number
          example: +34 6888233133
          nullable: true
        locale:
          type: string
          description: The locale of the user
          example: es_ES
          nullable: true
        avatar:
          type: string
          description: The url to the image avatar
          nullable: true
        nationality:
          type: string
          description: The nationality of the user
          example: Spanish
          nullable: true
        languages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The language spoken by the user
                example: Spanish
              level:
                type: string
                description: The level
                example: C2
                enum:
                    - A0
                    - A1
                    - A2
                    - B1
                    - B2
                    - C1
                    - C2
              code:
                type: string
                description: The ISO 639-1 code that identify the language
                example: es
        occupation:
          type: string
          description: The occupation of the user
          example: nurse
          nullable: true

    UserName:
      type: object
      properties:
        first:
          type: string
          description: The first name of the user
          example: John
          nullable: true
        middle:
          type: string
          description: The middle name of the user
          example: Francis
          nullable: true
        last:
          type: string
          description: The last name of the user
          example: Doe
          nullable: true
        prefix:
          type: string
          description: The name prefix
          example: Dr.
          nullable: true
        suffix:
          type: string
          description: The suffix of the name
          example: Jr.
          nullable: true

    WeNetUserProfile:
      allOf:
        - $ref: '#/components/schemas/CoreWeNetUserProfile'
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      properties:
        id:
          type: string
          description: The identifier of the WeNet user
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        norms:
          type: array
          description: The individual norms of the user
          items:
            $ref: '#/components/schemas/Norm'
        plannedActivities:
          type: array
          items:
            $ref: '#/components/schemas/PlannedActivity'
        relevantLocations:
          type: array
          items:
            $ref: '#/components/schemas/RelevantLocation'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/SocialNetworkRelationship'
        socialPractices:
          type: array
          items:
            $ref: '#/components/schemas/SocialPractice'
        personalBehaviors:
          type: array
          items:
            $ref: '#/components/schemas/Routine'

    # Tasks

    TaskTransactionType:
      type: object
      properties:
        label:
          type: string
          example: acceptVolunteer
        description:
          type: string
          description: A human readable description of the task objective.
          example: A task for organizing social dinners
        attributes:
          type: array
          description: The attribute that has to be instantiated when create the task of this type.
          items:
            $ref: '#/components/schemas/TaskAttributeType'

    TaskType:
      type: object
      description: Describe a type of task that can be done by the users.
      properties:
        id:
          type: string
          description: Identifier of the type
          readOnly: true
          example: 4a559aafceb8464
        name:
          type: string
          description: A name that identify the type.
          example: Eat together task
        description:
          type: string
          description: A human readable description of the task objective.
          example: A task for organizing social dinners
        keywords:
          type: array
          description: The keywords that describe the task type.
          example:
            - social interaction
            - eat
          items:
            type: string
        # norms:
        #   type: array
        #   description: The norms that describe the interaction of the users to do the tasks of this type.
        #   items:
        #     $ref: '#/components/schemas/Norm'
        attributes:
          type: array
          description: The attribute that has to be instantiated when create the task of this type.
          items:
            $ref: '#/components/schemas/TaskAttributeType'
        transactions:
          type: array
          description: The supported transaction types for the task
          items:
            $ref: '#/components/schemas/TaskTransactionType'
        # constants:
        #   type: array
        #   description: The attribute with a fixed value.
        #   items:
        #     $ref: '#/components/schemas/TaskAttribute'

    TaskAttributeType:
      type: object
      description: Describe an attribute that has to be initialized whne start a task of an specific type.
      properties:
        name:
          type: string
          description: The name of the attribute.
          example: communityId
        description:
          type: string
          description: A human readable description of the attribute.
          example: The identifier of the community.
        type:
          type: string
          enum: [string, number, boolean, profileId]
          description: >
             The type of the attribute values. It can be:
             * 'string' - If it is a string value.
             * 'number' - If it is a number value.
             * 'boolean' - If it is a boolean value.
             * 'profileId' - If it represent the identifier of a WeNet user.
        isArray:
          type: boolean
          description: This is 'true' if teh attribute is an array of values of the specified type.
          default: false

    Task:
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      description: A wenet task
      properties:
        id:
          type: string
          description: The unique identifier of the task
          readOnly: true
          example: b129e5509c9bb79
        taskTypeId:
          type: string
          description: The identifier of the task type associated to the task
          example: b129e5509c9bb79
        requesterId:
          type: string
          description: The identifier of the WeNet user who created the task
          example: 15837028-645a-4a55-9aaf-ceb846439eba
          nullable: false
        appId:
          type: string
          description: The identifier of the application the task is associated to
          example: yub129e5509bb79
        goal:
          type: object
          description: The explanation of the task objective.
          nullable: false
          properties:
            name:
              type: string
              description: A short description of the task goal.
              example: Go to dinner together
            description:
              type: string
              description: A human readable description of the objective of the task.
              example: It is my aniversary and I want to celebrate together.
        startTs:
          type: integer
          description: The UTC epoch timestamp representing the time the task should be started
          example: 1563900000
        endTs:
          type: integer
          description: The UTC epoch timestamp representing the time the task should be completed by
          example: 1563930000
        deadlineTs:
          type: integer
          description: The UTC epoch timestamp representing the deadline time for offering help
          example: 1563920000
        norms:
          type: array
          description: The set of norms that define the interaction of the user when do the task
          items:
            $ref: '#/components/schemas/Norm'
        attributes:
          type: object
          description: The set of attributes that define the task

    TaskTransaction:
      type: object
      description: Describe a transition to do over a task
      properties:
        taskId:
          description: The unique identifier this transaction is associated to
          example: b129e5509c9bb79
          type: string
        label:
          type: string
          description: The label associated to the transaction type
          example: acceptVolunteer
        attributes:
          type: object
          description: The attributes that are set in the associated transaction type
