{
  "openapi": "3.0.1",
  "info": {
    "description": "This is a description of the Streambase Common APIs",
    "version": "1.0.0",
    "title": "Streambase Commons",
    "contact": {
      "email": "marcelo.rodasbritez@unitn.it"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://wenet.u-hopper.com/dev/commons"
    }
  ],
  "paths": {
    "/data": {
      "post": {
        "tags": [
          "batch data"
        ],
        "summary": "Upload a new entity's data",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "data correctly uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Authorization": {
        "in": "header",
        "schema": {
          "type": "string"
        },
        "name": "Authorization",
        "required": true,
        "description": "Access Token"
      },
      "UserId": {
        "in": "query",
        "schema": {
          "type": "string"
        },
        "name": "userId",
        "required": true,
        "description": "Target user or users that will receive the message. Can be either a single user's salt or a topic (so it will be sent to all users subscribed to that topic) using the format/topics/<sometopic>"
      }
    },
    "schemas": {
      "Id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id automatically generated",
            "example": "ei39alwj901kde"
          }
        }
      },
      "UserContribution": {
        "type": "object",
        "properties": {
          "t_tile": {
            "type": "string",
            "description": "Question title",
            "example": "Test Title"
          },
          "t_until": {
            "type": "string",
            "format": "integer",
            "description": "Time to Live",
            "example": 86400
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "q": {
                  "$ref": "#/components/schemas/QuestionView"
                },
                "a": {
                  "$ref": "#/components/schemas/AnswerOptionsView"
                }
              }
            }
          }
        }
      },
      "ConditionView": {
        "type": "object",
        "properties": {
          "a": {
            "type": "integer",
            "format": "integer",
            "description": "condition answer id",
            "example": 1
          },
          "q": {
            "type": "integer",
            "format": "integer",
            "description": "condition question id",
            "example": 1
          }
        },
        "description": "used to show a new question only if a specific answer on a previous question has been chose"
      },
      "DataObjView": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "example": 42.23432
          },
          "long": {
            "type": "number",
            "example": 11.13242
          }
        }
      },
      "MetaDataObjView": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "example": 42.23432
          },
          "long": {
            "type": "number",
            "example": 11.13242
          },
          "timestamp": {
            "type": "string",
            "example": 20200131235959124
          }
        }
      },
      "Payload": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataObjView"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaDataObjView"
          },
          "picture": {
            "type": "string",
            "example": "/9j/4AAQSkZJRgABAQEASABIAAD",
            "description": "Picture in base64"
          }
        }
      },
      "PayloadView": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/Payload"
          },
          "qid": {
            "type": "string",
            "example": 2,
            "description": "Question id"
          }
        }
      },
      "Paragraph": {
        "type": "object",
        "properties": {
          "l": {
            "type": "string",
            "example": "en_US",
            "description": "Language identifier"
          },
          "t": {
            "type": "string",
            "example": "Some text",
            "description": "The text the user will see"
          }
        }
      },
      "QuestionView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "integer"
          },
          "t": {
            "type": "string",
            "format": "string",
            "description": "text",
            "example": "What are you doing?"
          },
          "at": {
            "type": "string",
            "format": "string",
            "description": "can be single choice (s) or multiple (m)",
            "enum": [
              "s",
              "m"
            ]
          },
          "p": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Paragraph"
            }
          }
        },
        "example": {
          "id": 1,
          "c": [],
          "t": "t",
          "at": "s",
          "p": [
            {
              "l": "en_US",
              "t": "What are you doing?"
            },
            {
              "l": "it_IT",
              "t": "Cosa stai facendo?"
            }
          ]
        }
      },
      "AnswerContentView": {
        "type": "object",
        "properties": {
          "cnt": {
            "type": "string",
            "example": "I am at home",
            "description": "The answer chosen by the user among one of the option "
          },
          "qid": {
            "type": "integer",
            "example": 2,
            "description": "Question id"
          },
          "aid": {
            "type": "integer",
            "example": 3,
            "description": "Answer id"
          },
          "cid": {
            "type": "integer",
            "example": -1,
            "description": "Condition id"
          }
        }
      },
      "AnswerOptionsView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "integer"
          },
          "c": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionView"
            }
          },
          "c_id": {
            "type": "integer",
            "format": "integer",
            "description": "concept id",
            "example": -1
          },
          "p": {
            "$ref": "#/components/schemas/Paragraph"
          }
        },
        "example": [
          {
            "id": 1,
            "c": [],
            "c_id": -1,
            "p": [
              {
                "l": "en_US",
                "t": "I am working"
              },
              {
                "l": "it_IT",
                "t": "Sto lavorando"
              }
            ]
          },
          {
            "id": 2,
            "c": [],
            "c_id": -1,
            "p": [
              {
                "l": "en_US",
                "t": "I am studying"
              },
              {
                "l": "it_IT",
                "t": "Sto studiando"
              }
            ]
          }
        ]
      },
      "QuestionAnswerView": {
        "type": "object",
        "properties": {
          "q": {
            "$ref": "#/components/schemas/QuestionView"
          },
          "a": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerOptionsView"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "user"
          },
          "id": {
            "type": "string",
            "example": "a102lomnstesa2"
          },
          "appid": {
            "type": "string",
            "example": "Twitter"
          },
          "locationeventpertime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/locationeventObject"
            }
          },
          "accelerometerevent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccelerometerEventObject"
            }
          },
          "gyroscopeevent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GyroscopeEventObject"
            }
          },
          "tasksquestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskQuestion"
            }
          },
          "socialrelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialrelationsObject"
            }
          },
          "touchevent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/touchevent"
            }
          }
        }
      },
      "DataRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "a34for230po"
          },
          "experimentId": {
            "type": "string",
            "example": "Wenet01"
          },
          "properties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "locationeventpertime": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/locationeventObject"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "accelerometerevent": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccelerometerEventObject"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "gyroscopeevent": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GyroscopeEventObject"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tasksanswers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskAnswer"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tasksquestions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskQuestion"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "socialrelationsObject": {
        "type": "object",
        "properties": {
          "socialrelationsObject": {
            "type": "object",
            "properties": {
              "experimentid": {
                "type": "string",
                "example": "wenetTest"
              },
              "userid": {
                "type": "string",
                "example": 1
              },
              "day": {
                "type": "string",
                "example": 20200521
              },
              "timestamp": {
                "type": "string",
                "example": 202004212357000
              },
              "source": {
                "type": "string",
                "example": "twitter"
              },
              "content": {
                "type": "object",
                "properties": {
                  "eventtype": {
                    "type": "string",
                    "example": "follows"
                  },
                  "value": {
                    "type": "string",
                    "example": 1
                  },
                  "userdestinationid": {
                    "type": "string",
                    "example": 8
                  }
                }
              }
            }
          }
        }
      },
      "touchevent": {
        "type": "object",
        "properties": {
          "touchevent": {
            "type": "object",
            "properties": {
              "experimentId": {
                "type": "string",
                "example": "wenetTest"
              },
              "userid": {
                "type": "string",
                "example": 1
              },
              "timestamp": {
                "type": "string",
                "example": 2020052105142943
              },
              "day": {
                "type": "string",
                "example": 20200521
              }
            }
          }
        }
      },
      "AccelerometerEventObject": {
        "type": "object",
        "properties": {
          "experimentId": {
            "type": "string",
            "example": "Wenet01"
          },
          "userId": {
            "type": "string",
            "example": "a34for230po"
          },
          "timestamp": {
            "type": "string",
            "example": 201908252359000
          },
          "x": {
            "type": "string",
            "example": 2.37
          },
          "y": {
            "type": "string",
            "example": 8.36
          },
          "z": {
            "type": "string",
            "example": 4.68
          }
        }
      },
      "GyroscopeEventObject": {
        "type": "object",
        "properties": {
          "experimentId": {
            "type": "string",
            "example": "Wenet01"
          },
          "userId": {
            "type": "string",
            "example": "a34for230po"
          },
          "timestamp": {
            "type": "string",
            "example": 201908252359000
          },
          "x": {
            "type": "string",
            "example": 2.37
          },
          "y": {
            "type": "string",
            "example": 8.36
          },
          "z": {
            "type": "string",
            "example": 4.68
          }
        }
      },
      "locationeventObject": {
        "type": "object",
        "properties": {
          "locationeventpertime": {
            "type": "object",
            "properties": {
              "experimentId": {
                "type": "string",
                "example": "wenetTest"
              },
              "userid": {
                "type": "string",
                "example": 1
              },
              "timestamp": {
                "type": "string",
                "example": 201908252357000
              },
              "day": {
                "type": "string",
                "example": 20190825
              },
              "accuracy": {
                "type": "number",
                "example": 23.2
              },
              "lucene": {
                "type": "string",
                "example": "lucene"
              },
              "provider": {
                "type": "string",
                "example": "gps"
              },
              "speed": {
                "type": "number",
                "example": 2.3
              },
              "point": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "example": 22.1492
                  },
                  "longitude": {
                    "type": "number",
                    "example": -101.03609
                  },
                  "altitude": {
                    "type": "number",
                    "example": 1845.29208
                  }
                }
              }
            }
          }
        }
      },
      "TaskAnswer": {
        "type": "object",
        "properties": {
          "experimentId": {
            "type": "string",
            "example": "Wenet01"
          },
          "userId": {
            "type": "string",
            "example": "a34for230po"
          },
          "instanceid": {
            "type": "string",
            "example": "f161dee2a122af926a9c4285275800942d128c34"
          },
          "answer": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnswerContentView"
              }
            }
          },
          "answerduration": {
            "type": "string",
            "example": 20142
          },
          "answertimestamp": {
            "type": "string",
            "example": 20190909010129450
          },
          "day": {
            "type": "string",
            "example": 20190910
          },
          "instancetimestamp": {
            "type": "string",
            "example": 20190911201814344
          },
          "notificationtimestamp": {
            "type": "string",
            "example": 20190911201816910
          },
          "payload": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "payload": {
                  "type": "object",
                  "example": {}
                },
                "qid": {
                  "type": "string",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "TaskQuestion": {
        "type": "object",
        "properties": {
          "experimentId": {
            "type": "string",
            "example": "Wenet01"
          },
          "userId": {
            "type": "string",
            "example": "a34for230po"
          },
          "instanceid": {
            "type": "string",
            "example": "f161dee2a122af926a9c4285275800942d128c34"
          },
          "question": {
            "$ref": "#/components/schemas/QuestionAnswerView"
          },
          "day": {
            "type": "string",
            "example": 20190910
          },
          "instancetimestamp": {
            "type": "string",
            "example": 20190911201814344
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "title": {
            "type": "string",
            "example": "Question Title"
          }
        }
      },
      "SensorId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 1
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EmptyResponse": {
        "description": "Empty object",
        "type": "object"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}