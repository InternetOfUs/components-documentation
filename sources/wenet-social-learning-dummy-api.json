{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API",
    "version": "1.0.0",
    "title": "CPNET Based Recommendation System",
    "contact": {
      "email": "theo.mantadelis@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "internal",
      "description": "Operations only for internal library use"
    },
    {
      "name": "external",
      "description": "Operations for external use"
    }
  ],
  "paths": {
    "/profiles": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Gets all user profile IDs",
        "operationId": "profiles",
        "description": "Gets all user profile IDs",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All user IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "/profile_personal": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Get user profile by ID",
        "operationId": "profile_personal",
        "description": "Get user profile by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ID",
            "description": "User Profile ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User Profile",
            "schema": {
              "$ref": "#/definitions/user_profile"
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/profile_message_transactions": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Get user message transactions by user ID",
        "operationId": "profile_message_transactions",
        "description": "Get user message transactions by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ID",
            "description": "User Profile ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User Message Transactions",
            "schema": {
              "$ref": "#/definitions/user_messages"
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "definitions": {
    "user_profile": {
      "type": "object",
      "description": "User Profile Personal Information. What is filled by user.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "age": {
          "type": "integer",
          "description": "User Age (required)."
        },
        "sex": {
          "type": "object",
          "description": "User Sex (required). Values = Male/Female/Other?"
        },
        "languages": {
          "type": "object",
          "description": "A list of user known languages (required 1 min).",
          "properties": {
            "name": {
              "type": "string",
              "description": "Language Name."
            },
            "iso_code": {
              "type": "string",
              "description": "Langugage ISO code."
            },
            "level": {
              "type": "integer",
              "description": "User Proficiency of Language."
            }
          }
        },
        "occupation": {
          "type": "object",
          "description": "Users main occupation (optional).",
          "properties": {
            "title": {
              "type": "string",
              "description": "Occupation Title: student, alumni, employee."
            },
            "program": {
              "type": "object",
              "description": "University related program."
            }
          }
        },
        "competences": {
          "type": "object",
          "description": "A list with user competences and skill level (optional).",
          "properties": {
            "name": {
              "type": "string",
              "description": "Competence name. Example: cooking, driving etc."
            },
            "level": {
              "type": "integer",
              "description": "User level."
            }
          }
        },
        "address": {
          "type": "object",
          "description": "User different addresses (optional)."
        },
        "other": {
          "type": "object",
          "description": "All user related information that we can get!"
        }
      }
    },
    "user_metadata": {
      "type": "object",
      "description": "User Profile Personal Information. What is filled by user.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "app_usage": {
          "type": "object",
          "description": "Application Usage History"
        }
      }
    },
    "user_messages": {
      "type": "object",
      "description": "User messages.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "thread_id": {
          "type": "integer",
          "description": "Message Thread ID"
        },
        "msg_type": {
          "type": "integer",
          "description": "Message Type"
        },
        "msg_text": {
          "type": "string",
          "description": "Message"
        },
        "other": {
          "type": "object",
          "description": "Other Message information"
        }
      }
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/theomantadelis/cpnet_reasoning/1.0.0",
  "schemes": [
    "https"
  ]
}