openapi: 3.0.1
info:
  title: WeNet - Service REST APIs
  description: This document describes the API exposed by the Service component of the WeNet platform.

    In particular, the models entities handled by the Service REST API are

    - WeNet application

    - WeNet user

    - Incoming message - these messages that are written by users and should be handled by the platform in order to create a meaningful response

    - Outgoing message - these messages that are created as responses to the incoming messages written by the users

    - Task

  contact:
    email: carlo.caprini@u-hopper.com
  version: 1.0.0

servers:
- url: https://wenet.u-hopper.com/service

paths:

  /app:
    post:
      summary: Create a new wenet app
      tags:
        - App
      description: This endpoint allows to create a new wenet app.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        200:
          description: App created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'

  /app/{appId}:
    get:
      summary: Get the details of an app
      tags:
        - App
      description: This endpoint allows to create a new wenet app.
      parameters:
        - in: path
          name: appId
          schema:
            type: string
          required: true
          description: The Id of the wenet app
      responses:
        200:
          description: The details of the requested app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'

    put:
      summary: Update the details of an app
      tags:
        - App
      description: This endpoint allows to create a new wenet app.
      parameters:
        - in: path
          name: appId
          schema:
            type: string
          required: true
          description: The Id of the wenet app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        200:
          description: The details of the requested app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'

  /user/authenticate:
    post:
      summary: Authenticate WeNet user
      tags:
        - WeNet user
      description: This endpoint allows to authenticate a WeNet user by taking advantage of one of the available authentication strategies. The response includes the Id of the associated wenet user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookAuthentication'
      responses:
        200:
          description: Correct authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeNetUser'
        401:
          description: No WeNet user associated to authentication credentials provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

  # /user:
  #   summary: Create new WeNet user with the specified authentication credentials
  #   post:
  #     summary: Create new WeNet user
  #     tags:
  #       - WeNet user
  #     description: This entpoint allows to create a new WeNet user associated to the specified authentication strategy. The response includes the Id of the newly created wenet user.
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/FacebookAuthentication'
  #     responses:
  #       201:
  #         description: WeNet user correctly created
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/WeNetUser'

  /user/profile/{wenetUserId}:
    post:
      summary: Create an empty user profile
      tags:
        - WeNet user profile
      description: This entpoint allows to initialize an empty WeNet user profile. It is expected to be used upon the creation of a new user.
      parameters:
        - in: path
          name: wenetUserId
          schema:
            type: integer
          required: true
          description: The Id of the wenet user
      responses:
        200:
          description: WeNet user correctly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: The profile for the user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

    get:
      summary: Get the profile of the specified wenet user
      tags:
        - WeNet user profile
      description: This entpoint allows to create a new WeNet user associated to the specified authentication strategy.
      parameters:
        - in: path
          name: wenetUserId
          schema:
            type: integer
          required: true
          description: The Id of the wenet user
      responses:
        200:
          description: WeNet user correctly created
          content:
            application/json:
              schema:
                $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile'
        404:
          description: No such wenet user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

    put:
      summary: Update the profile of a wenet user
      tags:
        - WeNet user profile
      description: This entpoint allows to update the _core_ profile of a wenet user. This is possible by providing the complete user profile that will override the exising one.
      parameters:
        - in: path
          name: wenetUserId
          schema:
            type: integer
          required: true
          description: The Id of the wenet user
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CoreWeNetUserProfile'
      responses:
        200:
          description: WeNet user correctly created
          content:
            application/json:
              schema:
                $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile'
        404:
          description: No such wenet user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

  /messages:
    post:
      summary: Submit a list of new incoming messages
      tags:
        - Message
      description: This entpoint allows to submit a list of new incoming messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestMessage'
      responses:
        201:
          description: Messages correctly submitted

  /messages/subscription:
    post:
      summary: Create a new message response subscription
      tags:
        - Message subscrption
      description: This entpoint allows to createa new message response subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSubscription'
      responses:
        201:
          description: Message subscription correctly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

  /messages/subscription/{subscriptionId}:
    put:
      summary: Update existing message response subscription
      tags:
        - Message subscrption
      description: This entpoint allows to edit an existing message response subscription
      parameters:
        - in: path
          name: subscriptionId
          schema:
            type: string
          required: true
          description: The Id of the subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSubscription'
      responses:
        201:
          description: Message subscription correctly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

    delete:
      summary: Delete existing message response subscription
      tags:
        - Message subscrption
      description: This entpoint allows to delete an existing message response subscription
      parameters:
        - in: path
          name: subscriptionId
          schema:
            type: string
          required: true
          description: The Id of the subscription
      responses:
        201:
          description: Message subscription correctly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

  /task:
    post:
      summary: Create new task
      tags:
        - Task
      description: This entpoint allows to create a new task
      parameters:
        - in: path
          name: taskId
          schema:
            type: integer
          required: true
          description: The Id of the task
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Task'
      responses:
        201:
          description: Task correctly created


  /task/{taskId}:
    get:
      summary: Get the details of an existing task
      tags:
        - Task
      description: This entpoint allows to get the details of an existing task
      parameters:
        - in: path
          name: taskId
          schema:
            type: integer
          required: true
          description: The Id of the task
      responses:
        200:
          description: WeNet user correctly created
          content:
            application/json:
              schema:
                $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Task'
        404:
          description: No such wenet user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'

    # put:
    #   summary: Update task
    #   tags:
    #     - Task
    #   description: This entpoint allows to create a new task
    #   parameters:
    #     - in: path
    #       name: taskId
    #       schema:
    #         type: integer
    #       required: true
    #       description: The Id of the task
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: 'https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Task'
    #   responses:
    #     201:
    #       description: Task correctly created

components:
  schemas:

    CreateUpdateTsDetails:
      type: object
      properties:
        creationTs:
          type: integer
          readOnly: true
          description: The UTC epoch timestamp representing the account creation instant
          example: 1563871899
        lastupdateTs:
          type: integer
          readOnly: true
          description: The UTC epoch timestamp representing the last update instant
          example: 1563898764

    # App

    AppAssociationPlatform:
      type: object
      properties:
        type:
          type: string
          enum:
            - telegram
            - wenet

    WeNetPlatform:
      allOf:
        - $ref: '#/components/schemas/AppAssociationPlatform'
      properties:
        type:
          example: wenet

    TelegramPlatform:
      allOf:
        - $ref: '#/components/schemas/AppAssociationPlatform'
      properties:
        type:
          example: telegram
        botId:
          type: string
          description: The ID of the Telegram bot
        # any other information required for setting up the Telegram login on the

    App:
      description: The app of a wenet use case scenario
      allOf:
        - $ref: '#/components/schemas/CreateUpdateTsDetails'
      properties:
        appId:
          type: string
          description: The Id of the wenet app
          example: 3e557acc-e846-4736-8218-3f64d8e68d8c
          readOnly: true
        appToken:
          type: string
          description: The Id of the wenet app
          example: aisfuh9s8fnkdfhg9d8fgkdjfgnhkduyfgidjkfgkdh
          readOnly: true
        allowedPlatforms:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/TelegramPlatform'
              # - $ref: '#/components/schemas/WeNetPlatform'
        messageCallbackUrl:
          type: string
          nullable: true
          description: The callback url for receiving messages from WeNet
        metadata:
          type: object
          description: The name of the wenet app
          example: WeNet scenario app

    # User and authentication

    AuthenticationAccountType:
      type: string
      description: The AuthenticationAccountType simply defines the allowed types of authentication account available.
      enum:
        - facebook
        - userPass

    AuthenticationAccount:
      type: object
      description: The authentication account is a generic model that defines all those properties that are common to an authentication account. In general, such an account can be used for authenticating in the WeNet platform and it is associated to a WeNet User.
      properties:
        accountId:
          type: string
          readOnly: true
          example: b375dd78-ce75-41cc-82f0-34a6c65da5b5
          description: The identifier of the account
        accountType:
          $ref: '#/components/schemas/AuthenticationAccountType'
        wenetUserId:
          type: string
          readOnly: true
          description: The WeNet user identifier this account is linked to
        creationTs:
          type: integer
          readOnly: true
          description: The timestamp representing the account creation instant

    FacebookAuthentication:
      allOf:
        - $ref: '#/components/schemas/AuthenticationAccount'
      properties:
        accountType:
          type: string
          enum:
            - facebook
        facebookUserId:
          type: string
          example: 23098jdghf98h


    WeNetUser:
      type: object
      properties:
        wenetUserId:
          type: string
          description: The identifier of the WeNet user
          example: 15837028-645a-4a55-9aaf-ceb846439eba
        authenticationAccounts:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/AuthenticationAccount'

    # ACL

    ACL:
      type: object
      properties:
        id:
          type: string
          description: The identifier of the ACL
          example: 08dfogkjdnfg

    PublicACL:
      description: Public access to all wenet apps
      allOf:
        - $ref: '#/components/schemas/ACL'

    PrivateACL:
      description: Private access only to the app that created the data piece in the first place
      allOf:
        - $ref: '#/components/schemas/ACL'
      properties:
        appId:
          type: string
          description: The Id of the wenet app having access to the data
          example: 3e557acc-e846-4736-8218-3f64d8e68d8c

    CustomACL:
      description: Private access only to the app that created the data piece in the first place
      allOf:
        - $ref: '#/components/schemas/ACL'
      properties:
        rules:
          type: array
          items:
            type: object
            properties:
              appId:
                type: string
                description: The identifier of the wenet app the rule is associated to
                example: 6712a3ed-821e-4e93-95f1-3dd39dde1001
              access:
                type: string
                description: The identifier of the wenet app having access to the data
                example: 8b9c98b5-7510-4d8c-bf04-219490d0dac7
                enum:
                  - write
                  - read

    # Messages

    TextualMessage:
      type: object
      properties:
        type:
          type: string
          enum: ["textual_message"]
        value:
          type: string
          example: "I need someone to pick up my son at school"

    ActionRequest:
      type: object
      properties:
        type:
          type: string
          enum: ["action_request"]
        payload:
          type: string
          example: volunteer
        value:
          type: string
          example: "I can do it!"

    Entity:
      type: object
      properties:
        name:
          type: string
          example: "location"
        value:
          type: string
          example: "school"
        confidence:
          type: number
          format: float
          example: 0.94
          nullable: true

    Message:
      type: object
      properties:
        messageId:
          type: string
          example: 2A6F67A4-42D2-4DE0-9F00-DE4A564A83A8
        channel:
          type: string
          enum:
            - facebook
          example: facebook
        userId:
          type: string
          example: USR-JDKHEIU2-31NJDTE94
        appId:
          type: string
          readOnly: true
          example: 3e557acc-e846-4736-8218-3f64d8e68d8c
        type:
          type: string
          enum:
            - request
            - response
          example:  request
      required:
        - messageId
        - channel
        - userId
        - appId
        - type

    RequestMessage:
      allOf:
        - $ref: '#/components/schemas/Message'
      properties:
        timestamp:
          type: string
          format: datetime
          example: "2019-04-04:23.11.58"
        content:
          oneOf:
            - $ref: '#/components/schemas/TextualMessage'
            - $ref: '#/components/schemas/ActionRequest'
        domain:
          type: string
          example: "help"
        intent:
          type: object
          properties:
            name:
              type: string
              example: "help"
            confidence:
              type: number
              format: float
              example: 0.87,
              nullable: true
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        language:
          type: string
          example: it
        metadata:
          type: object
        type:
          type: string
          enum:
            - request
          example: request
      required:
        - timestamp
        - content

    ResponseMessage:
      allOf:
        - $ref: '#/components/schemas/Message'
      properties:
        responseTo:
          type: string
          example: 1FKNSM-GEKRO2-DANK2-FJ33-DASDJOW
        timestamp:
          type: string
          format: datetime
          example: 2019-04-04:23.11.58
        content:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/TextualMessage'
        metadata:
          type: object
        type:
          type: string
          enum:
            - response
          example: response
      required:
        - responseTo
        - content

    MessageSubscription:
      type: object
      description: The MessageSubscription collects all the information relevant for allowing the platform to provide the message that are created as responses to incoming ones written by the users.
      properties:
        subscriptionId:
          type: string
          readOnly: true
          description: The identifier of the subscription
          example: osddo9fgijdjgn
        appId:
          type: string
          readOnly: true
          description: The app the subscription is associated to
          example: 3e557acc-e846-4736-8218-3f64d8e68d8c
        webhook:
          type: string
          format: url
          description: The url of the webhook that is going to receive the message responsens. The specified endpoint must be configured in order to be able to receive a list of `ResponseMessage`.
          example: "https://www.app1.wenet.com/webhook"

    EmptyResponse:
      type: object
