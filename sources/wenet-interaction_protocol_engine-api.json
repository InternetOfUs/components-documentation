{
    "components": {
        "schemas": {
            "community_task_instances_page": {
                "xml": {
                    "name": "community_task_instances_page"
                },
                "description": "Contains a set of community task instances found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of task instances that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first task instance returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "tasks": {
                        "description": "The set of task instances found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/community_task_instance"
                        }
                    }
                }
            },
            "language": {
                "xml": {
                    "name": "language"
                },
                "description": "The language that an user can understand.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The ISO 639-1 code that identify the language",
                        "type": "string",
                        "example": "en"
                    },
                    "level": {
                        "description": "The linguistic ability level of the person.",
                        "type": "string",
                        "enum": [
                            "C2",
                            "C1",
                            "B2",
                            "B1",
                            "A2",
                            "A1",
                            "A0"
                        ],
                        "example": "B2"
                    },
                    "name": {
                        "description": "The name of the language",
                        "type": "string",
                        "example": "English"
                    }
                }
            },
            "norm": {
                "xml": {
                    "name": "norm"
                },
                "description": "This component describes an acceptable way of behaving by any user.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The code of the norm.",
                        "type": "string"
                    }
                }
            },
            "message_attribute": {
                "xml": {
                    "name": "message_attribute"
                },
                "description": "This component describes an attribute on the message content.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the attribute.",
                        "type": "string",
                        "example": "community_id"
                    },
                    "value": {
                        "description": "The value of the attribute.",
                        "type": "object",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    }
                }
            },
            "community_norms_page": {
                "xml": {
                    "name": "community_norms_page"
                },
                "description": "Contains a set of community norms found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of community norms that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first community norm returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "norms": {
                        "description": "The set of community norms found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/community_norm"
                        }
                    }
                }
            },
            "composite": {
                "xml": {
                    "name": "composite"
                },
                "description": "Provide information about how the teams have to be created",
                "type": "object",
                "properties": {
                    "requirements": {
                        "$ref": "#/components/schemas/requirements"
                    },
                    "at_most": {
                        "description": "If this is 'true' the size of the teams cannot be more than the specified on 'people_per_team'",
                        "type": "boolean",
                        "example": true
                    },
                    "performance": {
                        "format": "double",
                        "maximum": 1,
                        "description": "This value allows defining the balancing of the teams. When it is near 0.5 create similar teams, when it is near to 0 the worst are the leaders and when it is near to 1 the bests are the leaders.",
                        "type": "number",
                        "minimum": 0,
                        "example": 0.5
                    },
                    "time": {
                        "format": "int32",
                        "description": "The maximum seconds that it has to calculate the best combination. When it is reached return the best team composition that it has found.",
                        "type": "integer",
                        "minimum": 0,
                        "example": 30
                    },
                    "people_per_team": {
                        "format": "int32",
                        "description": "The size of the teams to create",
                        "type": "integer",
                        "minimum": 2,
                        "example": 2
                    },
                    "people": {
                        "minItems": 4,
                        "description": "Contain the people that have to be distributed on different teams",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/person"
                        }
                    }
                }
            },
            "community_task_instance": {
                "xml": {
                    "name": "community_task_instance"
                },
                "description": "This component describes a community task instance.",
                "type": "object",
                "properties": {
                    "deadline_date": {
                        "description": "The ISO 8601 date on which the task is expected to be completed",
                        "type": "string",
                        "example": "2019-08-28"
                    },
                    "goal": {
                        "$ref": "#/components/schemas/goal"
                    },
                    "finished_date": {
                        "description": "The ISO 8601 date when the task has concluded.If it is not set the task is active.",
                        "type": "string",
                        "example": "2019-09-01"
                    },
                    "id": {
                        "description": "The identifier of the task instance.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "state": {
                        "description": "The attributes that define the state of the task instance.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/task_attribute"
                        }
                    },
                    "team": {
                        "description": "The identifiers of the community members that has to team up to do the task",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "550e8400-e29b-41d4-a716-446655440000",
                            "1db14dd1-ed9a-463d-a518-54c7c38dcec9"
                        ]
                    },
                    "updated_date": {
                        "description": "The ISO 8601 date when the task has been updated",
                        "type": "string",
                        "example": "2019-08-28"
                    },
                    "task_type": {
                        "$ref": "#/components/schemas/community_task_type"
                    },
                    "start_date": {
                        "description": "The ISO 8601 date when the task has started",
                        "type": "string",
                        "example": "2019-06-28"
                    }
                }
            },
            "friend": {
                "xml": {
                    "name": "friend"
                },
                "description": "The information of a friend.",
                "type": "object",
                "properties": {
                    "friend_id": {
                        "description": "The identifier of the friend.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "name": {
                        "description": "The friend name.",
                        "type": "string",
                        "example": "Johnydo"
                    },
                    "status": {
                        "description": "The friend status.",
                        "type": "string",
                        "enum": [
                            "added",
                            "removed",
                            "blocked",
                            "suggested",
                            "ignored_suggestion"
                        ],
                        "example": "added"
                    }
                }
            },
            "competences_page": {
                "xml": {
                    "name": "competences_page"
                },
                "description": "Contains a set of competences found",
                "type": "object",
                "properties": {
                    "competences": {
                        "description": "The set of competences found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/competence"
                        }
                    },
                    "total": {
                        "format": "int64",
                        "description": "The number total of competences that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first competence returned.",
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "composed_teams": {
                "xml": {
                    "name": "composed_teams"
                },
                "description": "The information of the composed teams",
                "type": "object",
                "properties": {
                    "optimal": {
                        "description": "If this is 'true' the created teams are the best possible",
                        "type": "boolean",
                        "example": true
                    },
                    "teams": {
                        "description": "The teams that have been created",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/team"
                        }
                    }
                }
            },
            "profile_attributes_page": {
                "xml": {
                    "name": "profile_attributes_page"
                },
                "description": "Contains a set of profile attributes found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of profile attributes that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first profile attribute returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "attributes": {
                        "description": "The set of profile attributes found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/profile_attribute"
                        }
                    }
                }
            },
            "error_message": {
                "xml": {
                    "name": "error_message"
                },
                "description": "Inform of an error that happens when interacts with the API",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Contain code that identifies the error",
                        "type": "string",
                        "example": "error_code"
                    },
                    "message": {
                        "description": "Contain a brief description of the error to be read by a human",
                        "type": "string",
                        "example": "Error readable by a human"
                    }
                }
            },
            "goal": {
                "xml": {
                    "name": "goal"
                },
                "description": "This component describes an objective to achieve in a task.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The code of the goal.",
                        "type": "string"
                    }
                }
            },
            "profile": {
                "xml": {
                    "name": "profile"
                },
                "description": "This component describes a profile of users.",
                "type": "object",
                "properties": {
                    "addresses": {
                        "description": "The different address of the user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/address"
                        }
                    },
                    "occupation": {
                        "description": "The main occupation of the user in English",
                        "type": "string",
                        "example": "Nurse"
                    },
                    "languages": {
                        "description": "The languages that the user can understand",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/language"
                        }
                    },
                    "gender": {
                        "description": "The possible gender of a person.",
                        "type": "string",
                        "enum": [
                            "FEMALE_CIS",
                            "MALE_CIS",
                            "FEMALE_TRANS",
                            "MALE_TRANS",
                            "NO_BINARY"
                        ]
                    },
                    "birth_date": {
                        "description": "The ISO 8601 date of birth of the user",
                        "type": "string",
                        "example": "2019-06-28"
                    },
                    "avatar": {
                        "description": "The URL to an image that represents the avatar of the user.",
                        "type": "string",
                        "example": "https://internetofus.eu/wp-content/uploads/sites/38/2019/02/WeNet_logo.png"
                    },
                    "intelligences": {
                        "$ref": "#/components/schemas/intelligences"
                    },
                    "locale": {
                        "description": "The locale of the user.",
                        "type": "string",
                        "example": "it_IT"
                    },
                    "update_date": {
                        "description": "The ISO 8601 date of the last time this profile has changed.",
                        "type": "string",
                        "example": "2019-08-08"
                    },
                    "since_date": {
                        "description": "The ISO 8601 date since the user is part of WeNet",
                        "type": "string",
                        "example": "2019-01-28"
                    },
                    "personality": {
                        "$ref": "#/components/schemas/personality"
                    },
                    "nationality": {
                        "description": "The nationality of the user in English",
                        "type": "string",
                        "example": "Italian"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/name"
                    },
                    "ethnic_group": {
                        "description": "The ethnic group of the user in English",
                        "type": "string",
                        "example": "Eskimo"
                    },
                    "id": {
                        "description": "The identifier of the profile.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "public_name": {
                        "description": "The name that it wants to be identified by other users on WeNet",
                        "type": "string",
                        "example": "Jonny D."
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "example": "jonnyd@internetofus.eu"
                    },
                    "geolocation": {
                        "$ref": "#/components/schemas/geolocation"
                    }
                }
            },
            "community": {
                "xml": {
                    "name": "community"
                },
                "description": "This component describes a community of users.",
                "type": "object",
                "properties": {
                    "keywords": {
                        "description": "The keywords of the community",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "social interaction",
                            "ethics",
                            "diversity"
                        ]
                    },
                    "since_time": {
                        "description": "The time in ISO 8601 format since the community is active.",
                        "type": "string",
                        "example": "2019-06-21T07:32:22Z"
                    },
                    "name": {
                        "description": "The name of the community.",
                        "type": "string",
                        "example": "WeNet"
                    },
                    "description": {
                        "description": "The description of the community.",
                        "type": "string",
                        "example": "A community of users that provide or require help"
                    },
                    "id": {
                        "description": "The identifier of the community.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "avatar": {
                        "description": "The URL to an image that represents the avatar of the community.",
                        "type": "string",
                        "example": "https://internetofus.eu/wp-content/uploads/sites/38/2019/02/WeNet_logo.png"
                    }
                }
            },
            "community_members_page": {
                "xml": {
                    "name": "community_members_page"
                },
                "description": "Contains a set of community members found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of community members that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first community member returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "members": {
                        "description": "The set of community members found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/community_member"
                        }
                    }
                }
            },
            "teams_distribution": {
                "xml": {
                    "name": "teams_distribution"
                },
                "description": "Describe how a set of people will be distributed on a set of teams",
                "type": "object",
                "required": [
                    "number_of_people",
                    "people_per_team"
                ],
                "properties": {
                    "number_of_people": {
                        "format": "int32",
                        "description": "The number of people that have distributed on the teams",
                        "type": "integer",
                        "example": 10
                    },
                    "atMost": {
                        "maxItems": 2,
                        "xml": {
                            "name": "at_most"
                        },
                        "description": "Contain the distribution of the people on teams when the size is a maximum",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/team_distribution"
                        }
                    },
                    "people_per_team": {
                        "format": "int32",
                        "description": "The expected number of people on each team",
                        "type": "integer",
                        "example": 2
                    },
                    "basic": {
                        "maxItems": 2,
                        "description": "Contain the distribution of the people on teams when the size is a minimum",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/team_distribution"
                        }
                    }
                }
            },
            "person": {
                "xml": {
                    "name": "person"
                },
                "description": "Provide information about a person",
                "type": "object",
                "properties": {
                    "personality": {
                        "$ref": "#/components/schemas/personality"
                    },
                    "id": {
                        "description": "Contain the identifier of the person",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "intelligences": {
                        "$ref": "#/components/schemas/intelligences"
                    }
                }
            },
            "name": {
                "xml": {
                    "name": "name"
                },
                "description": "The information of the user name.",
                "type": "object",
                "properties": {
                    "middle": {
                        "description": "The portion of a personal name that is written between the person's first name (given) and their last names (surname).",
                        "type": "string",
                        "example": "Fitzgerald"
                    },
                    "last": {
                        "description": "The last name (surname or family name) is the portion (in some cultures) of a personal name that indicates a person's family (or tribe or community, depending on the culture).",
                        "type": "string",
                        "example": "Smith"
                    },
                    "prefix": {
                        "description": "The prefix of the name such as Mr., Mrs., Ms., Miss, or Dr.",
                        "type": "string",
                        "example": "Dr."
                    },
                    "suffix": {
                        "description": "The suffix of the name such as Jr., Sr., I, II, III, IV, V, MD, DDS, PhD or DVM.",
                        "type": "string",
                        "example": "Jr."
                    },
                    "first": {
                        "description": "The first name (also known as a given name, forename or Christian name) is a part of a person's personal name.",
                        "type": "string",
                        "example": "Abbey"
                    }
                },
                "example": "Dr. John Doe Jr."
            },
            "published_task_types_page": {
                "xml": {
                    "name": "published_task_types_page"
                },
                "description": "Contains a set of published task types found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of published task types that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first published task type returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "taskTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/published_task_type"
                        }
                    }
                }
            },
            "published_task_type": {
                "xml": {
                    "name": "published_task_type"
                },
                "description": "A task type that is published to share with all the WeNet users.",
                "type": "object",
                "properties": {
                    "publisher_id": {
                        "description": "The identifier of the user that has published the task type.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "taskType": {
                        "$ref": "#/components/schemas/task_type"
                    },
                    "keywords": {
                        "description": "The keywords that describe the published task type.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "social interaction",
                            "ethics",
                            "diversity"
                        ]
                    },
                    "id": {
                        "description": "The identifier of the published task type.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "publish_date": {
                        "description": "The ISO 8601 date when the task type was published",
                        "type": "string",
                        "example": "2019-06-28"
                    }
                }
            },
            "communities_page": {
                "xml": {
                    "name": "communities_page"
                },
                "description": "Contains a set of communities found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of communities that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first community returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "communities": {
                        "description": "The set of communities found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/community"
                        }
                    }
                }
            },
            "profile_attribute": {
                "xml": {
                    "name": "profile_attribute"
                },
                "description": "Contains the value of a profile attribute.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the attribute",
                        "type": "string",
                        "enum": [
                            "name",
                            "public_name",
                            "email",
                            "avatar",
                            "phone_number",
                            "languages",
                            "gender",
                            "geolocation",
                            "personality",
                            "intelligences",
                            "birth_date",
                            "ethnic_group",
                            "addresses",
                            "friends",
                            "norms",
                            "communities",
                            "tasks",
                            "trust",
                            "occupation",
                            "nationality",
                            "locale",
                            "competences"
                        ],
                        "example": "name"
                    },
                    "from": {
                        "description": "The time when the variable is set in ISO 8601 format.",
                        "type": "string",
                        "example": "2018-06-21T07:32:22Z"
                    },
                    "to": {
                        "description": "The time when the variable is modified to a new value in ISO 8601 format.",
                        "type": "string",
                        "example": "2018-07-21T07:32:22Z"
                    },
                    "value": {
                        "description": "The value of the attribute",
                        "type": "object",
                        "example": "Dr. John Smith Jr."
                    }
                }
            },
            "status": {
                "xml": {
                    "name": "status"
                },
                "description": "Provide information about the current status of the API",
                "type": "object",
                "properties": {
                    "vendor": {
                        "description": "Contain information of the organization that has implemented the API",
                        "type": "string",
                        "example": "UDT-IA, IIIA-CSIC"
                    },
                    "version": {
                        "description": "Contain the version of the API",
                        "type": "string",
                        "example": "1.0.0"
                    }
                }
            },
            "trust": {
                "xml": {
                    "name": "trust"
                },
                "description": "The information of the trust of an user respect another.",
                "type": "object",
                "properties": {
                    "user_id": {
                        "description": "The identifier of the user that this is the trust.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "value": {
                        "description": "The trust over the user. It has to be on the range [0,1].",
                        "type": "number",
                        "example": 0.43
                    }
                }
            },
            "questionnaire": {
                "xml": {
                    "name": "questionnaire"
                },
                "description": "A questionnaire used to evaluate a person attribute",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "A name that identifies the questionnaire for a human",
                        "type": "string",
                        "example": "Personality test"
                    },
                    "questions": {
                        "description": "The set of questions used to evaluate the person.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/question"
                        }
                    },
                    "description": {
                        "description": "Explains what attribute of a person it evaluates",
                        "type": "string",
                        "example": "With this questionnaire is possible to obtain the personality of a person."
                    }
                }
            },
            "published_norm": {
                "xml": {
                    "name": "published_norm"
                },
                "description": "A norm that is published to share with all the WeNet users.",
                "type": "object",
                "properties": {
                    "publisher_id": {
                        "description": "The identifier of the user that has published the norm.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "keywords": {
                        "description": "The keywords of the norm",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "social interaction",
                            "ethics",
                            "diversity"
                        ]
                    },
                    "name": {
                        "description": "The name of the norm.",
                        "type": "string",
                        "example": "WeNet"
                    },
                    "description": {
                        "description": "The description of the norm.",
                        "type": "string",
                        "example": "A norm of users that provide or require help"
                    },
                    "id": {
                        "description": "The identifier of the norm.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "publish_date": {
                        "description": "The ISO 8601 date when the norm was published",
                        "type": "string",
                        "example": "2019-06-28"
                    },
                    "norm": {
                        "$ref": "#/components/schemas/norm"
                    }
                }
            },
            "community_member": {
                "xml": {
                    "name": "community_member"
                },
                "description": "The information of an member that plays in a community.",
                "type": "object",
                "properties": {
                    "privileges": {
                        "description": "The privileges of the user on the community",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "MODIFY_NAME",
                                "MODIFY_DESCRIPTION",
                                "MODIFY_KEYWORDS",
                                "MODIFY_AVATAR",
                                "ADD_NORM",
                                "REMOVE_NORM",
                                "ADD_MEMBER",
                                "REMOVE_MEMBER",
                                "MODIFY_MEMBER_PRIVILEGES",
                                "VIEW_MEMBER_PRIVILEGES",
                                "ADD_TASK_TYPE",
                                "REMOVE_TASK_TYPE",
                                "ADD_TASK_INSTANCE"
                            ]
                        }
                    },
                    "user_id": {
                        "description": "The identifier of the user.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "join_time": {
                        "description": "The time in ISO 8601 format when the user has joined in the community.",
                        "type": "string",
                        "example": "2019-06-21T07:32:22Z"
                    }
                }
            },
            "competence": {
                "xml": {
                    "name": "competence"
                },
                "description": "A competence that an user can do.",
                "type": "object",
                "properties": {
                    "level": {
                        "description": "The ability level of the person in the competence.",
                        "type": "string",
                        "enum": [
                            "Novice",
                            "Experienced_beginner",
                            "Practitioner",
                            "Knowledgeable_practitioner",
                            "Expert"
                        ],
                        "example": "Expert"
                    },
                    "name": {
                        "description": "The name of the competence",
                        "type": "string",
                        "example": "cooking"
                    }
                }
            },
            "personality": {
                "xml": {
                    "name": "personality"
                },
                "description": "Provide information about the personality of a person",
                "type": "object",
                "properties": {
                    "judgment": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The judgment grade of a person",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.2
                    },
                    "extrovert": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The extrovert grade of a person",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.3
                    },
                    "perception": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The perception grade of a person",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.1
                    },
                    "attitude": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The attitude grade of a person",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.4
                    }
                }
            },
            "community_task_type": {
                "xml": {
                    "name": "community_task_type"
                },
                "description": "A type of task that can be done in a community",
                "type": "object",
                "properties": {
                    "since_time": {
                        "description": "The time in ISO 8601 format since the task type is applied in the community.",
                        "type": "string",
                        "example": "2019-06-21T07:32:22Z"
                    },
                    "id": {
                        "description": "The identifier of the type task in a community.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "task_type": {
                        "$ref": "#/components/schemas/task_type"
                    }
                }
            },
            "team_distribution": {
                "xml": {
                    "name": "team_distribution"
                },
                "description": "Provide information about the distribution of the number of teams of a specific size",
                "type": "object",
                "properties": {
                    "quantity": {
                        "format": "int32",
                        "description": "The number of teams of the specified size",
                        "type": "integer",
                        "minimum": 1,
                        "example": 2
                    },
                    "size": {
                        "format": "int32",
                        "description": "The size of each team",
                        "type": "integer",
                        "minimum": 0,
                        "example": 2
                    }
                }
            },
            "published_norms_page": {
                "xml": {
                    "name": "published_norms_page"
                },
                "description": "Contains a set of published norms found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of published norms that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first published norm returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "norms": {
                        "description": "The set of published norms found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/published_norm"
                        }
                    }
                }
            },
            "community_task_types_page": {
                "xml": {
                    "name": "community_task_types_page"
                },
                "description": "Contains a set of community task types found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of community tasks that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first community task returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "tasks": {
                        "description": "The set of community tasks found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/community_task_type"
                        }
                    }
                }
            },
            "friends_page": {
                "xml": {
                    "name": "friends_page"
                },
                "description": "Contains a set of friends found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of friends that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first friend returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "friends": {
                        "description": "The set of friends found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/friend"
                        }
                    }
                }
            },
            "profile_norm": {
                "xml": {
                    "name": "profile_norm"
                },
                "description": "A norm that is applied in a profile",
                "type": "object",
                "properties": {
                    "since_time": {
                        "description": "The time in ISO 8601 format since the norm is applied in the profile.",
                        "type": "string",
                        "example": "2019-06-21T07:32:22Z"
                    },
                    "id": {
                        "description": "The identifier of the profile norm.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "norm": {
                        "$ref": "#/components/schemas/norm"
                    }
                }
            },
            "requirements": {
                "xml": {
                    "name": "requirements"
                },
                "description": "Describe the requirements of the teams that will be created",
                "type": "object",
                "properties": {
                    "visual_spatial": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "logic_mathematics": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "musical_rhythmic": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "verbal": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "kinestesica_corporal": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "interpersonal": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "naturalist_environmental": {
                        "$ref": "#/components/schemas/requirement"
                    },
                    "intrapersonal": {
                        "$ref": "#/components/schemas/requirement"
                    }
                }
            },
            "address": {
                "xml": {
                    "name": "address"
                },
                "description": "Contains an address of the user",
                "type": "object",
                "properties": {
                    "number": {
                        "format": "int32",
                        "description": "The number on the street",
                        "type": "integer",
                        "example": 111
                    },
                    "country_code": {
                        "description": "The ISO 3166-1 alpha-3 code of the country",
                        "type": "string",
                        "example": "CHE"
                    },
                    "city": {
                        "description": "The name of the primary locality of the place.",
                        "type": "string",
                        "example": "Duebendorf"
                    },
                    "street": {
                        "description": "The street name.",
                        "type": "string",
                        "example": "Ueberlandstrasse"
                    },
                    "extra": {
                        "description": "Extra information to define the postal address as house, floor or door",
                        "type": "string",
                        "example": "2nd Floor"
                    },
                    "name": {
                        "description": "The index of the first profile attribute returned.",
                        "type": "string",
                        "example": "home"
                    },
                    "state": {
                        "description": "A division of a country; typically a first-level administrative division of a country and/or a geographical region.",
                        "type": "string",
                        "example": "Zurich"
                    },
                    "postal_code": {
                        "description": "An alphanumeric string included in a postal address to facilitate mail sorting (a.k.a. post code, postcode, or ZIP code)",
                        "type": "string",
                        "example": "08080"
                    }
                }
            },
            "question": {
                "xml": {
                    "name": "question"
                },
                "description": "A question used to extract information of a person",
                "type": "object",
                "properties": {
                    "help": {
                        "description": "A message to help to answer the question",
                        "type": "string",
                        "example": "Example: If a judge judges your brother, you must follow the laws that apply to everyone equally."
                    },
                    "answers": {
                        "description": "The possible answers for the question",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/answer"
                        }
                    },
                    "text": {
                        "description": "The text of the question",
                        "type": "string",
                        "example": "The judges must be"
                    }
                }
            },
            "profile_norms_page": {
                "xml": {
                    "name": "profile_norms_page"
                },
                "description": "Contains a set of profile norms found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of profile norms that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first profile norm returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "norms": {
                        "description": "The set of profile norms found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/profile_norm"
                        }
                    }
                }
            },
            "intelligences": {
                "xml": {
                    "name": "intelligences"
                },
                "description": "Provide information about the intelligences of a person",
                "type": "object",
                "properties": {
                    "visual_spatial": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The visual-spatial intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.3
                    },
                    "logic_mathematics": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The logic-mathematics intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.2
                    },
                    "musical_rhythmic": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The musical-rhythmic intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.5
                    },
                    "verbal": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The verbal intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.1
                    },
                    "kinestesica_corporal": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The kinestesica-corporal intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.4
                    },
                    "interpersonal": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The interpersonal intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.7
                    },
                    "naturalist_environmental": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The naturalist-environmental intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.8
                    },
                    "intrapersonal": {
                        "format": "double",
                        "maximum": 1.0,
                        "description": "The intrapersonal intelligence",
                        "type": "number",
                        "minimum": 0.0,
                        "example": 0.6
                    }
                }
            },
            "team": {
                "xml": {
                    "name": "team"
                },
                "description": "A set of people aggregated to do something",
                "type": "object",
                "properties": {
                    "logic_mathematics_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the logic-mathematics intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "peopleIds": {
                        "xml": {
                            "name": "people_ids"
                        },
                        "description": "The identifiers of the people that form the team",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "550e8400-e29b-41d4-a716-446655440000",
                            "1db14dd1-ed9a-463d-a518-54c7c38dcec9"
                        ]
                    },
                    "kinestesica_corporal_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the kinestesica-corporal intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "musical_rhythmic_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the musical-rhythmic intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "intrapersonal_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the intrapersonal intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "verbal_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the verbal intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "naturalist_environmental_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the naturalist-environmental intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "visual_spatial_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the visual-spatial intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "interpersonal_leader_id": {
                        "description": "The identifier of the person on the team that is the leader of the interpersonal intelligence",
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                }
            },
            "requirement": {
                "xml": {
                    "name": "requirement"
                },
                "description": "Describe the required values for intelligence on the team that will be created",
                "type": "object",
                "properties": {
                    "level": {
                        "format": "double",
                        "maximum": 1,
                        "description": "The level of the intelligence that the team has to reach",
                        "type": "number",
                        "minimum": 0,
                        "example": 0.5
                    },
                    "importance": {
                        "format": "int32",
                        "description": "The importance of the intelligence on the team",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    }
                }
            },
            "message": {
                "xml": {
                    "name": "message"
                },
                "description": "This component describes an action that an user wants to do.",
                "type": "object",
                "properties": {
                    "norms": {
                        "description": "The norms associated to the message.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/norm"
                        }
                    },
                    "content": {
                        "description": "The content of the message.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/message_attribute"
                        }
                    }
                }
            },
            "trusts_page": {
                "xml": {
                    "name": "trusts_page"
                },
                "description": "Contains a set of trusts found",
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int64",
                        "description": "The number total of trusts that satisfies the search.",
                        "type": "integer",
                        "example": 100
                    },
                    "offset": {
                        "format": "int32",
                        "description": "The index of the first trust returned.",
                        "type": "integer",
                        "example": 0
                    },
                    "trusts": {
                        "description": "The set of trusts found",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/trust"
                        }
                    }
                }
            },
            "task_attribute": {
                "xml": {
                    "name": "task_attribute"
                },
                "description": "This component describes an attribute on a task instance.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the attribute.",
                        "type": "string",
                        "example": "community_id"
                    },
                    "value": {
                        "description": "The value of the attribute.",
                        "type": "object",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    }
                }
            },
            "answer": {
                "xml": {
                    "name": "answer"
                },
                "description": "Provide a possible answer for a question",
                "type": "object",
                "properties": {
                    "text": {
                        "description": "The text of the answer",
                        "type": "string",
                        "example": "Compassionate"
                    },
                    "value": {
                        "format": "double",
                        "description": "The value associated with the answer",
                        "type": "number",
                        "example": -1
                    }
                }
            },
            "community_norm": {
                "xml": {
                    "name": "community_norm"
                },
                "description": "A norm that is applied in a community",
                "type": "object",
                "properties": {
                    "since_time": {
                        "description": "The time in ISO 8601 format since the norm is applied in the community.",
                        "type": "string",
                        "example": "2019-06-21T07:32:22Z"
                    },
                    "id": {
                        "description": "The identifier of the community norm.",
                        "type": "string",
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    "norm": {
                        "$ref": "#/components/schemas/norm"
                    }
                }
            },
            "task_type": {
                "xml": {
                    "name": "task_type"
                },
                "description": "The description of type of task.",
                "type": "object",
                "properties": {
                    "goal": {
                        "$ref": "#/components/schemas/goal"
                    },
                    "audio_description": {
                        "description": "The URL to an audio file that describe the task type.",
                        "type": "string",
                        "example": "https://internetofus.eu/wp-content/uploads/task_12345.mp3"
                    },
                    "norms": {
                        "description": "The norms that has to satisfy the users to do the task.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/norm"
                        }
                    },
                    "name": {
                        "description": "The name of the task type.",
                        "type": "string",
                        "example": "WeNet"
                    },
                    "description": {
                        "description": "The description of the task type.",
                        "type": "string",
                        "example": "A description that explains witch is the action associated to the task"
                    }
                }
            },
            "questionnaire_answers": {
                "xml": {
                    "name": "questionnaire_answers"
                },
                "description": "Contains the selected answers of a questionnaire",
                "type": "object",
                "properties": {
                    "answerValues": {
                        "xml": {
                            "name": "answer_values"
                        },
                        "description": "The selected values for the questions on the questionnaire. The answer values are on the same order of the question that refers to the questionnaire.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/question"
                        },
                        "example": [
                            1,
                            -1,
                            0,
                            1,
                            1,
                            -1,
                            1,
                            0,
                            0,
                            0,
                            1,
                            -1,
                            -1,
                            -1,
                            1
                        ]
                    }
                }
            },
            "geolocation": {
                "xml": {
                    "name": "geolocation"
                },
                "description": "The geographic coordinates of a location.",
                "type": "object",
                "properties": {
                    "latitude": {
                        "description": "The latitude coordinate of the location.",
                        "type": "number",
                        "example": 42.4371685
                    },
                    "label": {
                        "description": "The description of the location.",
                        "type": "string",
                        "example": "Home"
                    },
                    "poi": {
                        "description": "The identifier that uniquely identifies the location.",
                        "type": "string",
                        "example": "EisxMyBNYXJrZXQgU3RyZWV0LCBXaWxtaW5ndG9uLCBOQyAyODQwMSwgVVNB"
                    },
                    "longitude": {
                        "description": "The longitude coordinate of the location.",
                        "type": "number",
                        "example": 1.9331308
                    }
                }
            }
        }
    },
    "openapi": "3.0.1",
    "paths": {
        "/profiles/{profile_id}/trust/{user_id}": {
            "get": {
                "summary": "Get the trust over another user",
                "description": "Get the trust of the profile user respect another",
                "operationId": "getUserTrust_1",
                "responses": {
                    "200": {
                        "description": "The user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the user trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to get the trust",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                ],
                "tags": [
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/norms/{norm_id}": {
            "get": {
                "summary": "Get a norm",
                "description": "Get a norm from an user profile",
                "operationId": "getNorm_1",
                "responses": {
                    "200": {
                        "description": "The profile norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get a norm from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get a norm from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get a norm from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get a norm from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the norm",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "norm_id",
                        "description": "The identifier of the norm to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Norms",
                    "Profiles"
                ]
            },
            "delete": {
                "summary": "Remove a norm",
                "description": "Remove a norm from an user profile",
                "operationId": "removeNorm_1",
                "responses": {
                    "200": {
                        "description": "The removed norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a norm from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a norm from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to remove the norm",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "norm_id",
                        "description": "The identifier of the norm to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Norms",
                    "Profiles"
                ]
            }
        },
        "/communities/{community_id}/norms/{community_norm_id}": {
            "get": {
                "summary": "Get a community norm",
                "description": "Get a norm from a community",
                "operationId": "getCommunityNorm_1",
                "responses": {
                    "200": {
                        "description": "The community norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the community norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You need to play in the community to get the norm"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You need to play in the community to get the norm"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community or norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the norm",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_norm_id",
                        "description": "The identifier of the community norm to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Norms"
                ]
            },
            "delete": {
                "summary": "Remove a community norm",
                "description": "Remove a norm from a community",
                "operationId": "removeCommunityNorm_1",
                "responses": {
                    "200": {
                        "description": "The removed community norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not remove a community norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to remove a community norm"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to remove a community norm"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community or norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to remove the community norm",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_norm_id",
                        "description": "The identifier of the community norm to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Norms"
                ]
            }
        },
        "/communities/{community_id}/task_instances": {
            "post": {
                "summary": "Add a task instance into a community",
                "requestBody": {
                    "description": "The task to do by the community",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/community_task_instance"
                            }
                        }
                    }
                },
                "description": "Add a new task to do in a community.",
                "operationId": "addCommunityTaskInstance_1",
                "responses": {
                    "200": {
                        "description": "The added task instance",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a community task instance",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a community task instance",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a community task instance",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to add a new community task instance",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a task instance",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to add a task to do in the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a task instance",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to add a task to do in the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to add the task instance",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/task_types/{task_type_id}/trust/{user_id}": {
            "get": {
                "summary": "Get the trust over another user in a community to fulfil a task type",
                "description": "Get the trust of the profile user respect another in a community to fulfil a task type",
                "operationId": "getUserTrustInCommunityToDoTask_1",
                "responses": {
                    "200": {
                        "description": "The user trust in the community to fulfil a task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile, community or type of task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the user trust",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "task_type_id",
                        "description": "The identifier of the type of task that the user will do",
                        "required": true,
                        "example": "a56f686a-6f00-45c9-ad4f-dabd8cb13bfe"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to get the trust of another user in the community to fulfil a task of a specific type",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks",
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/tasks/{community_task_instance_id}": {
            "get": {
                "summary": "Get a community task instance",
                "description": "Allow to obtain an active community task instance where the user is involved",
                "operationId": "getCommunityTaskInstance_1",
                "responses": {
                    "200": {
                        "description": "The found tasks",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_instance"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_instance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community task instances",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community tasks",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile community task instances"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community tasks",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile community task instances"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile tasks of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile task instance of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile community task instance of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile task instance of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile community task instance of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile, community or task instance",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the community task instance",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the community task instance",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_task_instance_id",
                        "description": "The identifier of the community task instance to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/trust/{user_id}": {
            "get": {
                "summary": "Get the users in a community that have a trust in an specific range",
                "description": "Allow to obtain the users witch trust in a community are in a specific range",
                "operationId": "getUserTrustInCommunity_1",
                "responses": {
                    "200": {
                        "description": "The user trust in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the user trust",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to get the trust of another user in the community",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    }
                ],
                "tags": [
                    "Communities",
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/communities": {
            "get": {
                "summary": "Get active communities",
                "description": "Allow to obtain the communities where the user of the profile is a member",
                "operationId": "getCommunities_2",
                "responses": {
                    "200": {
                        "description": "The found communities",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/communities_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/communities_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the communities",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the communities",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile communities"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the communities",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile communities"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the communities of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the communities of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile communities of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the communities of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile communities of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the user to get the communities that it is involved",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile community to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile communities to return"
                    }
                ],
                "tags": [
                    "Communities",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/friends": {
            "post": {
                "summary": "Add a friend",
                "requestBody": {
                    "description": "The friend to add",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/friend"
                            }
                        }
                    }
                },
                "description": "Add a friend to an user profile",
                "operationId": "addFriend_1",
                "responses": {
                    "200": {
                        "description": "The added friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "A friend field is not valid",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The friend need a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "A friend field is not valid",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The friend need a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile friends of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a friend into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a friend to another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a friend into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a friend to another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to add the friend",
                        "required": true
                    }
                ],
                "tags": [
                    "Friends",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get some friends",
                "description": "Allow to obtain the friends associated to a profile",
                "operationId": "getFriends_1",
                "responses": {
                    "200": {
                        "description": "The found friends",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/friends_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/friends_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the friends",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the friends",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile friends"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the friends",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile friends"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile friends of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile friends of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile friends of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile friends of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile friends of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": "*",
                            "type": "string"
                        },
                        "in": "query",
                        "name": "attribute_name",
                        "description": "Pattern that has to match the name of the friend to return"
                    },
                    {
                        "schema": {
                            "default": "*",
                            "type": "string"
                        },
                        "in": "query",
                        "name": "status",
                        "description": "\"Pattern that has to match the status of the friend to return"
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile attribute to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile attributes to return"
                    }
                ],
                "tags": [
                    "Friends",
                    "Profiles"
                ]
            }
        },
        "/communities/{community_id}/norms": {
            "post": {
                "summary": "Add a norm into a community",
                "requestBody": {
                    "description": "The norm to add",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/norm"
                            }
                        }
                    }
                },
                "description": "Add a norm to be applied in a community",
                "operationId": "addCommunityNorm_1",
                "responses": {
                    "200": {
                        "description": "The added norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the community norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a norm into a community of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not add a norm to another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a norm into a community of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not add a norm to another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to add the norm",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Norms"
                ]
            },
            "get": {
                "summary": "Get some community norms",
                "description": "Allow to obtain the norms associated to a community",
                "operationId": "getCommunityNorms_1",
                "responses": {
                    "200": {
                        "description": "The found norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norms_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_norms_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community norms"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community norms"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the community norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the community norms if you no play on it",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community norms if you not play on it"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the community norms if you no play on it",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community norms if you not play on it"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the norms",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first community norm to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of community norm  to return"
                    }
                ],
                "tags": [
                    "Communities",
                    "Norms"
                ]
            }
        },
        "/teams/intelligences": {
            "post": {
                "summary": "Calculate the intelligences of a person",
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/questionnaire_answers"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/questionnaire_answers"
                            }
                        }
                    }
                },
                "description": "Evaluate the answers to the intelligences test to obtain the intelligences of the person",
                "operationId": "calculateIntelligences_1",
                "responses": {
                    "200": {
                        "description": "The intelligences of the person",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/intelligences"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/intelligences"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to evaluate the intelligences questionnaire",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_intelligences_unauthorized",
                                            "message": "You are not authorized to evaluate the intelligences questionnaire"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_intelligences_unauthorized",
                                            "message": "You are not authorized to evaluate the intelligences questionnaire"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Teams"
                ]
            },
            "get": {
                "summary": "Obtain the intelligences test",
                "description": "Return the questionnaire used to obtain the intelligences of a person",
                "operationId": "getIntelligencesQuestionnaire_1",
                "responses": {
                    "200": {
                        "description": "The questionnaire to evaluate the intelligences of a person",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/questionnaire"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/questionnaire"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the intelligences questionnaire",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_intelligences_unauthorized",
                                            "message": "You are not authorized to get the intelligences questionnaire"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_intelligences_unauthorized",
                                            "message": "You are not authorized to get the intelligences questionnaire"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "default": "en",
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept-Language",
                        "description": "The preferred language for the text on the questionnaire. If it is not available the texts will be on English.",
                        "example": "en"
                    }
                ],
                "tags": [
                    "Teams"
                ]
            }
        },
        "/teams/personality": {
            "post": {
                "summary": "Calculate the personality of a person",
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/questionnaire_answers"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/questionnaire_answers"
                            }
                        }
                    }
                },
                "description": "Evaluate the answers to the personality test to obtain the personality of the person",
                "operationId": "calculatePersonality_1",
                "responses": {
                    "200": {
                        "description": "The personality of the person",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/personality"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/personality"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to evaluate the personality questionnaire",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_personality_unauthorized",
                                            "message": "You are not authorized to evaluate the personality questionnaire"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_personality_unauthorized",
                                            "message": "You are not authorized to evaluate the personality questionnaire"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Teams"
                ]
            },
            "get": {
                "summary": "Obtain the personality test",
                "description": "Return the questionnaire used to obtain the personality of a person",
                "operationId": "getPersonalityQuestionnaire_1",
                "responses": {
                    "200": {
                        "description": "The questionnaire to evaluate the personality of a person",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/questionnaire"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/questionnaire"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the personality questionnaire",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_personality_unauthorized",
                                            "message": "You are not authorized to get the personality questionnaire"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_personality_unauthorized",
                                            "message": "You are not authorized to get the personality questionnaire"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "default": "en",
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept-Language",
                        "description": "The preferred language for the text on the questionnaire. If it is not available the texts will be on English.",
                        "example": "en"
                    }
                ],
                "tags": [
                    "Teams"
                ]
            }
        },
        "/tasks/types/published/{published_task_type_id}": {
            "get": {
                "summary": "Get a published task type",
                "description": "Allow to get a published task type",
                "operationId": "getPublishedTaskType_1",
                "responses": {
                    "200": {
                        "description": "The published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to get the published task type"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to get the published task type"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_not_found",
                                            "message": "Not found a published task type associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_not_found",
                                            "message": "Not found a published task type associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "published_task_type_id",
                        "description": "The identifier of the published task type to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ]
            },
            "delete": {
                "summary": "Delete a published task type",
                "description": "Allow to delete a published task type",
                "operationId": "deletePublishedTaskType_1",
                "responses": {
                    "200": {
                        "description": "The deleted published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to delete the published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to delete the task type"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to delete the task type"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete the task type that you do not are the owner",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the published task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_forbidden",
                                            "message": "You can not delete the published task type if you are not the owner"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the published task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_forbidden",
                                            "message": "You can not delete the published task type if you are not the owner"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_not_found",
                                            "message": "Not found a published task type associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasktype_not_found",
                                            "message": "Not found a published task type associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "published_task_type_id",
                        "description": "The identifier of the published task type to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ]
            }
        },
        "/profiles/{profile_id}/norms": {
            "post": {
                "summary": "Add a norm",
                "requestBody": {
                    "description": "The norm to add",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/norm"
                            }
                        }
                    }
                },
                "description": "Add a norm to an user profile",
                "operationId": "addNorm_1",
                "responses": {
                    "200": {
                        "description": "The added norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a norm into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a norm to another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a norm into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a norm to another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to add the norm",
                        "required": true
                    }
                ],
                "tags": [
                    "Norms",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get some norms",
                "description": "Allow to obtain the norms associated to a profile",
                "operationId": "getNorms_1",
                "responses": {
                    "200": {
                        "description": "The found norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norms_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_norms_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile norms"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile norms"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile norms of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile norms of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile norms of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile norms of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the norms",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile norm to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile norms to return"
                    }
                ],
                "tags": [
                    "Norms",
                    "Profiles"
                ]
            }
        },
        "/teams/composite": {
            "post": {
                "summary": "Create teams",
                "requestBody": {
                    "description": "The information necessary to create the teams",
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/composite"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/composite"
                            }
                        }
                    }
                },
                "description": "It distributes a group of people in different teams taking into account their personality and intelligences",
                "operationId": "composite_1",
                "responses": {
                    "200": {
                        "description": "The created teams",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/composed_teams"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/composed_teams"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to create teams",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_composite_unauthorized",
                                            "message": "You are not authorized to create teams"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_composite_unauthorized",
                                            "message": "You are not authorized to create teams"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Teams"
                ]
            },
            "get": {
                "summary": "Calculate the number of teams and each sizer that the composite can create",
                "description": "Obtain how many teams and their size that will be created",
                "operationId": "getTeamsDistribution_1",
                "responses": {
                    "200": {
                        "description": "The size of the possible teams",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/teams_distribution"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/teams_distribution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the teams sizes",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_composite_unauthorized",
                                            "message": "You are not authorized to get the teams sizes"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "teams_composite_unauthorized",
                                            "message": "You are not authorized to get the teams sizes"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "default": 4,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "number_of_people",
                        "description": "The number of people that has to be distributed on different teams",
                        "required": true,
                        "example": 10
                    },
                    {
                        "schema": {
                            "default": 2,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "people_per_team",
                        "description": "The number of people that have to be on each team",
                        "example": 2
                    }
                ],
                "tags": [
                    "Teams"
                ]
            }
        },
        "/profiles/{profile_id}/historic": {
            "get": {
                "summary": "Get some profile attributes ",
                "description": "Allow to obtain the profile attribute values in a period of time",
                "operationId": "getAttributes_1",
                "responses": {
                    "200": {
                        "description": "The found attributes",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_attributes_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile_attributes_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the profile attributes",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile attributes",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to profile attributes"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile attributes",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to profile attributes"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile attributes of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile attributes of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile attributes of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile attributes of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile attributes of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "attribute_name",
                        "description": "Pattern that has to match the attributes to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "from",
                        "description": "The date inclusive that mark the older limit in witch the attribute has to be active. It is formatter in ISO 8601."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "to",
                        "description": "The date inclusive that mark the newest limit in witch the attribute has to be active. It is formatter in ISO 8601."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "order",
                        "description": "The order in witch has to return the attributes"
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile attribute to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile attributes to return"
                    }
                ],
                "tags": [
                    "Historic",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/trust": {
            "post": {
                "summary": "Set the trust over another user",
                "requestBody": {
                    "description": "The trust to set",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/trust"
                            }
                        }
                    }
                },
                "description": "Set the trust of the profile user respect another",
                "operationId": "setUserTrust_1",
                "responses": {
                    "200": {
                        "description": "The set user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to set the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not modify the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to set the user trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    }
                ],
                "tags": [
                    "Trust",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get the users that have a trust in an specific range",
                "description": "Allow to obtain the users witch trust are in a specific range",
                "operationId": "getUsersWithTrust_1",
                "responses": {
                    "200": {
                        "description": "The trust of the user that are in the range",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad search parameters",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the user trusts",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "min_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "max_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "default": "DESC",
                            "type": "string"
                        },
                        "in": "path",
                        "name": "order",
                        "description": "The order in witch has to return the users",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "tags": [
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/friends/{friend_id}": {
            "delete": {
                "summary": "Remove a friend",
                "description": "Remove a friend from an user profile",
                "operationId": "removeFriend_1",
                "responses": {
                    "200": {
                        "description": "The removed friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile friends of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a friend from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a friend from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a friend from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a friend from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to remove the friend",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "friend_id",
                        "description": "The identifier of the friend to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Friends",
                    "Profiles"
                ]
            },
            "put": {
                "summary": "Update a friend",
                "requestBody": {
                    "description": "The new values for the friend",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/friend"
                            }
                        }
                    }
                },
                "description": "Update a friend from an user profile",
                "operationId": "updateFriend_1",
                "responses": {
                    "200": {
                        "description": "The updated friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/friend"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to update a friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update a friend",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile friends of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to update a friend from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not update a friend from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to update a friend from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not update a friend from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or friend",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to update the friend",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "friend_id",
                        "description": "The identifier of the friend to update",
                        "required": true
                    }
                ],
                "tags": [
                    "Friends",
                    "Profiles"
                ]
            }
        },
        "/communities/{community_id}/task_types/{community_task_type_id}": {
            "get": {
                "summary": "Get a community task type",
                "description": "Get a community task type.",
                "operationId": "getCommunityTaskType_1",
                "responses": {
                    "200": {
                        "description": "The community task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get a community task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a community task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community task type"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get a community task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community task type"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to get a community task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "You must play on the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get information of a community that you are not in"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "You must play on the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get information of a community that you are not in"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community or task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the task type",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_task_type_id",
                        "description": "The identifier of the community task type to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks"
                ]
            },
            "delete": {
                "summary": "Remove a community task type",
                "description": "Remove a community task type. So this kind of task type can not be done more by the members of the community",
                "operationId": "removeCommunityTaskType_1",
                "responses": {
                    "200": {
                        "description": "The removed community task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a community task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a community task",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a community task",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to remove a task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a task from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to remove a task type in the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a task from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to remove a task type in the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community or task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to remove the task type",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_task_type_id",
                        "description": "The identifier of the community task type to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/tasks": {
            "get": {
                "summary": "Get the active community tasks",
                "description": "Allow to obtain the active community tasks of an user",
                "operationId": "getCommunityTaskInstances_1",
                "responses": {
                    "200": {
                        "description": "The found tasks",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_instances_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_instances_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community tasks",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community tasks",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile community tasks"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community tasks",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile community tasks"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile tasks of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile tasks of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile community tasks of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile tasks of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile community tasks of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the tasks",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the tasks",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile community to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile tasks to return"
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/trust": {
            "post": {
                "summary": "Set the trust over another user in a community",
                "requestBody": {
                    "description": "The trust to set",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/trust"
                            }
                        }
                    }
                },
                "description": "Set the trust of the profile user respect another in a community",
                "operationId": "setUserTrustInCommunity_1",
                "responses": {
                    "200": {
                        "description": "The user trust in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to modify the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not modify the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the user trust",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                ],
                "tags": [
                    "Communities",
                    "Trust",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get the users in a community that has a trust in an specific range",
                "description": "Allow to obtain the users witch trust in a community that are in a specific range",
                "operationId": "getUsersWithTrustInCommunity_1",
                "responses": {
                    "200": {
                        "description": "The trust of the user that are in the range",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad search parameters",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the user trusts",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the user trusts",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "min_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "max_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "default": "DESC",
                            "type": "string"
                        },
                        "in": "path",
                        "name": "order",
                        "description": "The order in witch has to return the users",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "tags": [
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/tasks/types/published": {
            "post": {
                "summary": "Publish a task type",
                "requestBody": {
                    "description": "The task type to publish",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/published_task_type"
                            }
                        }
                    }
                },
                "description": "Publish a task type to be accessible by the other users on WeNet",
                "operationId": "publishTaskType_1",
                "responses": {
                    "200": {
                        "description": "The published task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_type"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The task type to publish is wrong",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad task type values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_taskt_ype",
                                            "message": "A task type needs a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad task type values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_taskt_ype",
                                            "message": "A task type needs a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to publish the task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to publish a task type"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to publish a task type"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Tasks"
                ]
            },
            "get": {
                "summary": "Search for a published task types",
                "description": "Get some published task types that satisfy some field attributes",
                "operationId": "searchPublishedTaskTypes_1",
                "responses": {
                    "200": {
                        "description": "The type tasks that match the patterns",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_types_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_task_types_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the task types",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to get the task types"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "tasks_unauthorized",
                                            "message": "You are not authorized to get the task types"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": "The pattern to match the name of task types to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "description",
                        "description": "The pattern to match the description of task types to return"
                    },
                    {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "name": "keywords",
                        "description": "The pattern to match the keywords of task types to return"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "The index of the first task type to return"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The number maximum of task types to return"
                    }
                ],
                "tags": [
                    "Tasks"
                ]
            }
        },
        "/communities/{community_id}/task_types": {
            "post": {
                "summary": "Add a task type into a community",
                "requestBody": {
                    "description": "The task type to add",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/task_type"
                            }
                        }
                    }
                },
                "description": "Add a new type of task that can be done by the members of a community.",
                "operationId": "addCommunityTaskType_1",
                "responses": {
                    "200": {
                        "description": "The added task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a task",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a task",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to add a task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to add a task type in the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a task type",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You do not have the privileges to add a task type in the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to add the task type",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks"
                ]
            },
            "get": {
                "summary": "Get the task types that can be done in a community",
                "description": "Allow to obtain all the types of task that any member of the community can do",
                "operationId": "getCommunityTaskTypes_1",
                "responses": {
                    "200": {
                        "description": "The found tasks",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_types_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_task_types_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the task types",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the task types",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community task types"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the task types",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to the community task types"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the community task types if you are not a member of the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the community task types if you no play on it",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get information of this community, because you are not a member"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the community task types if you no play on it",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get information of this community, because you are not a member"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the task types",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first community task type to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of community task types to return"
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks"
                ]
            }
        },
        "/profiles/{profile_id}/competences/{competence_name}": {
            "delete": {
                "summary": "Remove a competence",
                "description": "Remove a competence from an user profile",
                "operationId": "removeCompetence_1",
                "responses": {
                    "200": {
                        "description": "The removed competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile competences of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a competence from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a competence from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a competence from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not remove a competence from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to remove the competence",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "competence_name",
                        "description": "The name of the competence to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Competences",
                    "Profiles"
                ]
            },
            "put": {
                "summary": "Update a competence",
                "requestBody": {
                    "description": "The new values for the competence",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/competence"
                            }
                        }
                    }
                },
                "description": "Update a competence from an user profile",
                "operationId": "updateCompetence_1",
                "responses": {
                    "200": {
                        "description": "The updated competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to update a competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile competences of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to update a competence from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not update a competence from another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to update a competence from a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not update a competence from another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile or competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to update the competence",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "competence_name",
                        "description": "The name of the competence to update",
                        "required": true
                    }
                ],
                "tags": [
                    "Competences",
                    "Profiles"
                ]
            }
        },
        "/communities/{community_id}": {
            "get": {
                "summary": "Return a community associated to the identifier",
                "description": "Allow to get a community associated to an identifier",
                "operationId": "getCommunity_1",
                "responses": {
                    "200": {
                        "description": "The community associated to the identifier",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to get the community that you do not play",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community information if you are not playing on it"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community information if you are not playing on it"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "delete": {
                "summary": "Delete a community",
                "description": "Allow to delete a community",
                "operationId": "deleteCommunity_1",
                "responses": {
                    "200": {
                        "description": "The deleted community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to delete the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to delete the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to delete the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete the community that you do not are the owner",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not delete the community if you are not the owner"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not delete the community if you are not the owner"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "put": {
                "summary": "Update the values of a community",
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/community"
                            }
                        }
                    }
                },
                "description": "Allow to update a community associated",
                "operationId": "updateCommunity_1",
                "responses": {
                    "200": {
                        "description": "The updated community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The community to register is wrong",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad community values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_community",
                                            "message": "A community needs a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad community values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_community",
                                            "message": "A community needs a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to update the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to update the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to update the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update the community that you do not play",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not update the community information if you are not playing on it"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to update the community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not update the community information if you are not playing on it"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to update",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            }
        },
        "/norms/published/{published_norm_id}": {
            "get": {
                "summary": "Get a published norm",
                "description": "Allow to get a published norm",
                "operationId": "getPublishedNorm_1",
                "responses": {
                    "200": {
                        "description": "The published norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the published norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to get the published norm"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to get the published norm"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_not_found",
                                            "message": "Not found a published norm associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_not_found",
                                            "message": "Not found a published norm associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "published_norm_id",
                        "description": "The identifier of the published norm to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Norms"
                ]
            },
            "delete": {
                "summary": "Delete a published norm",
                "description": "Allow to delete a published norm",
                "operationId": "deletePublishedNorm_1",
                "responses": {
                    "200": {
                        "description": "The deleted published norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to delete the published norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to delete the published norm"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to delete the published norm"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete the published norm that you do not are the owner",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_forbidden",
                                            "message": "You can not delete the published norm if you are not the owner"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to delete the norm",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_forbidden",
                                            "message": "You can not delete the published norm if you are not the owner"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_not_found",
                                            "message": "Not found a published norm associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norm_not_found",
                                            "message": "Not found a published norm associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "published_norm_id",
                        "description": "The identifier of the published norm to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Norms"
                ]
            }
        },
        "/communities": {
            "post": {
                "summary": "Register a community",
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/community"
                            }
                        }
                    }
                },
                "description": "Add a community to the possible communities that the user can play",
                "operationId": "registerCommunity_1",
                "responses": {
                    "200": {
                        "description": "The registered community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The community to register is wrong",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad community values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_community",
                                            "message": "A community needs a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad community values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_community",
                                            "message": "A community needs a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to register the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to register a community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to register a community"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "get": {
                "summary": "Return the communities that an used can join",
                "description": "Allow to search for communities that an user can join",
                "operationId": "getCommunities_1",
                "responses": {
                    "200": {
                        "description": "The communities that match the patterns",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/communities_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/communities_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the communities",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the communities"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the communities"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to get the communities of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the communities",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_forbidden",
                                            "message": "You can not get the communities of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the communities",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_forbidden",
                                            "message": "You can not get the communities of another user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": "The pattern to match the name of communities to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "description",
                        "description": "The pattern to match the description of communities to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "keywords",
                        "description": "The pattern to match the keywords of communities to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "user_id",
                        "description": "The identifier of the user to get the communities"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "The index of the first community to return"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The number maximum of communities to return"
                    }
                ],
                "tags": [
                    "Communities"
                ]
            }
        },
        "/profiles/{profile_id}": {
            "get": {
                "summary": "Return a profile associated to the identifier",
                "description": "Allow to get a profile associated to an identifier",
                "operationId": "getProfile_1",
                "responses": {
                    "200": {
                        "description": "The profile associated to the identifier",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You are not authorized to get the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You are not authorized to get the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to get the profile that you do not play",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile information if you are not playing on it"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile information if you are not playing on it"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Profiles"
                ]
            },
            "put": {
                "summary": "Modify a profile",
                "requestBody": {
                    "description": "The new values for the profile",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/profile"
                            }
                        }
                    }
                },
                "description": "Change the attributes of a profile",
                "operationId": "updateProfile_1",
                "responses": {
                    "200": {
                        "description": "The profile associated to the identifier",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/profile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The profile is not right",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The phone is not in E.164 format"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The profile is not right",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The phone is not in E.164 format"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to modify the profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You are not authorized to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You are not authorized to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to get the profile that you do not play",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to update",
                        "required": true
                    }
                ],
                "tags": [
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/communities/{community_id}/task_types/{task_type_id}/trust": {
            "post": {
                "summary": "Set the trust over another user in a community to fulfil a task type",
                "requestBody": {
                    "description": "The trust to set",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/trust"
                            }
                        }
                    }
                },
                "description": "Set the trust of the profile user respect another in a community to fulfil a task type",
                "operationId": "setUserTrustInCommunityToDoTask_1",
                "responses": {
                    "200": {
                        "description": "The user trust in the community to fulfil a task type",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trust"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to modify the profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to modify the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to modify to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not modify the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile, community or type of task",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to set the trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to set the user trust",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "task_type_id",
                        "description": "The identifier of the type of task that the user will do",
                        "required": true,
                        "example": "a56f686a-6f00-45c9-ad4f-dabd8cb13bfe"
                    }
                ],
                "tags": [
                    "Communities",
                    "Tasks",
                    "Trust",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get the users in a community that have a trust to fulfil a task in an specific range",
                "description": "Allow to obtain the users witch trust to fulfil a task in a community are in a specific range",
                "operationId": "getUsersWithTrustInCommunityToDoTask_1",
                "responses": {
                    "200": {
                        "description": "The trust of the user that are in the range",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trusts_page"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad search parameters",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unexpected search parameter value",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The minimum trust has to be on the range [0,1]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the user trust",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the profile",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get the trust",
                        "required": true,
                        "example": "bf274393-1e7b-4d40-a897-88cb96277edd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the user trust",
                        "required": true,
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "task_type_id",
                        "description": "The identifier of the type of task that the user will do",
                        "required": true,
                        "example": "a56f686a-6f00-45c9-ad4f-dabd8cb13bfe"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "min_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "max_trust",
                        "description": "The minimum inclusive trust of the users to return",
                        "required": true,
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    {
                        "schema": {
                            "default": "DESC",
                            "type": "string"
                        },
                        "in": "path",
                        "name": "order",
                        "description": "The order in witch has to return the users",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "tags": [
                    "Trust",
                    "Profiles"
                ]
            }
        },
        "/profiles/{profile_id}/competences": {
            "post": {
                "summary": "Add a competence",
                "requestBody": {
                    "description": "The competence to add",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/competence"
                            }
                        }
                    }
                },
                "description": "Add a competence to an user profile",
                "operationId": "addCompetence_1",
                "responses": {
                    "200": {
                        "description": "The added competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/competence"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "A competence field is not valid",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The competence need a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "A competence field is not valid",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "The competence need a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add a competence",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to add a competence",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to modify the profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile competences of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a competence into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a competence to another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add a competence into a profile of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not add a competence to another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to add the competence",
                        "required": true
                    }
                ],
                "tags": [
                    "Competences",
                    "Profiles"
                ]
            },
            "get": {
                "summary": "Get some competences",
                "description": "Allow to obtain the competences associated to a profile",
                "operationId": "getCompetences_1",
                "responses": {
                    "200": {
                        "description": "The found competences",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/competences_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/competences_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the competences",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the competences",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile competences"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the competences",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profiles_unauthorized",
                                            "message": "You have to log in to access to the profile competences"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the profile competences of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile competences of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile competences of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get the profile competences of another user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_forbidden",
                                            "message": "You can not get the profile competences of another user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found profile",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "profile_not_found",
                                            "message": "Not found a profile associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "profile_id",
                        "description": "The identifier of the profile to get",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": "*",
                            "type": "string"
                        },
                        "in": "query",
                        "name": "attribute_name",
                        "description": "Pattern that has to match the name of the competence to return"
                    },
                    {
                        "schema": {
                            "default": "*",
                            "type": "string"
                        },
                        "in": "query",
                        "name": "level",
                        "description": "Pattern that has to match the level of the competence to return"
                    },
                    {
                        "schema": {
                            "default": "level DESC",
                            "type": "string"
                        },
                        "in": "query",
                        "name": "order",
                        "description": "The order in witch the competences has to be returned"
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first profile attribute to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of profile attributes to return"
                    }
                ],
                "tags": [
                    "Competences",
                    "Profiles"
                ]
            }
        },
        "/status": {
            "get": {
                "summary": "Get the status of the API",
                "description": "Return the current status information of the API",
                "operationId": "getStatusReport",
                "responses": {
                    "200": {
                        "description": "The API status",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Status"
                ]
            }
        },
        "/norms/published": {
            "post": {
                "summary": "Publish a norm",
                "requestBody": {
                    "description": "The norm to publish",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/published_norm"
                            }
                        }
                    }
                },
                "description": "Publish a norm to be accessible by the other users on WeNet",
                "operationId": "publishNorm_1",
                "responses": {
                    "200": {
                        "description": "The published norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norm"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The norm to publish is wrong",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad norm values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_norm",
                                            "message": "A norm needs a name"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad norm values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_norm",
                                            "message": "A norm needs a name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to publish the norm",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to publish a norm"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_unauthorized",
                                            "message": "You are not authorized to publish a norm"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Norms"
                ]
            },
            "get": {
                "summary": "Search for some published norms",
                "description": "Get some published norms that satisfy some field attributes",
                "operationId": "searchPublishedNorms_1",
                "responses": {
                    "200": {
                        "description": "The norms that match the patterns",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norms_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/published_norms_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the norms",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the norms"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to get the norms"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to get the norms of another user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_forbidden",
                                            "message": "You can not get the norms of another user"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the norms",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "norms_forbidden",
                                            "message": "You can not get the norms of another user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": "The pattern to match the name of norms to return"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "description",
                        "description": "The pattern to match the description of norms to return"
                    },
                    {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "name": "keywords",
                        "description": "The pattern to match the keywords of norms to return"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "The index of the first norm to return"
                    },
                    {
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The number maximum of norms to return"
                    }
                ],
                "tags": [
                    "Norms"
                ]
            }
        },
        "/communities/{community_id}/members/{user_id}": {
            "get": {
                "summary": "Get an user from a community ",
                "description": "You can use this method to leave or get an user from a community.",
                "operationId": "getCommunityMember_1",
                "responses": {
                    "200": {
                        "description": "The modified community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community users"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the information of an user if you not play in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to modify an user into the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to get community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to modify an user into the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get an user",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to get",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "delete": {
                "summary": "Remove an user from a community ",
                "description": "You can use this method to leave or remove an user from a community.",
                "operationId": "removeCommunityMember_1",
                "responses": {
                    "200": {
                        "description": "The removed community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to remove a community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to remove a community users"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to remove a community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to remove a community users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to modify the user in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to remove an user from the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to remove an user from the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to remove an user",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to remove",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "put": {
                "summary": "Modify an user from a community ",
                "requestBody": {
                    "description": "New values for the community user",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/community_member"
                            }
                        }
                    }
                },
                "description": "Modify the attributes of a community user.",
                "operationId": "modifyCommunityMember_1",
                "responses": {
                    "200": {
                        "description": "The modified community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community users"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to modify the community users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to modify the user in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to modify an user into the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to modify community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to modify an user into the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to modify the user",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "user_id",
                        "description": "The identifier of the user to modify",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            }
        },
        "/communities/{community_id}/members": {
            "post": {
                "summary": "Add an user into a community ",
                "requestBody": {
                    "description": "User to add into the community",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/community_member"
                            }
                        }
                    }
                },
                "description": "Join or add an user into a community.",
                "operationId": "addCommunityMember_1",
                "responses": {
                    "200": {
                        "description": "The added community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_member"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad community user",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "The community user is bad",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_bad_user",
                                            "message": "You must to specify the user identifier"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to add the community users"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to add the community users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You does not have the privileges to add the user in the community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to add an user into the community"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to add community user",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You does not have the necessary privilege to add an user into the community"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to add the user",
                        "required": true
                    }
                ],
                "tags": [
                    "Communities"
                ]
            },
            "get": {
                "summary": "Get the users in a community",
                "description": "Allow to get the users that plays in a community",
                "operationId": "getCommunityMembers_1",
                "responses": {
                    "200": {
                        "description": "The community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_members_page"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/community_members_page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to get the community users",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to get the community users"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized to get the community users",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "communities_unauthorized",
                                            "message": "You have to log in to access to get the community users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You can not get the community users if you not play on it",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community  users if you no play on it"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Forbidden to remove a norm from a community",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_forbidden",
                                            "message": "You can not get the community  users if you no play on it"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found community",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "No found response example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "community_not_found",
                                            "message": "Not found a community associated to the identifier"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "community_id",
                        "description": "The identifier of the community to get the users",
                        "required": true
                    },
                    {
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "Index of the first community user to return"
                    },
                    {
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Number maximum of community user to return"
                    }
                ],
                "tags": [
                    "Communities"
                ]
            }
        },
        "/messages": {
            "post": {
                "summary": "Send a message",
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/message"
                            }
                        }
                    }
                },
                "description": "Allow to send a message",
                "operationId": "sendMessage_1",
                "responses": {
                    "200": {
                        "description": "The sent message",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The message to send is wrong",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad message values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_message",
                                            "message": "A message needs a content"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Bad message values",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "bad_message",
                                            "message": "A message needs a content"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to send a message",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to send a message"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                },
                                "examples": {
                                    "Default Response": {
                                        "summary": "Unauthorized Response Example",
                                        "description": "Default Response",
                                        "value": {
                                            "code": "interaction_unauthorized",
                                            "message": "You are not authorized to send a message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "Provide the authorization code",
                        "required": true,
                        "example": "WeNet 89673098lkjbfjihg8103760"
                    }
                ],
                "tags": [
                    "Messages"
                ]
            }
        }
    },
    "info": {
        "contact": {
            "name": "UDT-IA, IIIA-CSIC",
            "url": "http://www.iiia.csic.es/"
        },
        "description": "This API will be used to storing and maintaining the user profile, the task description,\nand the community description, along with their associated norms, to realize the user\ninteractions between them sending messages guaranteeing that they follow the norms,\nand to form teams to realize a task.\n\nThe functionality of the API is organized around the following concepts:\n\n * **Community**: is a group of users with a common goal.\n * **Message**: is the atomic communication between users.\n * **Norm**: is a rule that restricts or prescribes the behaviour of users.\n * **Profile**: is a fixed set of user attributes.\n * **Task**: is an individual goal to be achieved by a team.\n * **Team**: is a group of individuals set to fulfil a task.\n * **Trust**: is the confidence that another user achieve a task.\n\n\n## Community\n\nThe functionality provided allows to managing members, norms and task types associated with a community.\n\nAt the moment does not exist any restriction to create communities.\nEvery member of a community has the right to access to:\n\n * The name, description and avatar of the community.\n * The task types that can be done in the community.\n * The norm of the community.\n * The list of members of the community.\n * The list of task instances that it is involved.\n\nFor the rest of the actions it needs to have the privilege to perform the action. This privileges can be:\n\n * **MODIFY_NAME**: a user with this privilege can modify the name of the community.\n * **MODIFY_DESCRIPTION**: a user with this privilege can modify the description of the community.\n * **MODIFY_KEYWORDS**: a user with this privilege can modify the keywords of the community.\n * **MODIFY_AVATAR**: a user with this privilege can modify the avatar image of the community.\n * **ADD_NORM**: a user with this privilege can add a new norm into the community.\n * **REMOVE_NORM**: a user with this privilege can remove a norm form the community.\n * **ADD_MEMBER**: a user with this privilege can add a new user into the community.\n * **REMOVE_MEMBER**: a user with this privilege can remove a user from the community.\n * **MODIFY_MEMBER_PRIVILEGES**: a user with this privilege can modify the privileges of a community member.\n * **VIEW_MEMBER_PRIVILEGES**: a user with this privilege can view the privileges of a community member.\n * **ADD_TASK_TYPE**: a user with this privilege can add a new type of task that can be done in the community.\n * **REMOVE_TASK_TYPE**: a user with this privilege can remove a type of task that can be done in the community.\n * **ADD_TASK_INSTANCE**: a user with this privilege can start a new task to do in a community.\n\n\nOn the other hand, to join into a community you have to do the same action to add a member,\nand to leave a community the same action as remove a member.\n\n\n## Message\n\nThe functionality provided allows for sending messages.\n\nWhen a user sends a message through the API, the message is sent to the norm interpreter of the user.\nThis interpreter needs to first verify that the message does not violate any of the norms,\nthis includes the community norms, the task norms, the sender\u2019s individual norms, as well as the context-dependent\nnorms that are attached to this message. If the message violates any of those norms,\nan error message is sent back to the user. However, if the message obeys the norms, then the norm interpreter needs\nto decide what to do next, usually translated into sending messages to other peers. This decision follows from\nthe community, individual and context-dependent norms, and takes the user\u2019s profile (both public and private)\ninto account as needed. If the message is sent to the interpreter of another user. As in the previous case,\nthe norm interpreter of this new user needs to first verify that the message does not violate any of the community norms.\nThis re-checking upon receipt ensures that the sender\u2019s norm engine has not been manipulated to cheat.\nIf the message violates any of the community norms, then it may either be discarded, or if the community norms\nrequire sanctioning, then the appropriate sanctions should be executed. However, if the action obeys the community norms,\nthen the norm interpreter needs to decide what to do next, which is usually translated into sending messages\nto other peers and/or sending messages to its user. This decision takes into consideration the community norms,\nthe context-dependent norms that are attached to the message, the individual private norms of the human whose interpreter\nhas received this message, as well as their local profile (both private and public). This ensures that the interpreter\nabides with it is human\u2019s private norms without leaking any of their private norms and profile.\n\n\n## Norm\n\nThe functionality provided allows to publish norms, and manage the user and community norms.\n\nThere are norms on the individual (user level), the task level, and the community level.\nAn individual\u2019s norm might be \u201CSuppress incoming messages at night\u201D (and this will\nbe applied for the user who sets this norm only). A task norm might be \u201CDon\u2019t ask my ex\u201D\n(so that would be applied for a specific task only). A community norm might be\n\u201CIf you don\u2019t volunteer, you cannot ask for help\u201D and it would be enforced on everyone.\nGiven the above, this means that norms will be attached to users, tasks and communities.\n\n\n## Profile\n\nThe functionality provided allows accessing current and previous values of user attributes.\nIt also allows you to modify the current values.\n\nA profile is a set of attributes, and their current values represent the state of the user.\nThese attributes can be:\n\n * **name**: the name of the user.\n * **public_name**: the name that it wants to be identified by other users on WeNet. If it is not specified is used the name.\n * **email**: the email of the user.\n * **avatar**: the URL to an image that can be used as an avatar of the user.\n * **phone_number**: the phone number of the user, on the E.164 format (^\\+?[1-9]\\d{1,14}$).\n * **languages**: this is a set of languages that the user can understand.\n * **gender**: the gender of the user.\n * **geolocation**: the geographic coordinates where the user is.\n * **personality**: the personality of the user.\n * **intelligences**: the intelligences of the user.\n * **birth_date**: the ISO 8601 date of birth of the user.\n * **ethnic_group**: the ethnic group of the user in English.\n * **addresses**: a set of different address of the user.\n * **nationality**: the nationality of the user.\n * **occupation**: the main occupation of the user.\n * **locale**: the locale of the user.\n * **friends**: the list of friends of the user.\n * **norms**: describe the user's individual norms.\n * **communities**: provide the list of communities that the user participate.\n * **tasks**: provide the different states of the user\u2019s participation in different task teams.\n * **trust**: this attribute is used to known the trust respect others.\n * **competences**: the list of the competences of the user.\n\n\n### Language\n\nThe languages that a user can understand are defined by the **ISO 639-1** code of the language and\nthe linguistic ability level of the person. This level can be:\n\n * **A0**: Beginner/False beginner. The person only knows a few words of the language, if that.\n * **A1**: Elementary. The person can ask a few basic questions and ideas, but with a lot of mistakes.\n * **A2**: Pre-intermediate. Limited vocabulary, but with some help the person can participate in basic conversations.\n           It stills to make a lot of big mistakes.\n * **B1**: Pre-intermediate. Limited vocabulary, but with some help the person can participate in basic conversations.\n           It stills to make a lot of big mistakes.\n * **B2**: Intermediate. Now the person can converse in many situations, with less serious errors.\n * **C1**: Upper-intermediate. The person is comfortable in most situations, still some good mistakes.\n * **C2**: Proficient. The person is fluent, pretty much mother tongue. Extremely comfortable, it has complete control over the language.\n\n\n### Gender\n\nThe gender of a user can be:\n\n * **FEMALE_CIS**: A woman whose gender identity matches the sex that they were assigned at birth.\n * **MALE_CIS**: A man whose gender identity matches the sex that they were assigned at birth.\n * **FEMALE_TRANS**: A woman who is not identified with the gender that was assigned to him at birth and therefore lives in another gender identity.\n * **MALE_TRANS**: A man who is not identified with the gender that was assigned to him at birth and therefore lives in another gender identity.\n * **NO_BINARY**: A person who is not identified with either single binary genre established in a unique way.\n\n\n### Friends\n\nA user has a relationship with another if it is a friend. At the moment the possible status\nof this relationship can be:\n\n * **added**: when the other user is an active friend\n * **removed**: when the other user was a friend\n * **blocked**: when the other user cannot be a friend\n * **suggested**: when the other user maybe a friend\n * **ignored_suggestion**: when the other user is proposed to be blocked\n\n\n### Trust\n\nThe trust over another user is dynamically and will be updated every time they collaborate\nto achieve a task. Also, you can get or set the trust on another user, on a member of\na community, or on a member of a community to fulfil a task type.\n\n\n### Competences\n\nA competence is described with a **name** and a **level**. This last one can be:\n\n * **Novice**: Rule-based behaviour, strongly limited and inflexible.\n * **Experienced_beginner**: Incorporates aspects of the situation.\n * **Practitioner**: Acting consciously from long-term goals and plans.\n * **Knowledgeable_practitioner**: Sees the situation as a whole and acts from personal conviction.\n * **Expert**: Has an intuitive understanding of the situation and zooms in on the central aspects.\n\n\n## Task\n\nThe functionality provided allows to publish task types, create and manage task instances.\n\nThere are two concepts associated with the notion of a task: type and instance.\nA task type describes a generic goal and the norms that will regulate the interactions\nof the members of any team set to achieve any instance of the task's generic goal.\nAn instance of a task type has a specific goal, a team organized around that goal, and\npossibly a set of specific norms that extend the task type's generic norms.\n\n\n## Team\n\nThe functionality provided allows to automatically form teams that have diversity in gender,\npersonality and intelligence.\nAlso, we provide the functions to evaluate the personality and intelligences of users and\nthe result can be kept of the profile attributes.\n",
        "title": "WeNet - Interaction protocol engine APIs",
        "version": "0.5.0"
    },
    "tags": [
        {
            "name": "Communities",
            "description": "The functionality provided allows to manage members, norms and task types associated to a community."
        },
        {
            "name": "Messages",
            "description": "The functionality provided allows to send messages."
        },
        {
            "name": "Norms",
            "description": "The functionality provided allows to publish norms, and manage the user and community norms."
        },
        {
            "name": "Historic",
            "description": "The functionality provided allows to access to the values of the models in a previous dates."
        },
        {
            "name": "Friends",
            "description": "The functionality provided allows to manage the friends of the user."
        },
        {
            "name": "Trust",
            "description": "The functionality provided allows to manage the trust of an user respect others."
        },
        {
            "name": "Competences",
            "description": "The functionality provided allows to manage the competences of the user."
        },
        {
            "name": "Profiles",
            "description": "The functionality provided allows to access current and previous values of user attributes.  It also allows you to modify the current values."
        },
        {
            "name": "Status",
            "description": "Allow knowing the current API version."
        },
        {
            "name": "Tasks",
            "description": "The functionality provided allows to publish task types, create and manage task instances."
        },
        {
            "name": "Teams",
            "description": "The functionality provided allows to automatically form teams that have diversity in gender, personality and intelligence. Also we provide the functions to evaluate the personality and intelligences of users and the result can be kept of the profile attributes."
        }
    ]
}