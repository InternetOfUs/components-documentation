{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "wenet-interaction_protocol_engine-api",
    "description" : "WeNet - Interaction protocol engine APIs.",
    "contact" : {
      "name" : "UDT-IA, IIIA-CSIC",
      "url" : "http://www.iiia.csic.es/"
    },
    "version" : "0.3.0"
  },
  "tags" : [ {
    "name" : "Communities",
    "description" : "Search, create and modify a community. Also, allow joining or leave a community."
  }, {
    "name" : "Messages",
    "description" : "Allow interacting with other users following a protocol."
  }, {
    "name" : "Norms",
    "description" : "Allow describing an acceptable way of behaving by any user."
  }, {
    "name" : "Profiles",
    "description" : "Allow managing the user profile. Also, you can access the history of values of any profile attribute.."
  }, {
    "name" : "Status",
    "description" : "Allow knowing the current API version."
  }, {
    "name" : "Teams",
    "description" : "Allow calculating the personality and intelligence of a person. Also, you can form balanced and efficient teams to do a task."
  } ],
  "paths" : {
    "/communities" : {
      "get" : {
        "tags" : [ "Communities" ],
        "summary" : "Return the communities that an used can join",
        "description" : "Allow to search for communities that an user can join",
        "operationId" : "getCommunities",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The pattern to match the name of communities to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "The pattern to match the description of communities to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "The pattern to match the keywords of communities to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "The identifier of the user to get the communities",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The index of the first community to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number maximum of communities to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The communities that match the patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/communities_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/communities_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the communities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the communities"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the communities"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to get the communities of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the communities",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_forbidden",
                      "message" : "You can not get the communities of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the communities",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_forbidden",
                      "message" : "You can not get the communities of another user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Communities" ],
        "summary" : "Register a community",
        "description" : "Add a community to the possible communities that the user can play",
        "operationId" : "registerCommunity",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/community"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The registered community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to register the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to register a community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to register a community"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The community to register is wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad community values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_community",
                      "message" : "A community needs a name"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad community values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_community",
                      "message" : "A community needs a name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/{community_id}" : {
      "get" : {
        "tags" : [ "Communities" ],
        "summary" : "Return a community associated to the identifier",
        "description" : "Allow to get a community associated to an identifier",
        "operationId" : "getCommunity",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The community associated to the identifier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the community"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to get the community that you do not play",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community information if you are not playing on it"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community information if you are not playing on it"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Communities" ],
        "summary" : "Update the values of a community",
        "description" : "Allow to update a community associated",
        "operationId" : "updateCommunity",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/community"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The updated community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to update the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to update the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to update the community"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to update the community that you do not play",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to update the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not update the community information if you are not playing on it"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to update the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not update the community information if you are not playing on it"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The community to register is wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad community values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_community",
                      "message" : "A community needs a name"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad community values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_community",
                      "message" : "A community needs a name"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Communities" ],
        "summary" : "Delete a community",
        "description" : "Allow to delete a community",
        "operationId" : "deleteCommunity",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to delete the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to delete the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to delete the community"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to delete the community that you do not are the owner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to delete the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not delete the community if you are not the owner"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to delete the community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not delete the community if you are not the owner"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/{community_id}/norms" : {
      "get" : {
        "tags" : [ "Communities", "Norms" ],
        "summary" : "Get some community norms",
        "description" : "Allow to obtain the norms associated to a community",
        "operationId" : "getCommunityNorms",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to get the norms",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first community norm to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number maximum of community norm  to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The found norms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norms_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norms_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the norms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to the community norms"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to the community norms"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the community norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the community norms if you no play on it",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community norms if you not play on it"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the community norms if you no play on it",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community norms if you not play on it"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Communities", "Norms" ],
        "summary" : "Add a norm into a community",
        "description" : "Add a norm to be applied in a community",
        "operationId" : "addCommunityNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to add the norm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The norm to add",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/norm"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The added norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norm"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to add a norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the community norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a norm into a community of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not add a norm to another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a norm into a community of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not add a norm to another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/{community_id}/norms/{norm_id}" : {
      "delete" : {
        "tags" : [ "Communities", "Norms" ],
        "summary" : "Remove a community norm",
        "description" : "Remove a norm from a community",
        "operationId" : "removeCommunityNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to remove the norm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "norm_id",
          "in" : "path",
          "description" : "The identifier of the norm to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The removed norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_norm"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to remove a norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the community norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not remove a norm if you are not the manager"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not remove a norm if you are not the manager"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community or norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/{community_id}/members" : {
      "get" : {
        "tags" : [ "Communities" ],
        "summary" : "Get the users in a community",
        "description" : "Allow to get the users that plays in a community",
        "operationId" : "getCommunityMembers",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to get the users",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first community user to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number maximum of community user to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The community users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_members_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_members_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the community users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to get the community users"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to get the community users"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the community users if you not play on it",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community  users if you no play on it"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a community",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You can not get the community  users if you no play on it"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Communities" ],
        "summary" : "Add an user into a community ",
        "description" : "Join or add an user into a community.",
        "operationId" : "addCommunityMember",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to add the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "User to add into the community",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/community_member"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The added community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the community users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to add the community users"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to add the community users"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You does not have the privileges to add the user in the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to add an user into the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to add an user into the community"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/{community_id}/members/{user_id}" : {
      "put" : {
        "tags" : [ "Communities" ],
        "summary" : "Modify an user from a community ",
        "description" : "Modify the attributes of a community user.",
        "operationId" : "modifyCommunityMember",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to modify the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "The identifier of the user to modify",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "New values for the community user",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/community_member"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The modified community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the community users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community users"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community users"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You does not have the privileges to modify the user in the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to modify community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to modify an user into the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to modify community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to modify an user into the community"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Communities" ],
        "summary" : "Remove an user from a community ",
        "description" : "You can use this method to leave or remove an user from a community.",
        "operationId" : "removeCommunityMember",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "community_id",
          "in" : "path",
          "description" : "The identifier of the community to remove an user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "The identifier of the user to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The modified community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/community_member"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad community user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The community user is bad",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_bad_user",
                      "message" : "You must to specify the user identifier"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the community users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community users"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the community users",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "communities_unauthorized",
                      "message" : "You have to log in to access to modify the community users"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You does not have the privileges to modify the user in the community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to modify community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to modify an user into the community"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to modify community user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_forbidden",
                      "message" : "You does not have the necessary privilege to modify an user into the community"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found community",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "community_not_found",
                      "message" : "Not found a community associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages" : {
      "post" : {
        "tags" : [ "Messages" ],
        "summary" : "Send a message",
        "description" : "Allow to send a message",
        "operationId" : "sendMessage",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/message"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The sent message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to send a message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to send a message"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to send a message"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The message to send is wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad message values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_message",
                      "message" : "A message needs a content"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad message values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_message",
                      "message" : "A message needs a content"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/norms" : {
      "get" : {
        "tags" : [ "Norms" ],
        "summary" : "Search for a published norms",
        "description" : "Get some published norms that satisfy some field attributes",
        "operationId" : "searchPublishedNorms",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The pattern to match the name of norms to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "The pattern to match the description of norms to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "The pattern to match the keywords of norms to return",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The index of the first norm to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number maximum of norms to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The norms that match the patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norms_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norms_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the norms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the norms"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "interaction_unauthorized",
                      "message" : "You are not authorized to get the norms"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to get the norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_forbidden",
                      "message" : "You can not get the norms of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_forbidden",
                      "message" : "You can not get the norms of another user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Norms" ],
        "summary" : "Publish a norm",
        "description" : "Publish a norm to be accessible by the other users on WeNet",
        "operationId" : "publishNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "description" : "The norm to publish",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/published_norm"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The published norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norm"
                }
              }
            }
          },
          "400" : {
            "description" : "The norm to publish is wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad norm values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_norm",
                      "message" : "A norm needs a name"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Bad norm values",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "bad_norm",
                      "message" : "A norm needs a name"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to publish the norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_unauthorized",
                      "message" : "You are not authorized to publish a norm"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_unauthorized",
                      "message" : "You are not authorized to publish a norm"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/norms/{norm_id}" : {
      "delete" : {
        "tags" : [ "Norms" ],
        "summary" : "Delete a published norm",
        "description" : "Allow to delete a published norm",
        "operationId" : "deleteNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "norm_id",
          "in" : "path",
          "description" : "The identifier of the norm to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted published norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/published_norm"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to delete the published norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_unauthorized",
                      "message" : "You are not authorized to delete the norm"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norms_unauthorized",
                      "message" : "You are not authorized to delete the norm"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to delete the norm that you do not are the owner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to delete the norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norm_forbidden",
                      "message" : "You can not delete the norm if you are not the owner"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to delete the norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norm_forbidden",
                      "message" : "You can not delete the norm if you are not the owner"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norm_not_found",
                      "message" : "Not found a norm associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "norm_not_found",
                      "message" : "Not found a norm associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}/attributes" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Get some profile attributes ",
        "description" : "Allow to obtain the profile attribute values in a period of time",
        "operationId" : "getAttributes",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_name",
          "in" : "query",
          "description" : "Pattern that has to match the attributes to return",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "the date inclusive that mark the older limit in witch the attribute has to be active. It is formatter in ISO 8601.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "the date inclusive that mark the newest limit in witch the attribute has to be active. It is formatter in ISO 8601.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first profile attribute to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number maximum of profile attributes to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The found attributes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_attributes_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_attributes_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the profile attributes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the profile attributes",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to profile attributes"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the profile attributes",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to profile attributes"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile attributes of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile attributes of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile attributes of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile attributes of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile attributes of another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Return a profile associated to the identifier",
        "description" : "Allow to get a profile associated to an identifier",
        "operationId" : "getProfile",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The profile associated to the identifier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You are not authorized to get the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You are not authorized to get the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to get the profile that you do not play",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the profile",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile information if you are not playing on it"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the profile",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile information if you are not playing on it"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profiles" ],
        "summary" : "Modify a profile",
        "description" : "Change the attributes of a profile",
        "operationId" : "updateProfile",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new values for the profile",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/profile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The profile associated to the identifier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The profile is not right",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "The phone is not in E.164 format"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "The profile is not right",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "The phone is not in E.164 format"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to modify the profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You are not authorized to modify the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You are not authorized to modify the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized to get the profile that you do not play",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to modify the profile",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not modify the profile of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to modify the profile",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not modify the profile of another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}/friends" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Get some friends",
        "description" : "Allow to obtain the friends associated to a profile",
        "operationId" : "getFriends",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute_name",
          "in" : "query",
          "description" : "Pattern that has to match the name of the friend to return",
          "schema" : {
            "type" : "string",
            "default" : "*"
          }
        }, {
          "name" : "min_trust",
          "in" : "query",
          "description" : "The least trust, inclusive, that friends must have to return",
          "schema" : {
            "type" : "string",
            "default" : "0"
          }
        }, {
          "name" : "max_trust",
          "in" : "query",
          "description" : "The maximum trust, inclusive, that must have friends to return",
          "schema" : {
            "type" : "string",
            "default" : "1"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first profile attribute to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number maximum of profile attributes to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The found friends",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friends_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friends_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the friends",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the friends",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to the profile friends"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the friends",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to the profile friends"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile friends of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile friends of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile friends of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile friends of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile friends of another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Profiles" ],
        "summary" : "Add a friend",
        "description" : "Add a friend to an user profile",
        "operationId" : "addFriend",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to add the friend",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The friend to add",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/friend"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The added friend",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friend"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friend"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to add a friend",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a friend",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a friend",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile friends of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a friend into a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not add a friend to another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a friend into a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not add a friend to another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}/friends/{friend_id}" : {
      "delete" : {
        "tags" : [ "Profiles" ],
        "summary" : "Remove a friend",
        "description" : "Remove a friend from an user profile",
        "operationId" : "removeFriend",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to remove the friend",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "friend_id",
          "in" : "path",
          "description" : "The identifier of the friend to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The removed friend",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friend"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/friend"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to remove a friend",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a friend",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a friend",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile friends of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a friend from a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not remove a friend from another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a friend from a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not remove a friend from another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile or friend",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}/norms" : {
      "get" : {
        "tags" : [ "Profiles", "Norms" ],
        "summary" : "Get some norms",
        "description" : "Allow to obtain the norms associated to a profile",
        "operationId" : "getNorms",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to get the norms",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first profile norm to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number maximum of profile norms to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The found norms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norms_page"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norms_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to get the norms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to the profile norms"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to get the norms",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to the profile norms"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile norms of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile norms of another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to get the profile norms of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not get the profile norms of another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Profiles", "Norms" ],
        "summary" : "Add a norm",
        "description" : "Add a norm to an user profile",
        "operationId" : "addNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to add the norm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The norm to add",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/norm"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The added norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norm"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to add a norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to add a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a norm into a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not add a norm to another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to add a norm into a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not add a norm to another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{profile_id}/norms/{norm_id}" : {
      "delete" : {
        "tags" : [ "Profiles", "Norms" ],
        "summary" : "Remove a norm",
        "description" : "Remove a norm from an user profile",
        "operationId" : "removeNorm",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "profile_id",
          "in" : "path",
          "description" : "The identifier of the profile to remove the norm",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "norm_id",
          "in" : "path",
          "description" : "The identifier of the norm to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The removed norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norm"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile_norm"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to remove a norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized to remove a norm",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profiles_unauthorized",
                      "message" : "You have to log in to access to modify the profile"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "You can not get the profile norms of another user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not remove a norm from another user"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Forbidden to remove a norm from a profile of another user",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_forbidden",
                      "message" : "You can not remove a norm from another user"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found profile or norm",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "No found response example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "profile_not_found",
                      "message" : "Not found a profile associated to the identifier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status" : {
      "get" : {
        "tags" : [ "Status" ],
        "summary" : "Get the status of the API",
        "description" : "Return the current status information of the API",
        "operationId" : "getStatusReport",
        "responses" : {
          "200" : {
            "description" : "The API status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/status"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/status"
                }
              }
            }
          }
        }
      }
    },
    "/teams/composite" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Calculate the number of teams and each sizer that the composite can create",
        "description" : "Obtain how many teams and their size that will be created",
        "operationId" : "getTeamsDistribution",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "number_of_people",
          "in" : "query",
          "description" : "The number of people that has to be distributed on different teams",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 4
          },
          "example" : 10
        }, {
          "name" : "people_per_team",
          "in" : "query",
          "description" : "The number of people that have to be on each team",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2
          },
          "example" : 2
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized to get the teams sizes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_composite_unauthorized",
                      "message" : "You are not authorized to get the teams sizes"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_composite_unauthorized",
                      "message" : "You are not authorized to get the teams sizes"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The size of the possible teams",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/teams_distribution"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/teams_distribution"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Teams" ],
        "summary" : "Create teams",
        "description" : "It distributes a group of people in different teams taking into account their personality and intelligences",
        "operationId" : "composite",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "description" : "The information necessary to create the teams",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/composite"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/composite"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized to create teams",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_composite_unauthorized",
                      "message" : "You are not authorized to create teams"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_composite_unauthorized",
                      "message" : "You are not authorized to create teams"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The created teams",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/composed_teams"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/composed_teams"
                }
              }
            }
          }
        }
      }
    },
    "/teams/intelligences" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Obtain the intelligences test",
        "description" : "Return the questionnaire used to obtain the intelligences of a person",
        "operationId" : "getIntelligencesQuestionnaire",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The preferred language for the text on the questionnaire. If it is not available the texts will be on English.",
          "schema" : {
            "type" : "string",
            "default" : "en"
          },
          "example" : "en"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized to get the intelligences questionnaire",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_intelligences_unauthorized",
                      "message" : "You are not authorized to get the intelligences questionnaire"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_intelligences_unauthorized",
                      "message" : "You are not authorized to get the intelligences questionnaire"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The questionnaire to evaluate the intelligences of a person",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/questionnaire"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/questionnaire"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Teams" ],
        "summary" : "Calculate the intelligences of a person",
        "description" : "Evaluate the answers to the intelligences test to obtain the intelligences of the person",
        "operationId" : "calculateIntelligences",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/questionnaire_answers"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/questionnaire_answers"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized to evaluate the intelligences questionnaire",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_intelligences_unauthorized",
                      "message" : "You are not authorized to evaluate the intelligences questionnaire"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_intelligences_unauthorized",
                      "message" : "You are not authorized to evaluate the intelligences questionnaire"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The intelligences of the person",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/intelligences"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/intelligences"
                }
              }
            }
          }
        }
      }
    },
    "/teams/personality" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Obtain the personality test",
        "description" : "Return the questionnaire used to obtain the personality of a person",
        "operationId" : "getPersonalityQuestionnaire",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The preferred language for the text on the questionnaire. If it is not available the texts will be on English.",
          "schema" : {
            "type" : "string",
            "default" : "en"
          },
          "example" : "en"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized to get the personality questionnaire",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_personality_unauthorized",
                      "message" : "You are not authorized to get the personality questionnaire"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_personality_unauthorized",
                      "message" : "You are not authorized to get the personality questionnaire"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The questionnaire to evaluate the personality of a person",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/questionnaire"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/questionnaire"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Teams" ],
        "summary" : "Calculate the personality of a person",
        "description" : "Evaluate the answers to the personality test to obtain the personality of the person",
        "operationId" : "calculatePersonality",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Provide the authorization code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "WeNet 89673098lkjbfjihg8103760"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/questionnaire_answers"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/questionnaire_answers"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized to evaluate the personality questionnaire",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_personality_unauthorized",
                      "message" : "You are not authorized to evaluate the personality questionnaire"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error_message"
                },
                "examples" : {
                  "Default Response" : {
                    "summary" : "Unauthorized Response Example",
                    "description" : "Default Response",
                    "value" : {
                      "code" : "teams_personality_unauthorized",
                      "message" : "You are not authorized to evaluate the personality questionnaire"
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The personality of the person",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/personality"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/personality"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "communities_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first community returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of communities that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "communities" : {
            "type" : "array",
            "description" : "The set of communities found",
            "items" : {
              "$ref" : "#/components/schemas/community"
            }
          }
        },
        "description" : "Contains a set of communities found",
        "xml" : {
          "name" : "communities_page"
        }
      },
      "community" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the community.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the community.",
            "example" : "WeNet"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the community.",
            "example" : "A community of users that provide or require help"
          },
          "keywords" : {
            "type" : "array",
            "description" : "The keywords of the community",
            "example" : [ "social interaction", "ethics", "diversity" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This component describes a community of users.",
        "xml" : {
          "name" : "community"
        }
      },
      "error_message" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Contain code that identifies the error",
            "example" : "error_code"
          },
          "message" : {
            "type" : "string",
            "description" : "Contain a brief description of the error to be read by a human",
            "example" : "Error readable by a human"
          }
        },
        "description" : "Inform of an error that happens when interacts with the API",
        "xml" : {
          "name" : "error_message"
        }
      },
      "community_norm" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the community norm.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "since_time" : {
            "type" : "string",
            "description" : "The time in ISO 8601 format since the norm is applied in the community.",
            "example" : "2019-06-21T07:32:22Z"
          },
          "norm" : {
            "$ref" : "#/components/schemas/norm"
          }
        },
        "description" : "A norm that is applied in a community",
        "xml" : {
          "name" : "community_norm"
        }
      },
      "community_norms_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first community norm returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of community norms that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "norms" : {
            "type" : "array",
            "description" : "The set of community norms found",
            "items" : {
              "$ref" : "#/components/schemas/community_norm"
            }
          }
        },
        "description" : "Contains a set of community norms found",
        "xml" : {
          "name" : "community_norms_page"
        }
      },
      "norm" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code of the norm."
          }
        },
        "description" : "This component describes an acceptable way of behaving by any user.",
        "xml" : {
          "name" : "norm"
        }
      },
      "community_member" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "The identifier of the user.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "join_time" : {
            "type" : "string",
            "description" : "The time in ISO 8601 format when the user has joined in the community.",
            "example" : "2019-06-21T07:32:22Z"
          },
          "privileges" : {
            "type" : "array",
            "description" : "The privileges of the user on the community",
            "items" : {
              "type" : "string",
              "enum" : [ "MODIFY_NAME", "MODIFY_DESCRIPTION", "MODIFY_KEYWORDS", "ADD_NORM", "REMOVE_NORM", "ADD_USER", "REMOVE_USER" ]
            }
          }
        },
        "description" : "The information of an member that plays in a community.",
        "xml" : {
          "name" : "community_member"
        }
      },
      "community_members_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first community member returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of community members that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "members" : {
            "type" : "array",
            "description" : "The set of community members found",
            "items" : {
              "$ref" : "#/components/schemas/community_member"
            }
          }
        },
        "description" : "Contains a set of community members found",
        "xml" : {
          "name" : "community_members_page"
        }
      },
      "message" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "description" : "The content of the message.",
            "items" : {
              "$ref" : "#/components/schemas/message_attribute"
            }
          },
          "norms" : {
            "type" : "array",
            "description" : "The norms associated to the message.",
            "items" : {
              "$ref" : "#/components/schemas/norm"
            }
          }
        },
        "description" : "This component describes an action that an user wants to do.",
        "xml" : {
          "name" : "message"
        }
      },
      "message_attribute" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the attribute.",
            "example" : "community_id"
          },
          "value" : {
            "type" : "object",
            "description" : "The value of the attribute.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          }
        },
        "description" : "This component describes an attribute on the message content.",
        "xml" : {
          "name" : "message_attribute"
        }
      },
      "published_norm" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the norm.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the norm.",
            "example" : "WeNet"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the norm.",
            "example" : "A norm of users that provide or require help"
          },
          "keywords" : {
            "type" : "array",
            "description" : "The keywords of the norm",
            "example" : [ "social interaction", "ethics", "diversity" ],
            "items" : {
              "type" : "string"
            }
          },
          "norm" : {
            "$ref" : "#/components/schemas/norm"
          }
        },
        "description" : "A norm that is published to share with all the WeNet users.",
        "xml" : {
          "name" : "published_norm"
        }
      },
      "published_norms_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first published norm returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of published norms that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "norms" : {
            "type" : "array",
            "description" : "The set of published norms found",
            "items" : {
              "$ref" : "#/components/schemas/published_norm"
            }
          }
        },
        "description" : "Contains a set of published norms found",
        "xml" : {
          "name" : "published_norms_page"
        }
      },
      "profile_attribute" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the attribute",
            "example" : "name",
            "enum" : [ "name", "public_name", "email", "phone", "languages", "gender", "geolocation", "personality", "intelligences", "birth_date", "ethnic_group", "addresses", "friends", "norms" ]
          },
          "from" : {
            "type" : "string",
            "description" : "The time when the variable is set in ISO 8601 format.",
            "example" : "2018-06-21T07:32:22Z"
          },
          "to" : {
            "type" : "string",
            "description" : "The time when the variable is modified to a new value in ISO 8601 format.",
            "example" : "2018-07-21T07:32:22Z"
          },
          "value" : {
            "type" : "object",
            "description" : "The value of the attribute",
            "example" : "Dr. John Smith Jr."
          }
        },
        "description" : "Contains the value of a profile attribute.",
        "xml" : {
          "name" : "profile_attribute"
        }
      },
      "profile_attributes_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first profile attribute returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of profile attributes that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "attributes" : {
            "type" : "array",
            "description" : "The set of profile attributes found",
            "items" : {
              "$ref" : "#/components/schemas/profile_attribute"
            }
          }
        },
        "description" : "Contains a set of profile attributes found",
        "xml" : {
          "name" : "profile_attributes_page"
        }
      },
      "address" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The index of the first profile attribute returned.",
            "example" : "home"
          },
          "street" : {
            "type" : "string",
            "description" : "The street name.",
            "example" : "Ueberlandstrasse"
          },
          "number" : {
            "type" : "integer",
            "description" : "The number on the street",
            "format" : "int32",
            "example" : 111
          },
          "extra" : {
            "type" : "string",
            "description" : "Extra information to define the postal address as house, floor or door",
            "example" : "2nd Floor"
          },
          "city" : {
            "type" : "string",
            "description" : "The name of the primary locality of the place.",
            "example" : "Duebendorf"
          },
          "postal_code" : {
            "type" : "string",
            "description" : "An alphanumeric string included in a postal address to facilitate mail sorting (a.k.a. post code, postcode, or ZIP code)",
            "example" : "08080"
          },
          "state" : {
            "type" : "string",
            "description" : "A division of a country; typically a first-level administrative division of a country and/or a geographical region.",
            "example" : "Zurich"
          },
          "country_code" : {
            "type" : "string",
            "description" : "The ISO 3166-1 alpha-3 code of the country",
            "example" : "CHE"
          }
        },
        "description" : "Contains an address of the user",
        "xml" : {
          "name" : "address"
        }
      },
      "geolocation" : {
        "type" : "object",
        "description" : "The geographic coordinates of a location.",
        "xml" : {
          "name" : "geolocation"
        }
      },
      "intelligences" : {
        "type" : "object",
        "properties" : {
          "verbal" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The verbal intelligence",
            "format" : "double",
            "example" : 0.1
          },
          "logic_mathematics" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The logic-mathematics intelligence",
            "format" : "double",
            "example" : 0.2
          },
          "visual_spatial" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The visual-spatial intelligence",
            "format" : "double",
            "example" : 0.3
          },
          "kinestesica_corporal" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The kinestesica-corporal intelligence",
            "format" : "double",
            "example" : 0.4
          },
          "musical_rhythmic" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The musical-rhythmic intelligence",
            "format" : "double",
            "example" : 0.5
          },
          "intrapersonal" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The intrapersonal intelligence",
            "format" : "double",
            "example" : 0.6
          },
          "interpersonal" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The interpersonal intelligence",
            "format" : "double",
            "example" : 0.7
          },
          "naturalist_environmental" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The naturalist-environmental intelligence",
            "format" : "double",
            "example" : 0.8
          }
        },
        "description" : "Provide information about the intelligences of a person",
        "xml" : {
          "name" : "intelligences"
        }
      },
      "language" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The ISO 639-1 code that identify the language",
            "example" : "en"
          },
          "level" : {
            "type" : "string",
            "description" : "The linguistic ability level of the person.",
            "example" : "B2",
            "enum" : [ "C2", "C1", "B2", "B1", "A2", "A1", "A0" ]
          }
        },
        "description" : "The language that an user can understand.",
        "xml" : {
          "name" : "language"
        }
      },
      "personality" : {
        "type" : "object",
        "properties" : {
          "perception" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The perception grade of a person",
            "format" : "double",
            "example" : 0.1
          },
          "judgment" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The judgment grade of a person",
            "format" : "double",
            "example" : 0.2
          },
          "extrovert" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The extrovert grade of a person",
            "format" : "double",
            "example" : 0.3
          },
          "attitude" : {
            "maximum" : 1.0,
            "minimum" : 0.0,
            "type" : "number",
            "description" : "The attitude grade of a person",
            "format" : "double",
            "example" : 0.4
          }
        },
        "description" : "Provide information about the personality of a person",
        "xml" : {
          "name" : "personality"
        }
      },
      "profile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the profile.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "name" : {
            "type" : "string",
            "description" : "The real name of the user",
            "example" : "Dr. John Doe Jr."
          },
          "public_name" : {
            "type" : "string",
            "description" : "The email of the user",
            "example" : "Jonny D."
          },
          "email" : {
            "type" : "string",
            "description" : "The email of the user",
            "example" : "jonnyd@internetofus.eu"
          },
          "phone" : {
            "type" : "string",
            "description" : "The phone number of the user, on the E.164 format (^\\+?[1-9]\\d{1,14}$)",
            "example" : "+34987654321"
          },
          "languages" : {
            "type" : "array",
            "description" : "The languages that the user can understand",
            "items" : {
              "$ref" : "#/components/schemas/language"
            }
          },
          "gender" : {
            "type" : "string",
            "description" : "The possible gender of a person.",
            "enum" : [ "FEMALE_CIS", "MALE_CIS", "FEMALE_TRANS", "MALE_TRANS", "NO_BINARY" ]
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/geolocation"
          },
          "personality" : {
            "$ref" : "#/components/schemas/personality"
          },
          "intelligences" : {
            "$ref" : "#/components/schemas/intelligences"
          },
          "birth_date" : {
            "type" : "string",
            "description" : "The ISO 8601 date of birth of the user",
            "example" : "2019-06-28"
          },
          "ethnic_group" : {
            "type" : "string",
            "description" : "The ethnic group of the user in English",
            "example" : "Eskimo"
          },
          "addresses" : {
            "type" : "array",
            "description" : "The different address of the user",
            "items" : {
              "$ref" : "#/components/schemas/address"
            }
          },
          "total_friends" : {
            "type" : "integer",
            "description" : "The number total of friends of the user",
            "format" : "int32",
            "example" : 123
          }
        },
        "description" : "This component describes a profile of users.",
        "xml" : {
          "name" : "profile"
        }
      },
      "friend" : {
        "type" : "object",
        "properties" : {
          "friend_id" : {
            "type" : "string",
            "description" : "The identifier of the friend.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "name" : {
            "type" : "string",
            "description" : "The friend name.",
            "example" : "Johnydo"
          },
          "trust" : {
            "type" : "number",
            "description" : "The trust on the friend. A value on the range [0,1].",
            "format" : "double",
            "example" : 0.5
          }
        },
        "description" : "The information of a friend.",
        "xml" : {
          "name" : "friend"
        }
      },
      "friends_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first friend returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of friends that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "friends" : {
            "type" : "array",
            "description" : "The set of friends found",
            "items" : {
              "$ref" : "#/components/schemas/friend"
            }
          }
        },
        "description" : "Contains a set of friends found",
        "xml" : {
          "name" : "friends_page"
        }
      },
      "profile_norm" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the profile norm.",
            "example" : "bf274393-1e7b-4d40-a897-88cb96277edd"
          },
          "since_time" : {
            "type" : "string",
            "description" : "The time in ISO 8601 format since the norm is applied in the profile.",
            "example" : "2019-06-21T07:32:22Z"
          },
          "norm" : {
            "$ref" : "#/components/schemas/norm"
          }
        },
        "description" : "A norm that is applied in a profile",
        "xml" : {
          "name" : "profile_norm"
        }
      },
      "profile_norms_page" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "The index of the first profile norm returned.",
            "format" : "int32",
            "example" : 0
          },
          "total" : {
            "type" : "integer",
            "description" : "The number total of profile norms that satisfies the search.",
            "format" : "int64",
            "example" : 100
          },
          "norms" : {
            "type" : "array",
            "description" : "The set of profile norms found",
            "items" : {
              "$ref" : "#/components/schemas/profile_norm"
            }
          }
        },
        "description" : "Contains a set of profile norms found",
        "xml" : {
          "name" : "profile_norms_page"
        }
      },
      "status" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Contain the version of the API",
            "example" : "1.0.0"
          },
          "vendor" : {
            "type" : "string",
            "description" : "Contain information of the organization that has implemented the API",
            "example" : "UDT-IA, IIIA-CSIC"
          }
        },
        "description" : "Provide information about the current status of the API",
        "xml" : {
          "name" : "status"
        }
      },
      "composed_teams" : {
        "type" : "object",
        "properties" : {
          "optimal" : {
            "type" : "boolean",
            "description" : "If this is 'true' the created teams are the best possible",
            "example" : true
          },
          "teams" : {
            "type" : "array",
            "description" : "The teams that have been created",
            "items" : {
              "$ref" : "#/components/schemas/team"
            }
          }
        },
        "description" : "The information of the composed teams",
        "xml" : {
          "name" : "composed_teams"
        }
      },
      "team" : {
        "type" : "object",
        "properties" : {
          "peopleIds" : {
            "type" : "array",
            "description" : "The identifiers of the people that form the team",
            "example" : [ "550e8400-e29b-41d4-a716-446655440000", "1db14dd1-ed9a-463d-a518-54c7c38dcec9" ],
            "xml" : {
              "name" : "people_ids"
            },
            "items" : {
              "type" : "string"
            }
          },
          "verbal_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the verbal intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "logic_mathematics_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the logic-mathematics intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "visual_spatial_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the visual-spatial intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "kinestesica_corporal_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the kinestesica-corporal intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "musical_rhythmic_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the musical-rhythmic intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "intrapersonal_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the intrapersonal intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "interpersonal_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the interpersonal intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "naturalist_environmental_leader_id" : {
            "type" : "string",
            "description" : "The identifier of the person on the team that is the leader of the naturalist-environmental intelligence",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "description" : "A set of people aggregated to do something",
        "xml" : {
          "name" : "team"
        }
      },
      "composite" : {
        "type" : "object",
        "properties" : {
          "people_per_team" : {
            "minimum" : 2,
            "type" : "integer",
            "description" : "The size of the teams to create",
            "format" : "int32",
            "example" : 2
          },
          "at_most" : {
            "type" : "boolean",
            "description" : "If this is 'true' the size of the teams cannot be more than the specified on 'people_per_team'",
            "example" : true
          },
          "performance" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "number",
            "description" : "This value allows defining the balancing of the teams. When it is near 0.5 create similar teams, when it is near to 0 the worst are the leaders and when it is near to 1 the bests are the leaders.",
            "format" : "double",
            "example" : 0.5
          },
          "time" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The maximum seconds that it has to calculate the best combination. When it is reached return the best team composition that it has found.",
            "format" : "int32",
            "example" : 30
          },
          "people" : {
            "minItems" : 4,
            "type" : "array",
            "description" : "Contain the people that have to be distributed on different teams",
            "items" : {
              "$ref" : "#/components/schemas/person"
            }
          },
          "requirements" : {
            "$ref" : "#/components/schemas/requirements"
          }
        },
        "description" : "Provide information about how the teams have to be created",
        "xml" : {
          "name" : "composite"
        }
      },
      "person" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Contain the identifier of the person",
            "example" : "550e8400-e29b-41d4-a716-446655440000"
          },
          "personality" : {
            "$ref" : "#/components/schemas/personality"
          },
          "intelligences" : {
            "$ref" : "#/components/schemas/intelligences"
          }
        },
        "description" : "Provide information about a person",
        "xml" : {
          "name" : "person"
        }
      },
      "requirement" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "number",
            "description" : "The level of the intelligence that the team has to reach",
            "format" : "double",
            "example" : 0.5
          },
          "importance" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The importance of the intelligence on the team",
            "format" : "int32",
            "example" : 1
          }
        },
        "description" : "Describe the required values for intelligence on the team that will be created",
        "xml" : {
          "name" : "requirement"
        }
      },
      "requirements" : {
        "type" : "object",
        "properties" : {
          "verbal" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "logic_mathematics" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "visual_spatial" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "kinestesica_corporal" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "musical_rhythmic" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "intrapersonal" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "interpersonal" : {
            "$ref" : "#/components/schemas/requirement"
          },
          "naturalist_environmental" : {
            "$ref" : "#/components/schemas/requirement"
          }
        },
        "description" : "Describe the requirements of the teams that will be created",
        "xml" : {
          "name" : "requirements"
        }
      },
      "team_distribution" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of teams of the specified size",
            "format" : "int32",
            "example" : 2
          },
          "size" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The size of each team",
            "format" : "int32",
            "example" : 2
          }
        },
        "description" : "Provide information about the distribution of the number of teams of a specific size",
        "xml" : {
          "name" : "team_distribution"
        }
      },
      "teams_distribution" : {
        "required" : [ "number_of_people", "people_per_team" ],
        "type" : "object",
        "properties" : {
          "number_of_people" : {
            "type" : "integer",
            "description" : "The number of people that have distributed on the teams",
            "format" : "int32",
            "example" : 10
          },
          "people_per_team" : {
            "type" : "integer",
            "description" : "The expected number of people on each team",
            "format" : "int32",
            "example" : 2
          },
          "basic" : {
            "maxItems" : 2,
            "type" : "array",
            "description" : "Contain the distribution of the people on teams when the size is a minimum",
            "items" : {
              "$ref" : "#/components/schemas/team_distribution"
            }
          },
          "atMost" : {
            "maxItems" : 2,
            "type" : "array",
            "description" : "Contain the distribution of the people on teams when the size is a maximum",
            "xml" : {
              "name" : "at_most"
            },
            "items" : {
              "$ref" : "#/components/schemas/team_distribution"
            }
          }
        },
        "description" : "Describe how a set of people will be distributed on a set of teams",
        "xml" : {
          "name" : "teams_distribution"
        }
      },
      "answer" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "The text of the answer",
            "example" : "Compassionate"
          },
          "value" : {
            "type" : "number",
            "description" : "The value associated with the answer",
            "format" : "double",
            "example" : -1
          }
        },
        "description" : "Provide a possible answer for a question",
        "xml" : {
          "name" : "answer"
        }
      },
      "question" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "The text of the question",
            "example" : "The judges must be"
          },
          "help" : {
            "type" : "string",
            "description" : "A message to help to answer the question",
            "example" : "Example: If a judge judges your brother, you must follow the laws that apply to everyone equally."
          },
          "answers" : {
            "type" : "array",
            "description" : "The possible answers for the question",
            "items" : {
              "$ref" : "#/components/schemas/answer"
            }
          }
        },
        "description" : "A question used to extract information of a person",
        "xml" : {
          "name" : "question"
        }
      },
      "questionnaire" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "A name that identifies the questionnaire for a human",
            "example" : "Personality test"
          },
          "description" : {
            "type" : "string",
            "description" : "Explains what attribute of a person it evaluates",
            "example" : "With this questionnaire is possible to obtain the personality of a person."
          },
          "questions" : {
            "type" : "array",
            "description" : "The set of questions used to evaluate the person.",
            "items" : {
              "$ref" : "#/components/schemas/question"
            }
          }
        },
        "description" : "A questionnaire used to evaluate a person attribute",
        "xml" : {
          "name" : "questionnaire"
        }
      },
      "questionnaire_answers" : {
        "type" : "object",
        "properties" : {
          "answerValues" : {
            "type" : "array",
            "description" : "The selected values for the questions on the questionnaire. The answer values are on the same order of the question that refers to the questionnaire.",
            "example" : [ 1, -1, 0, 1, 1, -1, 1, 0, 0, 0, 1, -1, -1, -1, 1 ],
            "xml" : {
              "name" : "answer_values"
            },
            "items" : {
              "$ref" : "#/components/schemas/question"
            }
          }
        },
        "description" : "Contains the selected answers of a questionnaire",
        "xml" : {
          "name" : "questionnaire_answers"
        }
      }
    }
  }
}