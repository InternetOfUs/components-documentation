{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple description of the Private Data Manager APIs",
    "version": "1.0.0",
    "title": "Private Data Manager",
    "termsOfService": "http://unitn/terms/",
    "contact": {
      "email": "s.decristofaro@unitn.it"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "streambase.disi.unitn.it",
  "basePath": "/pdm/api/v2",
  "tags": [
    {
      "name": "direct message management",
      "description": "Manage direct messages to the users"
    },
    {
      "name": "data",
      "description": "Request or send batch data"
    },
    {
      "name": "stream",
      "description": "send stream data"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/dm": {
      "post": {
        "tags": [
          "direct message management"
        ],
        "summary": "Send a Direct Message (DM) to user(s)",
        "description": "This can only be done by the logged in user.",
        "operationId": "create a Direct Message object",
        "consumes": [
          "json String"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "username",
            "required": true,
            "description": "System User"
          },
          {
            "in": "header",
            "type": "string",
            "name": "password",
            "required": true,
            "description": "User's password"
          },
          {
            "in": "header",
            "type": "string",
            "name": "usersalt",
            "required": true,
            "description": "Can be either a single user's salt or can specify a topic to which send the task using the format/topics/<sometopic>"
          },
          {
            "in": "body",
            "name": "content",
            "description": "DM object that will be sent to the user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "direct message management"
        ],
        "summary": "Get Direct Message sent to the users",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "username",
            "required": true,
            "description": "System User"
          },
          {
            "in": "header",
            "type": "string",
            "name": "password",
            "required": true,
            "description": "User's password"
          },
          {
            "in": "query",
            "type": "string",
            "name": "userid",
            "required": true,
            "description": "User id"
          },
          {
            "in": "query",
            "type": "string",
            "name": "dmid",
            "required": false,
            "description": "Direct Message id"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dm/answer": {
      "get": {
        "tags": [
          "direct message management"
        ],
        "summary": "Get answer to the Direct Message",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "username",
            "required": true,
            "description": "System User"
          },
          {
            "in": "header",
            "type": "string",
            "name": "password",
            "required": true,
            "description": "User's password"
          },
          {
            "in": "query",
            "type": "string",
            "name": "userid",
            "required": true,
            "description": "User id"
          },
          {
            "in": "query",
            "type": "string",
            "name": "taskid",
            "required": true,
            "description": "Task id"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dm/receptionconfirmation": {
      "post": {
        "tags": [
          "direct message management"
        ],
        "summary": "Reception confirmation",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "token",
            "required": true,
            "description": "User's google token"
          },
          {
            "in": "query",
            "type": "string",
            "name": "dm",
            "required": false,
            "description": "direct message id"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/report": {
      "post": {
        "tags": [
          "report"
        ],
        "summary": "Create a new report",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "email",
            "required": true,
            "description": "Super user's login email"
          },
          {
            "in": "header",
            "type": "string",
            "name": "password",
            "required": true,
            "description": "Super user's password"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "string",
                  "description": "Days on which to send the report"
                },
                "tables": {
                  "type": "string",
                  "description": "Tables of data to include in the report"
                },
                "projectid": {
                  "type": "string",
                  "description": "Experiment on which to generate the report"
                },
                "message": {
                  "type": "string",
                  "description": "Email message"
                },
                "anonyomous": {
                  "type": "string",
                  "format": "boolean",
                  "description": "Wether the report must be anonymous or not"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/stream/upload": {
      "post": {
        "tags": [
          "stream"
        ],
        "summary": "Initialize the stream to upload data",
        "parameters": [
          {
            "name": "username",
            "in": "header",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "header",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription accepted"
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/stream/upload{uploadId}": {
      "get": {
        "tags": [
          "stream"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      },
      "delete": {
        "tags": [
          "stream"
        ],
        "summary": "Delete subscription",
        "description": "Stop receiving notification",
        "parameters": [
          {
            "name": "uploadId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/stream/read": {
      "post": {
        "tags": [
          "stream"
        ],
        "summary": "Create a new reading request",
        "parameters": [
          {
            "name": "username",
            "in": "header",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "header",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription accepted"
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/stream/read/{readId}": {
      "get": {
        "tags": [
          "stream"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "readId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      },
      "delete": {
        "tags": [
          "stream"
        ],
        "summary": "Delete subscription",
        "description": "Stop receiving notification",
        "parameters": [
          {
            "name": "readId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/data/upload": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Upload a new entity's data",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      },
      "patch": {
        "tags": [
          "data"
        ],
        "summary": "Update entity's data",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "System User",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "System User's password",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      }
    },
    "/data": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Send an object specifying the data you want to receive",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "t_tile": {
          "type": "string",
          "description": "Task title"
        },
        "t_until": {
          "type": "string",
          "format": "integer",
          "description": "Time to Live"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "q": {
                "$ref": "#/definitions/QuestionAnswerTypeText"
              },
              "a": {
                "$ref": "#/definitions/QuestionAnswerTypeText"
              }
            }
          }
        }
      }
    },
    "ConditionObject": {
      "type": "object",
      "properties": {
        "a": {
          "type": "integer",
          "format": "integer",
          "description": "condition answer id"
        },
        "q": {
          "type": "integer",
          "format": "integer",
          "description": "condition question id"
        }
      }
    },
    "LanguagePointObject": {
      "type": "object",
      "properties": {
        "l": {
          "type": "string",
          "format": "string",
          "description": "language",
          "example": "en_US"
        },
        "t": {
          "type": "string",
          "format": "string",
          "description": "text",
          "example": "What are you doing?"
        }
      },
      "example": {
        "l": "en_US",
        "t": "What are you doing?"
      }
    },
    "QuestionAnswerTypeText": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer"
        },
        "c": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionObject"
          }
        },
        "c_id": {
          "type": "integer",
          "format": "integer",
          "description": "concept id",
          "example": -1
        },
        "t": {
          "type": "string",
          "format": "string",
          "description": "type"
        },
        "at": {
          "type": "string",
          "format": "string",
          "description": "Answer type",
          "example": "s"
        },
        "p": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguagePointObject"
          }
        }
      },
      "example": {
        "id": 1,
        "c": [],
        "at": "s",
        "t": "t",
        "p": [
          {
            "l": "en-US",
            "t": "What are you doing?"
          },
          {
            "l": "it-IT",
            "t": "Cosa stai facendo?"
          }
        ]
      }
    },
    "DataRequest": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "object",
          "properties": {
            "experimentId": {
              "type": "string",
              "description": "If specified returns info about every user partecipating in the experiment"
            },
            "userId": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "list of user ids"
              }
            }
          }
        },
        "dates": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "yyyymmdd"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "json string",
            "description": "list of properties"
          }
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "description of the notification"
        },
        "entities": {
          "type": "object",
          "properties": {
            "experimentId": {
              "type": "string",
              "description": "If specified returns info about every user partecipating in the experiment"
            },
            "userId": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "userIds you want to track"
              }
            }
          }
        },
        "condition": {
          "type": "object",
          "properties": {
            "properties": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "list of properties that will trigger the notification"
              }
            }
          }
        },
        "notification": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          }
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}