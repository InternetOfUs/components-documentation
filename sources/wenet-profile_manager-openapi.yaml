openapi: 3.0.1
info:
  title: WeNet - Profile manager API
  description: |-
    The profile manager component is the one responsible for storing and maintaining the WeNet user profiles and its historic. An user profile is a set of attributes that define the state of the user. Some of these attributes are filled in by the user, such as name, email, telephone,..., or by  other components of the platform, such as social relationships, routines,.... Every time a profile is modified a copy of the previous profile values is stored in the historic. This allows to know, to the rest of components, how the state of the user evolves in the time.

    Another responsibility of the profile manager is to evaluate the trust of one user over another when it is doing some action. The trust is dynamic and will be updated every time they collaborate to achieve a task. When a user has received help it can rate the performance of the user that has helped it. For this it has to post a performance rating event to the profile manager. These events are used by the profile manager when it has to provide the trust that has an user that another does a certain action. When you want to calculate the trust, you must specify some parameters that are used to select with events has to be aggregated to obtain the trust. Also you must define the aggregation function, that can be:

     - RECENCY_BASED: the trust is the averge of the last 'n' rating events. At the moment n=5.
     - AVERAGE: the trust is the average of all the rating events.
     - MEDIAN: the trust is the median of all the rating events.
     - MINIMUM: the trust is the minimum rating of all the events.
     - MAXIMUM: the trust is the maximum rating of all the events.
  contact:
    name: Bruno Rosell i Gui (UDT-IA, IIIA-CSIC)
    email: rosell@iiia.csic.es
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.11.0
servers:
- url: https://wenet.u-hopper.com/prod/profile_manager
  description: WeNet production server
- url: https://wenet.u-hopper.com/dev/profile_manager
  description: WeNet development server server
- url: http://ardid.iiia.csic.es/wenet/profile-manager/0.3.0/
  description: IIIA development server
tags:
- name: Other
  description: Other services provided by the API.
- name: Intelligences
  description: Provide the functionality to evaluate the intelligences of a person
- name: Personalities
  description: Provide the functionality to evaluate the personality of a person
- name: Historic
  description: The functionality provided allows to access to the values of the models
    in a previous dates.
- name: Profiles
  description: The functionality provided allows to access current and previous values
    of user attributes that define the user profile.  It also allows you to modify
    the current values.
- name: Trusts
  description: The functionality provided allows to manage the trust over other users.
paths:
  /intelligences:
    get:
      tags:
      - Intelligences
      summary: Obtain the intelligences test
      description: Return the questionnaire used to obtain the intelligences of a
        person
      operationId: retrieveIntelligencesQuestionnaire
      parameters:
      - name: Accept-Language
        in: header
        description: The preferred language for the text on the questionnaire. If
          it is not available the texts will be on English.
        schema:
          type: string
          default: en
        example: en
      responses:
        "200":
          description: The questionnaire to evaluate the intelligences of a person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
    post:
      tags:
      - Intelligences
      summary: Calculate the Gardner intelligences of a person
      description: Evaluate the answers to the intelligences test to obtain the Gardner
        intelligences of the person
      operationId: calculateGardnerIntelligences
      requestBody:
        description: The values of the answers that the person has selected on the
          intelligences questionnaire.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireAnswers'
        required: true
      responses:
        "200":
          description: The Gardner intelligences of the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intelligences'
        "404":
          description: If it can not calculate the Gardner intelligences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personality'
  /personalities:
    get:
      tags:
      - Personalities
      summary: Obtain the personality test
      description: Return the questionnaire used to obtain the personality of a person
      operationId: retrievePersonalityQuestionnaire
      parameters:
      - name: Accept-Language
        in: header
        description: The preferred language for the text on the questionnaire. If
          it is not available the texts will be on English.
        schema:
          type: string
          default: en
        example: en
      responses:
        "200":
          description: The questionnaire to evaluate the personality of a person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
    post:
      tags:
      - Personalities
      summary: Calculate the personality of a person
      description: Evaluate the answers to the personality test to obtain the personality
        of the person
      operationId: calculatePersonality
      requestBody:
        description: The values of the answers that the person has selected on the
          personality questionnaire.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireAnswers'
        required: true
      responses:
        "200":
          description: The personality of the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personality'
        "404":
          description: If it can not calculate the personality
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personality'
  /profiles:
    post:
      tags:
      - Profiles
      summary: Create a profile
      description: Create a new WeNet user profile
      operationId: createProfile
      requestBody:
        description: The new profile to create
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
            example:
              name:
                prefix: Dr.
                first: John
                middle: Fidgerald
                last: Kenedy
                suffix: Jr
              dateOfBirth:
                year: 1973
                month: 2
                day: 24
              gender: M
              email: jfk@president.gov
              phoneNumber: +1202-456-1111
              locale: en_US
              avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
              nationality: American
              languages:
              - name: English
                code: en
                level: C2
              occupation: President
              norms: []
              plannedActivities:
              - startTime: 2017-07-21T17:32:03Z
                endTime: 2019-07-21T17:32:23Z
                description: Visit Marilyn
                status: cancelled
              - startTime: 2017-07-21T17:32:03Z
                endTime: 2019-07-21T17:32:23Z
                description: Go to Dallas
                status: confirmed
              relevantLocations:
              - label: White house
                latitude: 38.897957
                longitude: -77.03656
              relationships: []
              socialPractices: []
              personalBehaviors: []
        required: true
      responses:
        "200":
          description: The created profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                CreatedProfile:
                  description: CreatedProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "400":
          description: Bad profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}:
    get:
      tags:
      - Profiles
      summary: Return a profile
      description: Allow to get the profile with the specified identifier
      operationId: retrieveProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The profile associated to the identifier
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                FoundProfile:
                  description: FoundProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Profiles
      summary: Modify a profile
      description: Change the attributes of a profile
      operationId: updateProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values for the profile
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
            example:
              name:
                prefix: ""
                first: null
                middle: null
                last: null
                suffix: III
              dateOfBirth:
                year: 1979
                month: 6
                day: 4
              email: jfk3@ex.president.gov
              languages:
              - name: English
                code: en
                level: C2
              - name: French
                code: fr
                level: B2
              occupation: Conferenciant
        required: true
      responses:
        "200":
          description: The updated profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                UpdatedProfile:
                  description: UpdatedProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "400":
          description: Bad profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Profiles
      summary: Delete a profiler
      description: Allow to delete a profile with an specific identifier
      operationId: deleteProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to delete
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The profile was deleted successfully
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/historic:
    get:
      tags:
      - Historic
      - Profiles
      summary: Get the status of the profile in specific time period
      description: Allow to obtain the historic of profile changes
      operationId: retrieveProfileHistoricPage
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to get the historic profiles
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: The difference, measured in seconds, between the minimum time
          stamp when the profile was enabled and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1457166440
      - name: to
        in: query
        description: The difference, measured in seconds, between the maximum time
          stamp when the profile was enabled and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1571664406
      - name: order
        in: query
        description: The order in witch has to return the profiles. From the newest
          to the oldest (descendant '-') or from the oldest to the newest (ascendant
          '+').
        schema:
          type: string
          example: '-'
          default: +
          enum:
          - '-'
          - +
      - name: offset
        in: query
        description: The index of the first task type to return.
        schema:
          type: integer
          format: int32
          default: 0
        example: 4
      - name: limit
        in: query
        description: The number maximum of task types to return
        schema:
          type: integer
          format: int32
          default: 10
        example: 100
      responses:
        "200":
          description: The found profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricWeNetUserProfilesPage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /trusts/rating:
    post:
      tags:
      - Trusts
      summary: Rate an user performance
      description: Store an event that rating the performance of an user over a task
        that it has done in WeNet
      operationId: addTrustEvent
      requestBody:
        description: The event to store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPerformanceRatingEvent'
        required: true
      responses:
        "201":
          description: The event has been stored
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserPerformanceRatingEvent'
        "400":
          description: Bad event
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /trusts/{sourceId}/with/{targetId}:
    get:
      tags:
      - Trusts
      summary: Calculate the trust of an user respect another
      description: Allow to obtain the trust that an user have respect another in
        general, respect the relationship, on a community or by task type.
      operationId: calculateTrust
      parameters:
      - name: sourceId
        in: path
        description: The identifier as reference that want to obtain the trust respect
          its point of view
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: The identifier of the user that want to have the trust
        required: true
        schema:
          type: string
      - name: appId
        in: query
        description: An application identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of the events to use on the calculus
          if you write between '/'. For example to use the events for the aplications
          '1' and '2' you must pass as 'appId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: communityId
        in: query
        description: An community identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of events to use on the calculus
          if you write between '/'. For example to use the events for the communities
          '1' and '2' you must pass as 'communityId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: taskTypeId
        in: query
        description: An task type identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of events to use on the calculus
          if you write between '/'. For example to use the events for the task types
          '1' and '2' you must pass as 'taskTypeId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: taskId
        in: query
        description: An task identifier to be equals on the events to use on the calculus.
          You can use a Perl compatible regular expressions (PCRE) that has to match
          the application identifier of the events to use on the calculus if you write
          between '/'. For example to use the events for the tasks '1' and '2' you
          must pass as 'taskId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: relationship
        in: query
        description: A relationship to be equals on the events to use on the calculus.
          You can use a Perl compatible regular expressions (PCRE) that has to match
          the application identifier of the tasks to return if you write between '/'.
          For example to use the events for the relationships 'friend' and 'family'
          you must pass as 'relationship' '/^[friend|family]$/'.
        schema:
          type: string
        example: 1
      - name: reportFrom
        in: query
        description: The difference, measured in seconds, between the minimum report
          time stamp of the event and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1457166440
      - name: reportTo
        in: query
        description: The difference, measured in seconds, between the maximum report
          time stamp of the event and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1571664406
      - name: aggregator
        in: query
        description: The type of aggregation that has to be used to calculate the
          trust.
        schema:
          type: string
          example: MAXIMUM
          default: RECENCY_BASED
          enum:
          - RECENCY_BASED
          - AVERAGE
          - MEDIAN
          - MINIMUM
          - MAXIMUM
      responses:
        "200":
          description: The calculated trust
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trust'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /versions:
    get:
      tags:
      - Other
      summary: Get the version of the API
      description: Return the current API version
      operationId: getVersion
      responses:
        "200":
          description: The API version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
components:
  schemas:
    Answer:
      type: object
      properties:
        text:
          type: string
          description: The text of the answer
          example: Compassionate
        value:
          type: number
          description: The value associated with the answer
          format: double
          example: -1
    Question:
      type: object
      properties:
        text:
          type: string
          description: The text of the question
          example: The judges must be
        help:
          type: string
          description: A message to help to answer the question
          example: 'Example: If a judge judges your brother, you must follow the laws
            that apply to everyone equally.'
        answers:
          type: array
          description: The possible answers for the question
          items:
            $ref: '#/components/schemas/Answer'
    Questionnaire:
      type: object
      properties:
        name:
          type: string
          description: A name that identifies the questionnaire for a human
          example: Personality test
        description:
          type: string
          description: Explains what attribute of a person it evaluates
          example: With this questionnaire is possible to obtain the personality of
            a person.
        questions:
          type: array
          description: The set of questions used to evaluate the person.
          items:
            $ref: '#/components/schemas/Question'
    QuestionnaireAnswers:
      type: object
      properties:
        answerValues:
          type: array
          description: The selected values for the questions on the questionnaire.
            The answer values are on the same order of the question that refers to
            the questionnaire.
          example:
          - 1
          - -1
          - 0
          - 1
          - 1
          - -1
          - 1
          - 0
          - 0
          - 0
          - 1
          - -1
          - -1
          - -1
          - 1
          items:
            type: number
            format: double
      description: Contains the selected answers of a questionnaire
    Intelligences:
      type: object
      properties:
        verbal:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The verbal intelligence
          format: double
          example: 0.1
        logicMathematics:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The logic-mathematics intelligence
          format: double
          example: 0.2
        visualSpatial:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The visual-spatial intelligence
          format: double
          example: 0.3
        kinestesicaCorporal:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The kinestesica-corporal intelligence
          format: double
          example: 0.4
        musicalRhythmic:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The musical-rhythmic intelligence
          format: double
          example: 0.5
        intrapersonal:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The intrapersonal intelligence
          format: double
          example: 0.6
        interpersonal:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The interpersonal intelligence
          format: double
          example: 0.7
        naturalistEnvironmental:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The naturalist-environmental intelligence
          format: double
          example: 0.8
      description: Provide information about the intelligences of a person
    Personality:
      type: object
      properties:
        perception:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The perception grade of a person
          format: double
          example: 0.1
        judgment:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The judgment grade of a person
          format: double
          example: 0.2
        extrovert:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The extrovert grade of a person
          format: double
          example: 0.3
        attitude:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: The attitude grade of a person
          format: double
          example: 0.4
        MBTI:
          type: string
          description: ' Myers–Briggs Type Indicator of the person personality'
          example: INFJ
      description: Provide information about the personality of a person
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: Contain code that identifies the error
          example: error_code
        message:
          type: string
          description: Contain a brief description of the error to be read by a human
          example: Error readable by a human
      description: Inform of an error that happens when interacts with the API
    HistoricWeNetUserProfile:
      type: object
      properties:
        from:
          type: integer
          description: The difference, measured in seconds, between the time when
            the profile is modified to have the current state and midnight, January
            1, 1970 UTC.
          format: int64
          example: 1457166440
        to:
          type: integer
          description: The difference, measured in seconds, between the time when
            the profile is not more valid and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571664406
        profile:
          $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
      description: The information of the user profile in a period of time.
    HistoricWeNetUserProfilesPage:
      type: object
      properties:
        offset:
          type: integer
          description: The index of the first profile returned.
          format: int32
          example: 0
        total:
          type: integer
          description: The number total of profiles that satisfies the search.
          format: int64
          example: 100
        profiles:
          type: array
          description: The set of profiles found
          items:
            $ref: '#/components/schemas/HistoricWeNetUserProfile'
      description: Contains a set of profiles found
    WeNetUserProfile:
      $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
    UserPerformanceRatingEvent:
      type: object
      properties:
        sourceId:
          type: string
          description: The identifier of the user that is providing the performance
            of another user.
          example: 88cb96277edd
        targetId:
          type: string
          description: The identifier of the user that has perform the task.
          example: bf2743937ed6
        relationship:
          type: string
          description: The relationship with the user that has perform the task
          example: friend
          enum:
          - friend
          - colleague
          - follower
          - family
          - acquaintance
        appId:
          type: string
          description: The identifier of the application where the user has performed
            the task
          example: 7ens723h6ty32
        communityId:
          type: string
          description: The identifier of the community where the user has performed
            the task
          example: 43937ed6ty32
        taskTypeId:
          type: string
          description: The identifier of task type that the rating user has done.
          example: 4ty37ed63932
        taskId:
          type: string
          description: The identifier of task that the rating user has done.
          example: d64ty39s7e32
        rating:
          type: number
          description: The rating of the user performance. It has to be on the range
            [0,1].
          format: double
          example: 0.43
        reportTime:
          type: integer
          description: The difference, measured in seconds, between the time when
            this event was reported and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571412479710
      description: The event is used to rate the performance of an user over a task
        that it has done in WeNet.
    Trust:
      type: object
      properties:
        value:
          type: number
          description: The trust over an user respect another. It has to be on the
            range [0,1].
          example: 0.43
        calculatedTime:
          type: integer
          description: The difference, measured in seconds, between the trust was
            calculated and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571412479710
      description: The calculated trust between two users.
    version:
      type: object
      properties:
        api:
          type: string
          description: Contain the implementation version number of the API
          example: 1.0.0
        software:
          type: string
          description: Contain the implementation version number of the software
          example: 1.0.0
        vendor:
          type: string
          description: Contain information of the organization that has implemented
            the API
          example: UDT-IA, IIIA-CSIC
      description: Provide the version information of the API
