openapi: 3.0.1
info:
  title: WeNet - Profile manager API
  description: |-
    The profile manager component is the one responsible for storing and maintaining the WeNet user profiles and its historic. a user profile is a set of attributes that define the state of the user. Some of these attributes are filled in by the user, such as name, email, telephone,..., or by  other components of the platform, such as social relationships, routines,.... Every time a profile is modified a copy of the previous profile values is stored in the historic. This allows to know, to the rest of components, how the state of the user evolves in the time.

    Another responsibility of the profile manager is to evaluate the trust of one user over another when it is doing some action. The trust is dynamic and will be updated every time they collaborate to achieve a task. When a user has received help it can rate the performance of the user that has helped it. For this it has to post a performance rating event to the profile manager. These events are used by the profile manager when it has to provide the trust that has a user that another does a certain action. When you want to calculate the trust, you must specify some parameters that are used to select with events has to be aggregated to obtain the trust. Also you must define the aggregation function, that can be:

     - RECENCY_BASED: the trust is the averge of the last 'n' rating events. At the moment n=5.
     - AVERAGE: the trust is the average of all the rating events.
     - MEDIAN: the trust is the median of all the rating events.
     - MINIMUM: the trust is the minimum rating of all the events.
     - MAXIMUM: the trust is the maximum rating of all the events.
  contact:
    name: Bruno Rosell i Gui (UDT-IA, IIIA-CSIC)
    email: rosell@iiia.csic.es
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.13.0
servers:
- url: https://wenet.u-hopper.com/prod/profile_manager
  description: WeNet production server
- url: https://wenet.u-hopper.com/dev/profile_manager
  description: WeNet development server server
- url: http://ardid.iiia.csic.es/wenet/profile-manager/latest/
  description: IIIA development server
tags:
- name: Profiles
  description: The functionality provided allows to access current and previous values
    of user attributes that define the user profile.  It also allows you to modify
    the current values.
- name: Communities
  description: The functionality provided allows to manipulate the communities of
    users.
- name: Intelligences
  description: Provide the functionality to evaluate the intelligences of a person
- name: Personalities
  description: Provide the functionality to evaluate the personality of a person
- name: Historic
  description: The functionality provided allows to access to the values of the models
    in a previous dates.
- name: Trusts
  description: The functionality provided allows to manage the trust over other users.
- name: Norms
  description: The functionality provided allows to manage the norms defined into
    a user/community profile.
- name: Planned activities
  description: The functionality provided allows to manage the planned activities
    defined into a user profile.
- name: Relevant locations
  description: The functionality provided allows to manage the relevant locations
    defined into a user profile.
- name: Relationships
  description: The functionality provided allows to manage the relationships defined
    into a user profile.
- name: Personal behaviors
  description: The functionality provided allows to manage the personal behaviors
    defined into a user profile.
- name: Materials
  description: The functionality provided allows to manage the materials defined into
    a user profile.
- name: Competences
  description: The functionality provided allows to manage the competences defined
    into a user profile.
- name: Meanings
  description: The functionality provided allows to manage the meanings defined into
    a user profile.
- name: Community members
  description: The functionality provided allows to manage the members of a community.
- name: Social practices
  description: The functionality provided allows to manage the social practices defined
    into a community profile.
- name: User identifiers
  description: The functionality provided allows to obtain all the user identifiers.
- name: Other
  description: Other services provided by the API.
paths:
  /communities/{id}/norms:
    get:
      tags:
      - Norms
      - Communities
      description: Allow to get all the norms defined into a community
      operationId: retrieveCommunityNorms
      parameters:
      - name: id
        in: path
        description: The identifier of community where the norm is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The norms defined into the community
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Norms
      - Communities
      description: Insert a new norm into a community
      operationId: addCommunityNorm
      parameters:
      - name: id
        in: path
        description: The identifier of the community to add the norm
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "201":
          description: The added norm into the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: Bad norm to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}/members:
    get:
      tags:
      - Community members
      - Communities
      summary: Return the community members from a community
      description: Allow to get all the community members defined into a community
      operationId: retrieveCommunityMembers
      parameters:
      - name: id
        in: path
        description: The identifier of community where the community member is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The community members defined into the community
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Community members
      - Communities
      summary: Add a community member into a community
      description: Insert a new community member into a community
      operationId: addCommunityMember
      parameters:
      - name: id
        in: path
        description: The identifier of the community to add the community member
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new community member
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        required: true
      responses:
        "201":
          description: The added community member into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        "400":
          description: Bad community member to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}/members/{userId}:
    get:
      tags:
      - Community members
      - Communities
      summary: Return a community member from a community
      description: Allow to get a community member defined into a community
      operationId: retrieveCommunityMember
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the community member is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: userId
        in: path
        description: The identifier of the community member to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The community member defined into the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        "404":
          description: Not found community or community member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Community members
      - Communities
      summary: Update a community member from a community
      description: Allow to update a community member defined into a community
      operationId: updateCommunityMember
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the community member is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: userId
        in: path
        description: The identifier of the community member to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The update values for the community member
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        required: true
      responses:
        "200":
          description: The community member that has been updated on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        "400":
          description: The community member to update is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or community member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Community members
      - Communities
      summary: Remove a community member from a community
      description: Allow to remove a community member defined into a community
      operationId: deleteCommunityMember
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the community member is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: userId
        in: path
        description: The identifier of the community member to remove
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The community member has removed successfully from the community
        "404":
          description: Not found community or community member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Community members
      - Communities
      summary: Merge a community member from a community
      description: Allow to merge a community member defined into a community
      operationId: mergeCommunityMember
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the community member is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: userId
        in: path
        description: The identifier of the community member to merge
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The merge values for the community member
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        required: true
      responses:
        "200":
          description: The community member that has been merged on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityMember
        "400":
          description: The community member to merge is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or community member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}/norms/{normId}:
    get:
      tags:
      - Norms
      - Communities
      description: Allow to get a norm defined into a community
      operationId: retrieveCommunityNorm
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the norm is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The norm defined into the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "404":
          description: Not found community or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Norms
      - Communities
      description: Allow to update a norm defined into a community
      operationId: updateCommunityNorm
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the norm is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The update values for the norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "200":
          description: The norm that has been updated on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: The norm to update is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Norms
      - Communities
      description: Allow to remove a norm defined into a community
      operationId: deleteCommunityNorm
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the norm is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to remove
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The norm has removed successfully from the community
        "404":
          description: Not found community or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Norms
      - Communities
      summary: Merge a norm from a community
      description: Allow to merge a norm defined into a community
      operationId: mergeCommunityNorm
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the norm is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to merge
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The merge values for the norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "200":
          description: The norm that has been merged on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: The norm to merge is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}:
    get:
      tags:
      - Communities
      summary: Return a community
      description: Allow to get the community with the specified identifier
      operationId: retrieveCommunity
      parameters:
      - name: id
        in: path
        description: The identifier of the community to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The community associated to the identifier
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Communities
      summary: Modify a community
      description: Change a community
      operationId: updateCommunity
      parameters:
      - name: id
        in: path
        description: The identifier of the community to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new community
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        required: true
      responses:
        "200":
          description: The updated community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        "400":
          description: Bad community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Communities
      summary: Delete a community
      description: Allow to delete a community with an specific identifier
      operationId: deleteCommunity
      parameters:
      - name: id
        in: path
        description: The identifier of the community to delete
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The community was deleted successfully
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Communities
      summary: Modify partially a community
      description: Change some attributes of a community
      operationId: mergeCommunity
      parameters:
      - name: id
        in: path
        description: The identifier of the community to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values for the community
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        required: true
      responses:
        "200":
          description: The merged community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        "400":
          description: Bad community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities:
    get:
      tags:
      - Communities
      summary: Return some communities
      description: Allow to search for some communities
      operationId: retrieveCommunityProfilesPage
      parameters:
      - name: appId
        in: query
        description: An application identifier to be equals on the communities to
          return. You can use a Perl compatible regular expressions (PCRE) that has
          to match the application identifier of the communities to return, if you
          write between '/'. For example to get the communitites for the aplications
          '1' and '2' you must pass as 'appId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: name
        in: query
        description: A name to be equals on the communities to return. You can use
          a Perl compatible regular expressions (PCRE) that has to match the name
          of the communities to return if you write between '/'. For example to get
          the communities with a name with the word 'eat' you must pass as 'name'
          '/.*eat.*/'
        schema:
          type: string
        example: /.*eat.*/
      - name: description
        in: query
        description: A description to be equals on the communities to return. You
          can use a Perl compatible regular expressions (PCRE) that has to match the
          description of the communities to return if you write between '/'. For example
          to get the communities with a description with the word 'eat' you must pass
          as 'description' '/.*eat.*/'
        schema:
          type: string
        example: /.*eat.*/
      - name: keywords
        in: query
        description: A set of keywords to be defined on the communities to be returned.
          For each keyword is separated by a ',' and each field keyword can be between
          '/' to use a Perl compatible regular expressions (PCRE) instead the exact
          value.
        schema:
          type: array
          items:
            type: string
        example: key1,/.*eat.*/,key3
      - name: members
        in: query
        description: A set of user identifiers to be a member of the communities to
          be returned. For each member is separated by a ',' and each field user identifier
          can be between '/' to use a Perl compatible regular expressions (PCRE) instead
          the exact value.
        schema:
          type: array
          items:
            type: string
        example: 1,/.*2.*/,3
      - name: order
        in: query
        description: The order in witch the communities has to be returned. For each
          filed it has be separated by a ',' and each field can start with '+' (or
          without it) to order on ascending order, or with the prefix '-' to do on
          descendant order.
        schema:
          type: array
          items:
            type: string
        example: name,-description,+members
      - name: offset
        in: query
        description: The index of the first community to return.
        schema:
          type: integer
          format: int32
          default: 0
        example: 4
      - name: limit
        in: query
        description: The number maximum of communities to return
        schema:
          type: integer
          format: int32
          default: 10
        example: 100
      responses:
        "200":
          description: The page with the communities that satisfy the search parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityProfilesPage'
        "400":
          description: If any search parameter is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Communities
      summary: Create a community
      description: Create a new  community
      operationId: createCommunity
      requestBody:
        description: The new community to create
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        required: true
      responses:
        "200":
          description: The created community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
        "400":
          description: Bad community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}/socialPractices/{socialPracticeId}:
    get:
      tags:
      - Social practices
      - Communities
      description: Allow to get a social practice defined into a community
      operationId: retrieveCommunitySocialPractice
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the social practice is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: socialPracticeId
        in: path
        description: The identifier of the social practice to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The social practice defined into the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        "404":
          description: Not found community or social practice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Social practices
      - Communities
      description: Allow to update a social practice defined into a community
      operationId: updateCommunitySocialPractice
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the social practice is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: socialPracticeId
        in: path
        description: The identifier of the social practice to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The update values for the social practice
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        required: true
      responses:
        "200":
          description: The social practice that has been updated on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        "400":
          description: The social practice to update is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or social practice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Social practices
      - Communities
      description: Allow to remove a social practice defined into a community
      operationId: deleteCommunitySocialPractice
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the social practice is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: socialPracticeId
        in: path
        description: The identifier of the social practice to remove
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The social practice has removed successfully from the community
        "404":
          description: Not found community or social practice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Social practices
      - Communities
      description: Allow to merge a social practice defined into a community
      operationId: mergeCommunitySocialPractice
      parameters:
      - name: id
        in: path
        description: The identifier of the community where the social practice is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: socialPracticeId
        in: path
        description: The identifier of the social practice to merge
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The merge values for the social practice
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        required: true
      responses:
        "200":
          description: The social practice that has been merged on the community
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        "400":
          description: The social practice to merge is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community or social practice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /communities/{id}/socialPractices:
    get:
      tags:
      - Social practices
      - Communities
      description: Allow to get all the social practices defined into a community
      operationId: retrieveCommunitySocialPractices
      parameters:
      - name: id
        in: path
        description: The identifier of community where the social practice is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The social practices defined into the community
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Social practices
      - Communities
      description: Insert a new social practice into a community
      operationId: addCommunitySocialPractice
      parameters:
      - name: id
        in: path
        description: The identifier of the community to add the social practice
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new social practice
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        required: true
      responses:
        "201":
          description: The added social practice into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialPractice
        "400":
          description: Bad social practice to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found community
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /help/info:
    get:
      tags:
      - Other
      summary: Get the information about the API
      description: Return the relevant information of the API implementation
      operationId: getInfo
      responses:
        "200":
          description: The API information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
  /help/openapi.yaml:
    get:
      tags:
      - Other
      summary: Get the Open API description
      description: Return the Open API description of this API
      operationId: getOpenApi
      responses:
        "200":
          description: The API description
  /intelligences:
    get:
      tags:
      - Intelligences
      summary: Obtain the intelligences test
      description: Return the questionnaire used to obtain the intelligences of a
        person
      operationId: retrieveIntelligencesQuestionnaire
      parameters:
      - name: Accept-Language
        in: header
        description: The preferred language for the text on the questionnaire. If
          it is not available the texts will be on English.
        schema:
          type: string
          default: en
        example: en
      responses:
        "200":
          description: The questionnaire to evaluate the intelligences of a person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
    post:
      tags:
      - Intelligences
      summary: Calculate the Gardner intelligences of a person
      description: Evaluate the answers to the intelligences test to obtain the Gardner
        intelligences of the person
      operationId: calculateGardnerIntelligences
      requestBody:
        description: The values of the answers that the person has selected on the
          intelligences questionnaire.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireAnswers'
        required: true
      responses:
        "200":
          description: The Meanings with the Gardner intelligences of the person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "404":
          description: If it can not calculate the Gardner intelligences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /personalities:
    get:
      tags:
      - Personalities
      summary: Obtain the personality test
      description: Return the questionnaire used to obtain the personality of a person
      operationId: retrievePersonalityQuestionnaire
      parameters:
      - name: Accept-Language
        in: header
        description: The preferred language for the text on the questionnaire. If
          it is not available the texts will be on English.
        schema:
          type: string
          default: en
        example: en
      responses:
        "200":
          description: The questionnaire to evaluate the personality of a person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
    post:
      tags:
      - Personalities
      summary: Calculate the personality of a person
      description: Evaluate the answers to the personality test to obtain the personality
        of the person
      operationId: calculatePersonality
      requestBody:
        description: The values of the answers that the person has selected on the
          personality questionnaire.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireAnswers'
        required: true
      responses:
        "200":
          description: The personality of the person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "404":
          description: If it can not calculate the personality
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}:
    get:
      tags:
      - Profiles
      summary: Return a profile
      description: Allow to get the profile with the specified identifier
      operationId: retrieveProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The profile associated to the identifier
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                FoundProfile:
                  description: FoundProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Profiles
      summary: Modify a profile
      description: Change a profile
      operationId: updateProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new profile
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
            example:
              name:
                prefix: ""
                first: null
                middle: null
                last: null
                suffix: III
              dateOfBirth:
                year: 1979
                month: 6
                day: 4
              email: jfk3@ex.president.gov
              languages:
              - name: English
                code: en
                level: C2
              - name: French
                code: fr
                level: B2
              occupation: Conferenciant
        required: true
      responses:
        "200":
          description: The updated profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                UpdatedProfile:
                  description: UpdatedProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "400":
          description: Bad profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Profiles
      summary: Delete a profile
      description: Allow to delete a profile with an specific identifier
      operationId: deleteProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to delete
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The profile was deleted successfully
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Profiles
      summary: Modify partially a profile
      description: Change some attributes of a profile
      operationId: mergeProfile
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to update
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values for the profile
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
            example:
              name:
                prefix: ""
                first: null
                middle: null
                last: null
                suffix: III
              dateOfBirth:
                year: 1979
                month: 6
                day: 4
              email: jfk3@ex.president.gov
              languages:
              - name: English
                code: en
                level: C2
              - name: French
                code: fr
                level: B2
              occupation: Conferenciant
        required: true
      responses:
        "200":
          description: The merged profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                UpdatedProfile:
                  description: UpdatedProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "400":
          description: Bad profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/norms/{normId}:
    get:
      tags:
      - Norms
      - Profiles
      summary: Return a norm from a profile
      description: Allow to get a norm defined into a profile
      operationId: retrieveProfileNorm
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the norm is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The norm defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "404":
          description: Not found profile or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Norms
      - Profiles
      summary: Update a norm from a profile
      description: Allow to modify a norm defined into a profile
      operationId: updateProfileNorm
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the norm is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to update the norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "200":
          description: The updated norm
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: Bad norm to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Norms
      - Profiles
      summary: Delete a norm from a profile
      description: Allow to delete a defined norm from a profile
      operationId: deleteProfileNorm
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the norm is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to delete
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The norm defined into the profile
        "404":
          description: Not found profile or norm
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Norms
      - Profiles
      summary: Change a norm from a profile
      description: Allow to modify parts of a norm defined into a profile
      operationId: mergeProfileNorm
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the norm is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: normId
        in: path
        description: The identifier of the norm to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to merge the norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "200":
          description: The current values of the norm after it has been merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: Bad norm to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or norm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/plannedActivities:
    get:
      tags:
      - Planned activities
      - Profiles
      summary: Return the planned activities from a profile
      description: Allow to get all the planned activities defined into a profile
      operationId: retrieveProfilePlannedActivities
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the planned
          activity is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The planned activities defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Planned activities
      - Profiles
      summary: Add a planned activity into a profile
      description: Insert a new planned activity into a profile
      operationId: addProfilePlannedActivity
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the planned
          activity
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new planned activity
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        required: true
      responses:
        "201":
          description: The added planned activity into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        "400":
          description: Bad planned activity to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/plannedActivities/{plannedActivityId}:
    get:
      tags:
      - Planned activities
      - Profiles
      summary: Return a planned activity from a profile
      description: Allow to get a planned activity defined into a profile
      operationId: retrieveProfilePlannedActivity
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the planned
          activity is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: plannedActivityId
        in: path
        description: The identifier of the planned activity to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The planned activity defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        "404":
          description: Not found profile or planned activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Planned activities
      - Profiles
      summary: Update a planned activity from a profile
      description: Allow to modify a planned activity defined into a profile
      operationId: updateProfilePlannedActivity
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the planned
          activity is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: plannedActivityId
        in: path
        description: The identifier of the planned activity to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to update the planned activity
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        required: true
      responses:
        "200":
          description: The updated planned activity
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        "400":
          description: Bad planned activity to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or planned activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Planned activities
      - Profiles
      summary: Delete a planned activity from a profile
      description: Allow to delete a defined planned activity from a profile
      operationId: deleteProfilePlannedActivity
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the planned
          activity is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: plannedActivityId
        in: path
        description: The identifier of the planned activity to delete
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The planned activity defined into the profile
        "404":
          description: Not found profile or planned activity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Planned activities
      - Profiles
      summary: Change a planned activity from a profile
      description: Allow to modify parts of a planned activity defined into a profile
      operationId: mergeProfilePlannedActivity
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the planned
          activity is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: plannedActivityId
        in: path
        description: The identifier of the planned activity to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to merge the planned activity
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        required: true
      responses:
        "200":
          description: The current values of the planned activity after it has been
            merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/PlannedActivity
        "400":
          description: Bad planned activity to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or planned activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/relevantLocations:
    get:
      tags:
      - Relevant locations
      - Profiles
      summary: Return the relevant locations from a profile
      description: Allow to get all the relevant locations defined into a profile
      operationId: retrieveProfileRelevantLocations
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relevant
          location is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The relevant locations defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Relevant locations
      - Profiles
      summary: Add a relevant location into a profile
      description: Insert a new relevant location into a profile
      operationId: addProfileRelevantLocation
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the relevant
          location
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new relevant location
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        required: true
      responses:
        "201":
          description: The added relevant location into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        "400":
          description: Bad relevant location to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/relevantLocations/{relevantLocationId}:
    get:
      tags:
      - Relevant locations
      - Profiles
      summary: Return a relevant location from a profile
      description: Allow to get a relevant location defined into a profile
      operationId: retrieveProfileRelevantLocation
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relevant
          location is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: relevantLocationId
        in: path
        description: The identifier of the relevant location to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The relevant location defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        "404":
          description: Not found profile or relevant location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Relevant locations
      - Profiles
      summary: Update a relevant location from a profile
      description: Allow to modify a relevant location defined into a profile
      operationId: updateProfileRelevantLocation
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relevant
          location is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: relevantLocationId
        in: path
        description: The identifier of the relevant location to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to update the relevant location
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        required: true
      responses:
        "200":
          description: The updated relevant location
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        "400":
          description: Bad relevant location to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or relevant location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Relevant locations
      - Profiles
      summary: Delete a relevant location from a profile
      description: Allow to delete a defined relevant location from a profile
      operationId: deleteProfileRelevantLocation
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relevant
          location is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: relevantLocationId
        in: path
        description: The identifier of the relevant location to delete
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "204":
          description: The relevant location defined into the profile
        "404":
          description: Not found profile or relevant location
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Relevant locations
      - Profiles
      summary: Change a relevant location from a profile
      description: Allow to modify parts of a relevant location defined into a profile
      operationId: mergeProfileRelevantLocation
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relevant
          location is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: relevantLocationId
        in: path
        description: The identifier of the relevant location to get
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new values to merge the relevant location
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        required: true
      responses:
        "200":
          description: The current values of the relevant location after it has been
            merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/RelevantLocation
        "400":
          description: Bad relevant location to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or relevant location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/relationships:
    get:
      tags:
      - Relationships
      - Profiles
      summary: Return the relationships from a profile
      description: Allow to get all the relationships defined into a profile
      operationId: retrieveProfileRelationships
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relationship
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The relationships defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Relationships
      - Profiles
      summary: Add a relationship into a profile
      description: Insert a new relationship into a profile
      operationId: addProfileRelationship
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the relationship
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new relationship
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        required: true
      responses:
        "201":
          description: The added relationship into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        "400":
          description: Bad relationship to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/relationships/{index}:
    get:
      tags:
      - Relationships
      - Profiles
      summary: Return a relationship from a profile
      description: Allow to get a relationship defined into a profile
      operationId: retrieveProfileRelationship
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relationship
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the relationship to get
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "200":
          description: The relationship defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        "404":
          description: Not found profile or relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Relationships
      - Profiles
      summary: Update a relationship from a profile
      description: Allow to modify a relationship defined into a profile
      operationId: updateProfileRelationship
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relationship
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the relationship to update
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to update the relationship
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        required: true
      responses:
        "200":
          description: The updated relationship
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        "400":
          description: Bad relationship to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Relationships
      - Profiles
      summary: Delete a relationship from a profile
      description: Allow to delete a defined relationship from a profile
      operationId: deleteProfileRelationship
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relationship
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the relationship to delete
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "204":
          description: The relationship defined into the profile
        "404":
          description: Not found profile or relationship
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Relationships
      - Profiles
      summary: Change a relationship from a profile
      description: Allow to modify parts of a relationship defined into a profile
      operationId: mergeProfileRelationship
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the relationship
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The identifier of the relationship to merge
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to merge the relationship
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        required: true
      responses:
        "200":
          description: The current values of the relationship after it has been merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/SocialNetworkRelationship
        "400":
          description: Bad relationship to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles:
    get:
      tags:
      - Profiles
      summary: Return some profiles
      description: Allow to get some user profiles
      operationId: retrieveProfilesPage
      parameters:
      - name: offset
        in: query
        description: The index of the first user profile to return.
        schema:
          type: integer
          format: int32
          default: 0
        example: 4
      - name: limit
        in: query
        description: The number maximum of user profiles to return
        schema:
          type: integer
          format: int32
          default: 10000
        example: 100
      responses:
        "200":
          description: The page with the user profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeNetUserProfilesPage'
        "400":
          description: If any of the search pattern is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Profiles
      summary: Create a profile
      description: Create a new WeNet user profile
      operationId: createProfile
      requestBody:
        description: The new profile to create
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
            example:
              name:
                prefix: Dr.
                first: John
                middle: Fidgerald
                last: Kenedy
                suffix: Jr
              dateOfBirth:
                year: 1973
                month: 2
                day: 24
              gender: M
              email: jfk@president.gov
              phoneNumber: +1202-456-1111
              locale: en_US
              avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
              nationality: American
              languages:
              - name: English
                code: en
                level: C2
              occupation: President
              norms: []
              plannedActivities:
              - startTime: 2017-07-21T17:32:03Z
                endTime: 2019-07-21T17:32:23Z
                description: Visit Marilyn
                status: cancelled
              - startTime: 2017-07-21T17:32:03Z
                endTime: 2019-07-21T17:32:23Z
                description: Go to Dallas
                status: confirmed
              relevantLocations:
              - label: White house
                latitude: 38.897957
                longitude: -77.03656
              relationships: []
              personalBehaviors: []
        required: true
      responses:
        "201":
          description: The created profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
              examples:
                CreatedProfile:
                  description: CreatedProfile
                  value:
                    id: 5e4ced814e1dc208a5f7bd25
                    name:
                      prefix: Dr.
                      first: John
                      middle: Fidgerald
                      last: Kenedy
                      suffix: Jr
                    dateOfBirth:
                      year: 1973
                      month: 2
                      day: 24
                    gender: M
                    email: jfk@president.gov
                    phoneNumber: +1 202-456-1111
                    locale: en_US
                    avatar: https://upload.wikimedia.org/wikipedia/commons/1/1e/JFK_White_House_portrait_looking_up_lighting_corrected.jpg
                    nationality: American
                    languages:
                    - name: English
                      code: en
                      level: C2
                    occupation: President
                    plannedActivities:
                    - id: ef06fe75-e8bd-41ca-9624-f60289c11de4
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Visit Marilyn
                      status: cancelled
                    - id: b6c9a9da-1832-45ba-9580-a6fef6daa62a
                      startTime: 2017-07-21T17:32:03Z
                      endTime: 2019-07-21T17:32:23Z
                      description: Go to Dallas
                      status: confirmed
                    relevantLocations:
                    - id: f7c4eccc-a654-4b6f-ab82-fd01cd2d47e3
                      label: White house
                      latitude: 38.897957
                      longitude: -77.03656
                    _creationTs: 1582099841815
                    _lastUpdateTs: 1582099841815
        "400":
          description: Bad profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/personalBehaviors:
    get:
      tags:
      - Personal behaviors
      - Profiles
      summary: Return the personal behaviors from a profile
      description: Allow to get all the personal behaviors defined into a profile
      operationId: retrieveProfilePersonalBehaviors
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the personal
          behavior is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The personal behaviors defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Personal behaviors
      - Profiles
      summary: Add a personal behavior into a profile
      description: Insert a new personal behavior into a profile
      operationId: addProfilePersonalBehavior
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the personal
          behavior
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new personal behavior
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        required: true
      responses:
        "201":
          description: The added personal behavior into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        "400":
          description: Bad personal behavior to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/personalBehaviors/{index}:
    get:
      tags:
      - Personal behaviors
      - Profiles
      summary: Return a personal behavior from a profile
      description: Allow to get a personal behavior defined into a profile
      operationId: retrieveProfilePersonalBehavior
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the personal
          behavior is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the personal behavior to get
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "200":
          description: The personal behavior defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        "404":
          description: Not found profile or personal behavior
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Personal behaviors
      - Profiles
      summary: Update a personal behavior from a profile
      description: Allow to modify a personal behavior defined into a profile
      operationId: updateProfilePersonalBehavior
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the personal
          behavior is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the personal behavior to update
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to update the personal behavior
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        required: true
      responses:
        "200":
          description: The updated personal behavior
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        "400":
          description: Bad personal behavior to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or personal behavior
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Personal behaviors
      - Profiles
      summary: Delete a personal behavior from a profile
      description: Allow to delete a defined personal behavior from a profile
      operationId: deleteProfilePersonalBehavior
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the personal
          behavior is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the personal behavior on the profile to delete
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "204":
          description: The personal behavior defined into the profile
        "404":
          description: Not found profile or personal behavior
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Personal behaviors
      - Profiles
      summary: Change a personal behavior from a profile
      description: Allow to modify parts of a personal behavior defined into a profile
      operationId: mergeProfilePersonalBehavior
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the personal
          behavior is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the personal behavior on the profile to merge
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to merge the personal behavior
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        required: true
      responses:
        "200":
          description: The current values of the personal behavior after it has been
            merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Routine
        "400":
          description: Bad personal behavior to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or personal behavior
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/materials:
    get:
      tags:
      - Materials
      - Profiles
      summary: Return the materials from a profile
      description: Allow to get all the materials defined into a profile
      operationId: retrieveProfileMaterials
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the material
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The materials defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Materials
      - Profiles
      summary: Add a material into a profile
      description: Insert a new material into a profile
      operationId: addProfileMaterial
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the material
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new material
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        required: true
      responses:
        "201":
          description: The added material into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        "400":
          description: Bad material to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/materials/{index}:
    get:
      tags:
      - Materials
      - Profiles
      summary: Return a material from a profile
      description: Allow to get a material defined into a profile
      operationId: retrieveProfileMaterial
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the material
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the material to get
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "200":
          description: The material defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        "404":
          description: Not found profile or material
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Materials
      - Profiles
      summary: Update a material from a profile
      description: Allow to modify a material defined into a profile
      operationId: updateProfileMaterial
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the material
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the material to update
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to update the material
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        required: true
      responses:
        "200":
          description: The updated material
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        "400":
          description: Bad material to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or material
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Materials
      - Profiles
      summary: Delete a material from a profile
      description: Allow to delete a defined material from a profile
      operationId: deleteProfileMaterial
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the material
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the material on the profile to delete
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "204":
          description: The material defined into the profile
        "404":
          description: Not found profile or material
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Materials
      - Profiles
      summary: Change a material from a profile
      description: Allow to modify parts of a material defined into a profile
      operationId: mergeProfileMaterial
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the material
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the material on the profile to merge
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to merge the material
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        required: true
      responses:
        "200":
          description: The current values of the material after it has been merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Material
        "400":
          description: Bad material to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or material
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/competences:
    get:
      tags:
      - Competences
      - Profiles
      summary: Return the competences from a profile
      description: Allow to get all the competences defined into a profile
      operationId: retrieveProfileCompetences
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the competence
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The competences defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Competences
      - Profiles
      summary: Add a competence into a profile
      description: Insert a new competence into a profile
      operationId: addProfileCompetence
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the competence
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new competence
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        required: true
      responses:
        "201":
          description: The added competence into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        "400":
          description: Bad competence to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/competences/{index}:
    get:
      tags:
      - Competences
      - Profiles
      summary: Return a competence from a profile
      description: Allow to get a competence defined into a profile
      operationId: retrieveProfileCompetence
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the competence
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the competence to get
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "200":
          description: The competence defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        "404":
          description: Not found profile or competence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Competences
      - Profiles
      summary: Update a competence from a profile
      description: Allow to modify a competence defined into a profile
      operationId: updateProfileCompetence
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the competence
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the competence to update
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to update the competence
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        required: true
      responses:
        "200":
          description: The updated competence
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        "400":
          description: Bad competence to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or competence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Competences
      - Profiles
      summary: Delete a competence from a profile
      description: Allow to delete a defined competence from a profile
      operationId: deleteProfileCompetence
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the competence
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the competence on the profile to delete
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "204":
          description: The competence defined into the profile
        "404":
          description: Not found profile or competence
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Competences
      - Profiles
      summary: Change a competence from a profile
      description: Allow to modify parts of a competence defined into a profile
      operationId: mergeProfileCompetence
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the competence
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the competence on the profile to merge
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to merge the competence
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        required: true
      responses:
        "200":
          description: The current values of the competence after it has been merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Competence
        "400":
          description: Bad competence to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or competence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/meanings:
    get:
      tags:
      - Meanings
      - Profiles
      summary: Return the meanings from a profile
      description: Allow to get all the meanings defined into a profile
      operationId: retrieveProfileMeanings
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the meaning
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The meanings defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Meanings
      - Profiles
      summary: Add a meaning into a profile
      description: Insert a new meaning into a profile
      operationId: addProfileMeaning
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to the profile to add the meaning
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      requestBody:
        description: The new meaning
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        required: true
      responses:
        "201":
          description: The added meaning into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "400":
          description: Bad meaning to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/meanings/{index}:
    get:
      tags:
      - Meanings
      - Profiles
      summary: Return a meaning from a profile
      description: Allow to get a meaning defined into a profile
      operationId: retrieveProfileMeaning
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the meaning
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the meaning to get
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "200":
          description: The meaning defined into the profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "404":
          description: Not found profile or meaning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
      - Meanings
      - Profiles
      summary: Update a meaning from a profile
      description: Allow to modify a meaning defined into a profile
      operationId: updateProfileMeaning
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the meaning
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the meaning to update
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to update the meaning
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        required: true
      responses:
        "200":
          description: The updated meaning
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "400":
          description: Bad meaning to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or meaning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - Meanings
      - Profiles
      summary: Delete a meaning from a profile
      description: Allow to delete a defined meaning from a profile
      operationId: deleteProfileMeaning
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the meaning
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the meaning on the profile to delete
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "204":
          description: The meaning defined into the profile
        "404":
          description: Not found profile or meaning
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
      - Meanings
      - Profiles
      summary: Change a meaning from a profile
      description: Allow to modify parts of a meaning defined into a profile
      operationId: mergeProfileMeaning
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the meaning
          is defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      - name: index
        in: path
        description: The index of the meaning on the profile to merge
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      requestBody:
        description: The new values to merge the meaning
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        required: true
      responses:
        "200":
          description: The current values of the meaning after it has been merged
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Meaning
        "400":
          description: Bad meaning to merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found profile or meaning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/historic:
    get:
      tags:
      - Historic
      - Profiles
      summary: Get the status of the profile in specific time period
      description: Allow to obtain the historic of profile changes
      operationId: retrieveProfileHistoricPage
      parameters:
      - name: userId
        in: path
        description: The identifier of the user to get the historic profiles
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: The difference, measured in seconds, between the minimum time
          stamp when the profile was enabled and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1457166440
      - name: to
        in: query
        description: The difference, measured in seconds, between the maximum time
          stamp when the profile was enabled and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1571664406
      - name: order
        in: query
        description: The order in witch has to return the profiles. From the newest
          to the oldest (descendant '-') or from the oldest to the newest (ascendant
          '+').
        schema:
          type: string
          example: '-'
          default: +
          enum:
          - '-'
          - +
      - name: offset
        in: query
        description: The index of the first task type to return.
        schema:
          type: integer
          format: int32
          default: 0
        example: 4
      - name: limit
        in: query
        description: The number maximum of task types to return
        schema:
          type: integer
          format: int32
          default: 10
        example: 100
      responses:
        "200":
          description: The found profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricWeNetUserProfilesPage'
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /profiles/{userId}/norms:
    get:
      tags:
      - Norms
      - Profiles
      summary: Return the norms from a profile
      description: Allow to get all the norms defined into a profile
      operationId: retrieveProfileNorms
      parameters:
      - name: userId
        in: path
        description: The identifier of the user for the profile where the norm is
          defined
        required: true
        schema:
          type: string
        example: 15837028-645a-4a55-9aaf-ceb846439eba
      responses:
        "200":
          description: The norms defined into the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "404":
          description: Not found profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
      - Norms
      - Profiles
      summary: Add a norm into an user profile
      description: Insert a new norm into an user profile
      operationId: addProfileNorm
      parameters:
      - name: userId
        in: path
        description: The identifier of the user profile to add the norm
        required: true
        schema:
          type: string
        example: ceb846439eba-645a-4a55-9aaf-15837028
      requestBody:
        description: The new norm
        content:
          application/json:
            schema:
              $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        required: true
      responses:
        "201":
          description: The added norm into the user profile
          content:
            application/json:
              schema:
                $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/Norm
        "400":
          description: Bad norm to add
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not found user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /trusts/rating:
    post:
      tags:
      - Trusts
      summary: Rate an user performance
      description: Store an event that rating the performance of an user over a task
        that it has done in WeNet
      operationId: addTrustEvent
      requestBody:
        description: The event to store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPerformanceRatingEvent'
        required: true
      responses:
        "201":
          description: The event has been stored
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserPerformanceRatingEvent'
        "400":
          description: Bad event
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /trusts/{sourceId}/with/{targetId}:
    get:
      tags:
      - Trusts
      summary: Calculate the trust of an user respect another
      description: Allow to obtain the trust that an user have respect another in
        general, respect the relationship, on a community or by task type.
      operationId: calculateTrust
      parameters:
      - name: sourceId
        in: path
        description: The identifier as reference that want to obtain the trust respect
          its point of view
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: The identifier of the user that want to have the trust
        required: true
        schema:
          type: string
      - name: appId
        in: query
        description: An application identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of the events to use on the calculus
          if you write between '/'. For example to use the events for the aplications
          '1' and '2' you must pass as 'appId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: communityId
        in: query
        description: An community identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of events to use on the calculus
          if you write between '/'. For example to use the events for the communities
          '1' and '2' you must pass as 'communityId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: taskTypeId
        in: query
        description: An task type identifier to be equals on the events to use on
          the calculus. You can use a Perl compatible regular expressions (PCRE) that
          has to match the application identifier of events to use on the calculus
          if you write between '/'. For example to use the events for the task types
          '1' and '2' you must pass as 'taskTypeId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: taskId
        in: query
        description: An task identifier to be equals on the events to use on the calculus.
          You can use a Perl compatible regular expressions (PCRE) that has to match
          the application identifier of the events to use on the calculus if you write
          between '/'. For example to use the events for the tasks '1' and '2' you
          must pass as 'taskId' '/^[1|2]$/'.
        schema:
          type: string
        example: 1
      - name: relationship
        in: query
        description: A relationship to be equals on the events to use on the calculus.
          You can use a Perl compatible regular expressions (PCRE) that has to match
          the application identifier of the tasks to return if you write between '/'.
          For example to use the events for the relationships 'friend' and 'family'
          you must pass as 'relationship' '/^[friend|family]$/'.
        schema:
          type: string
        example: 1
      - name: reportFrom
        in: query
        description: The difference, measured in seconds, between the minimum report
          time stamp of the event and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1457166440
      - name: reportTo
        in: query
        description: The difference, measured in seconds, between the maximum report
          time stamp of the event and midnight, January 1, 1970 UTC.
        schema:
          type: integer
          format: int64
        example: 1571664406
      - name: aggregator
        in: query
        description: The type of aggregation that has to be used to calculate the
          trust.
        schema:
          type: string
          example: MAXIMUM
          default: RECENCY_BASED
          enum:
          - RECENCY_BASED
          - AVERAGE
          - MEDIAN
          - MINIMUM
          - MAXIMUM
      responses:
        "200":
          description: The calculated trust
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trust'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /userIdentifiers:
    get:
      tags:
      - User identifiers
      summary: Return the identifiers of the users
      description: Allow to get some user identifiers
      operationId: getUserIdentifiersPage
      parameters:
      - name: offset
        in: query
        description: The index of the first task type to return
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: The number maximum of task types to return
        schema:
          type: integer
          format: int32
          default: 10000
      responses:
        "200":
          description: The page with the user identifiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentifiersPage'
        "400":
          description: If any of the search pattern is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: Contain code that identifies the error
          example: error_code
        message:
          type: string
          description: Contain a brief description of the error to be read by a human
          example: Error readable by a human
      description: Inform of an error that happens when interacts with the API
    CommunityProfilesPage:
      type: object
      properties:
        offset:
          type: integer
          description: The index of the first community returned.
          format: int32
          example: 0
        total:
          type: integer
          description: The number total of communities that satisfies the search.
          format: int64
          example: 100
        communities:
          type: array
          description: The set of communities found
          items:
            $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/CommunityProfile
      description: Contains a set of communities found
    Info:
      type: object
      properties:
        name:
          type: string
          description: Contain the name of the API
          example: wenet/profile-manager
        apiVersion:
          type: string
          description: Contain the implementation version number of the API
          example: 1.0.0
        softwareVersion:
          type: string
          description: Contain the implementation version number of the software
          example: 1.0.0
        vendor:
          type: string
          description: Contain information of the organization that has implemented
            the API
          example: UDT-IA, IIIA-CSIC
        license:
          type: string
          description: Contain information of the license of the API
          example: MIT
      description: Provide the version information of the API
    Answer:
      type: object
      properties:
        text:
          type: string
          description: The text of the answer
          example: Compassionate
        value:
          type: number
          description: The value associated with the answer
          format: double
          example: -1
    Question:
      type: object
      properties:
        text:
          type: string
          description: The text of the question
          example: The judges must be
        help:
          type: string
          description: A message to help to answer the question
          example: 'Example: If a judge judges your brother, you must follow the laws
            that apply to everyone equally.'
        answers:
          type: array
          description: The possible answers for the question
          items:
            $ref: '#/components/schemas/Answer'
    Questionnaire:
      type: object
      properties:
        name:
          type: string
          description: A name that identifies the questionnaire for a human
          example: Personality test
        description:
          type: string
          description: Explains what attribute of a person it evaluates
          example: With this questionnaire is possible to obtain the personality of
            a person.
        questions:
          type: array
          description: The set of questions used to evaluate the person.
          items:
            $ref: '#/components/schemas/Question'
    QuestionnaireAnswers:
      type: object
      properties:
        answerValues:
          type: array
          description: The selected values for the questions on the questionnaire.
            The answer values are on the same order of the question that refers to
            the questionnaire.
          example:
          - 1
          - -1
          - 0
          - 1
          - 1
          - -1
          - 1
          - 0
          - 0
          - 0
          - 1
          - -1
          - -1
          - -1
          - 1
          items:
            type: number
            format: double
      description: Contains the selected answers of a questionnaire
    WeNetUserProfilesPage:
      type: object
      properties:
        offset:
          type: integer
          description: The index of the first profile returned.
          format: int32
          example: 0
        total:
          type: integer
          description: The number total of profiles that satisfies the search.
          format: int64
          example: 100
        profiles:
          type: array
          description: The set of profiles found
          items:
            $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
      description: Contains a set of profiles found
    HistoricWeNetUserProfile:
      type: object
      properties:
        from:
          type: integer
          description: The difference, measured in seconds, between the time when
            the profile is modified to have the current state and midnight, January
            1, 1970 UTC.
          format: int64
          example: 1457166440
        to:
          type: integer
          description: The difference, measured in seconds, between the time when
            the profile is not more valid and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571664406
        profile:
          $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
      description: The information of the user profile in a period of time.
    HistoricWeNetUserProfilesPage:
      type: object
      properties:
        offset:
          type: integer
          description: The index of the first profile returned.
          format: int32
          example: 0
        total:
          type: integer
          description: The number total of profiles that satisfies the search.
          format: int64
          example: 100
        profiles:
          type: array
          description: The set of profiles found
          items:
            $ref: '#/components/schemas/HistoricWeNetUserProfile'
      description: Contains a set of profiles found
    WeNetUserProfile:
      $ref: https://bitbucket.org/wenet/wenet-components-documentation/raw/master/sources/wenet-models-openapi.yaml#/components/schemas/WeNetUserProfile
    UserPerformanceRatingEvent:
      type: object
      properties:
        sourceId:
          type: string
          description: The identifier of the user that is providing the performance
            of another user.
          example: 88cb96277edd
        targetId:
          type: string
          description: The identifier of the user that has perform the task.
          example: bf2743937ed6
        relationship:
          type: string
          description: The relationship with the user that has perform the task
          example: friend
          enum:
          - friend
          - colleague
          - follower
          - family
          - acquaintance
        appId:
          type: string
          description: The identifier of the application where the user has performed
            the task
          example: 7ens723h6ty32
        communityId:
          type: string
          description: The identifier of the community where the user has performed
            the task
          example: 43937ed6ty32
        taskTypeId:
          type: string
          description: The identifier of task type that the rating user has done.
          example: 4ty37ed63932
        taskId:
          type: string
          description: The identifier of task that the rating user has done.
          example: d64ty39s7e32
        rating:
          type: number
          description: The rating of the user performance. It has to be on the range
            [0,1].
          format: double
          example: 0.43
        reportTime:
          type: integer
          description: The difference, measured in seconds, between the time when
            this event was reported and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571412479710
      description: The event is used to rate the performance of an user over a task
        that it has done in WeNet.
    Trust:
      type: object
      properties:
        value:
          type: number
          description: The trust over an user respect another. It has to be on the
            range [0,1].
          example: 0.43
        calculatedTime:
          type: integer
          description: The difference, measured in seconds, between the trust was
            calculated and midnight, January 1, 1970 UTC.
          format: int64
          example: 1571412479710
      description: The calculated trust between two users.
    UserIdentifiersPage:
      type: object
      properties:
        offset:
          type: integer
          description: The index of the first user identifier returned.
          format: int32
          example: 0
        total:
          type: integer
          description: The number total of user identifiers that satisfies the search.
          format: int64
          example: 100
        userIds:
          type: array
          description: The found user identifiers
          items:
            type: string
      description: Contains a set of user identifiers
